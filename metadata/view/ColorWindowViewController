{
    "type": "Ext.app.ViewController",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "colorwindow",
        "designer|userClassName": "ColorWindowViewController"
    },
    "configAlternates": {
        "designer|userAlias": "string",
        "designer|userClassName": "string"
    },
    "name": "MyWindowViewController",
    "designerId": "b0c65c55-6cce-4345-8afd-a2ce470d362a",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "colorways"
                ],
                "fn": "initialize",
                "implHandler": [
                    "//generate the default colorways in design",
                    "//         for(var i=0; i<defaultColorway.color.length; i++){",
                    "//             response.color[i].name = defaultColorway.color[i].name;",
                    "//         }",
                    "var me = this;",
                    "var cWin = this.getView();",
                    "var rec = cWin.down('#designForm').getRecord();",
                    "var i;",
                    "var cwStore = cWin.getViewModel().getStore('ColorwayStore');",
                    "",
                    "// build symbol list in the hbox",
                    "var behalfUnit = {",
                    "    xtype:'label',",
                    "    style:'border:1px solid #cecece;margin-right:3px;padding:3px;text-align:center;cursor:pointer;background-color:white',",
                    "    width:40,",
                    "    height:30,",
                    "    overItemCls:'x-column-header-over',",
                    "    listeners:{",
                    "        afterrender:function(label){",
                    "            label.el.on('click', function(){",
                    "                //change behalf",
                    "                me.getColorSymbolList(label);",
                    "            });",
                    "        }",
                    "    }",
                    "};",
                    "",
                    "//set number of colors in design",
                    "var dosu = parseInt(rec.get('idnumberOfColors'));",
                    "if(dosu === 0 || dosu === ''){//in case no data in dosu field",
                    "    Ext.toast('도수를 알수가 없습니다. 디자인정보에 도수를 입력해 주시고 다시 실행 하세요');",
                    "    return;",
                    "}",
                    "for(i=0; i<dosu; i++){",
                    "    behalfUnit.index = i;",
                    "    cWin.down('#behalfCon').add(behalfUnit);",
                    "}",
                    "",
                    "var dataview = cWin.down('#colorGrid');",
                    "dataview.setStore(cwStore);",
                    "cwStore.sort('group');",
                    "",
                    "var combo = cWin.down('#cbChasu');",
                    "var setChasuStore = function(chaData){",
                    "    ///////////////////////////////////",
                    "    // Store for 차수Store#cbChasu   ///",
                    "    ///////////////////////////////////",
                    "    var chaStore = Ext.create('Ext.data.Store', {",
                    "        field:['chasu'],",
                    "        data:chaData",
                    "    });",
                    "    combo.setStore(chaStore);",
                    "    chaStore.on('load',function loadChasu(sto){",
                    "        sto.un('load',loadChasu);",
                    "        var selectFirst = function(comb){//첫번째 차수 자동 선택",
                    "            combo.select(chaStore.getAt(0));",
                    "            combo.fireEvent('select', combo, chaStore.getAt(0));",
                    "        };",
                    "        setTimeout(selectFirst, 200);",
                    "    });",
                    "    chaStore.load();",
                    "};",
                    "",
                    "if(colorways !== undefined && colorways.length !== 0){",
                    "    //add basic(default) colorway to [0]",
                    "    cwStore.add(colorways);",
                    "    if(cwStore.findRecord('chasu', 1) !== null){",
                    "        var firstRecord = cwStore.findRecord('chasu', 1).copy();",
                    "        cWin.firstRecord = firstRecord;",
                    "    }",
                    "    var maxCha = cwStore.max('chasu');",
                    "    var toCha = [];",
                    "    for(var i=1; i<maxCha+1; i++){",
                    "        if(toCha.indexOf({chasu:i}) == -1){",
                    "            toCha.push({chasu:parseInt(i)});",
                    "        }",
                    "    }",
                    "    setChasuStore(toCha);",
                    "",
                    "",
                    "// temporary //////////////////////////////////////////////////////////////////////////////////////////////",
                    "///////////////////////////////////////////////////////////////////////////////////////////////////////////",
                    "",
                    "    var sto = cWin.down('#colorGrid').getStore();",
                    "    var vs = [];",
                    "    var cs = [];",
                    "    var rl = [];",
                    "    var dlTmp = [];",
                    "    var dl = [];",
                    "    var i;",
                    "    var count = 0;",
                    "",
                    "    for(i=0; i<toCha.length; i++){",
                    "        var sq = sto.findBy(function(record){",
                    "            if(record.get('group') === 0 && record.get('chasu') == i+1){",
                    "                if(cs.indexOf(record.get('group').toString() + ':' + record.get('chasu').toString()) == -1){",
                    "                    //차수당 디자인 디폴트를 배열에",
                    "                    cs.push(record.get('group').toString() + ':' + record.get('chasu').toString());",
                    "                }",
                    "                else{",
                    "                    rl.push(record);//차수당 디자인디폴트가 두개 이상 되면 지울준비",
                    "                }",
                    "                vs.push({chasu:record.get('chasu'), r:record});",
                    "",
                    "            }",
                    "        });",
                    "    }",
                    "    for(i=0; i<rl.length; i++){",
                    "        sto.remove(rl[i]);",
                    "    }",
                    "    sto.findBy(function(record){",
                    "        if(dlTmp.indexOf(record.get('color_name').toString() + ':' + record.get('chasu').toString()) == -1){",
                    "            dlTmp.push(record.get('color_name').toString() + ':' + record.get('chasu').toString());",
                    "        }",
                    "        else{",
                    "            dl.push(record);//차수당 똑같은 칼라이름을 가진 배색이 두개 이상 되면 지울 준비",
                    "        }",
                    "    });",
                    "",
                    "    for(i=0; i<dl.length; i++){",
                    "        sto.remove(dl[i]);",
                    "    }",
                    "",
                    "    for(i=0; i<toCha.length; i++){",
                    "        if(i, cs.indexOf('0:'+ (i+1).toString()) == -1){//디자인디폴트가 없는 차수에만 디자인디폴트 강제 추가",
                    "            var copyCol = getController('Util').copyObject(cWin.down('#designForm').originalColor);",
                    "            copyCol.chasu = i +1;",
                    "            sto.add(copyCol);",
                    "        }",
                    "    }",
                    "    cWin.down('#colorGrid').refresh();",
                    "",
                    "    var dQuery = '?';",
                    "    for(var i=0; i<rl.length; i++){",
                    "        if(i===0){",
                    "            dQuery += 'bd_idx=' + rl[i].get('bd_idx');",
                    "        }",
                    "        else{",
                    "            dQuery += '&bd_idx=' + rl[i].get('bd_idx');",
                    "        }",
                    "    }",
                    "    if(dQuery != '?'){//중복 디폴트 삭제",
                    "        Ext.data.JsonP.request({",
                    "            url:getDeleteDataApi() + dQuery,",
                    "            success:function(response){",
                    "            }",
                    "        });",
                    "    }",
                    "",
                    "    var query = '?';",
                    "    for(var i=0; i<dl.length; i++){//중복 배색 삭제",
                    "        if(i===0){",
                    "            query += 'bd_idx=' + dl[i].get('bd_idx');",
                    "        }",
                    "        else{",
                    "            query += '&bd_idx=' + dl[i].get('bd_idx');",
                    "        }",
                    "    }",
                    "    if(query != '?'){",
                    "        Ext.data.JsonP.request({",
                    "            url:getDeleteDataApi() + query,",
                    "            success:function(response){",
                    "            }",
                    "        });",
                    "    }",
                    "",
                    "",
                    "}",
                    "// temporary //////////////////////////////////////////////////////////////////////////////////////////////",
                    "///////////////////////////////////////////////////////////////////////////////////////////////////////////",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "//Getting chasu from ERP, show it if it's not the same in system",
                    "Ext.data.JsonP.request({",
                    "    url:cWin.erpDomain + '/getDesign',",
                    "    params:{",
                    "        design:rec.get('bd_subject')",
                    "    },",
                    "    success:function(res){",
                    "        var curMaxCha = cWin.down('#cbChasu').getStore().getCount();",
                    "        var erpMaxCha = res.length;",
                    "        if(curMaxCha != erpMaxCha){",
                    "            cWin.down('#chasuFieldSet').setTitle('차수 ' + '<span style=\"color:red\">ERP('+res.length+')<span>');",
                    "//             cWin.down('#btnUpdateChasu').setHidden(false);",
                    "            //save new chasu to update in case",
                    "            cWin.down('#btnUpdateChasu').newChasu = res;",
                    "        }",
                    "        else{",
                    "            cWin.down('#chasuFieldSet').setTitle('차수');",
                    "//             cWin.down('#btnUpdateChasu').setHidden(true);",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "initialize",
            "designerId": "49e8ef8b-67db-4fe5-b61f-fb5a53379b0b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "zoom"
                ],
                "fn": "setImage",
                "implHandler": [
                    "var form= this.getView().down('#designForm');",
                    "var canvas= form.canvas;",
                    "var ctx;",
                    "var dpWidth, dpHeight;",
                    "var canvW = canvas.width;",
                    "var canvH = canvas.height;",
                    "var oW = form.getRecord().get('file_width');",
                    "var oH = form.getRecord().get('file_height');",
                    "var cloneCvs = form.cloneCanvas(canvas);",
                    "if(zoom == 'fit'){",
                    "    dpWidth = form.getWidth() - 20;",
                    "    dpHeight = form.getHeight() - 20;",
                    "    canvas.scale = 1;",
                    "}",
                    "if(zoom == 'actual'){",
                    "    dpWidth  = oW;",
                    "    dpHeight = oH;",
                    "    canvas.scale = 1;",
                    "}",
                    "if(zoom == 'plus'){",
                    "    dpWidth = oW * canvas.scale * 1.1;",
                    "    dpHeight = oH * canvas.scale * 1.1;",
                    "    if(canvas.scale * 1.1 > 1){",
                    "        dpWidth = oW;",
                    "        dpHeight = oH;",
                    "    }",
                    "}",
                    "if(zoom == 'minus'){",
                    "    dpWidth = oW * canvas.scale / 1.1;",
                    "    dpHeight = oH * canvas.scale / 1.1;",
                    "}",
                    "// if(oW <= dpWidth && oH <= dpHeight){",
                    "//     dpWidth = oW;",
                    "//     dpHeight = oH;",
                    "// }",
                    "var ratio = Math.min(dpWidth/oW, dpHeight/oH);",
                    "ctx = canvas.getContext('2d'); // Get the drawing context of your canvas element.",
                    "ctx.oImageSmoothingEnabled = false;",
                    "ctx.mozImageSmoothingEnabled = false;",
                    "ctx.webkitImageSmoothingEnabled = false;",
                    "ctx.msImageSmoothingEnabled = false;",
                    "ctx.imageSmoothingEnabled = false;",
                    "",
                    "if(form.initialized){",
                    "    canvas.width = oW * ratio;",
                    "    canvas.height = oH * ratio;",
                    "    ctx.clearRect(0, 0, oW, oH);",
                    "    ctx.scale(ratio, ratio);",
                    "    canvas.scale = ratio;",
                    "    ctx.drawImage(form.cloneCanvas(form.baseCanvas), 0, 0);",
                    "}",
                    "else{",
                    "    var drawing = new Image();",
                    "    form.mask(loc.main.loadingImage);",
                    "    drawing.crossOrigin=\"anonymous\";",
                    "    drawing.src = form.getRecord().get('bd_file')[0].file_path;",
                    "    drawing.onload=function() {",
                    "        ctx.scale(ratio, ratio);",
                    "        ctx.drawImage(drawing, 0, 0);",
                    "        if(form.orginalCanvas === undefined){",
                    "            form.originalCanvas = form.cloneCanvas(canvas);",
                    "        }",
                    "        form.baseCanvas = form.cloneCanvas(canvas);",
                    "        form.initialized = true;",
                    "        form.unmask();",
                    "        form.fireEvent('imageready');",
                    "    };",
                    "}",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "setImage",
            "designerId": "a91aec55-0b72-49ed-ba9c-a8ba1de83bbb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getStore",
                "implHandler": [
                    "return this.getView().down('#colorGrid').getStore();"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "getStore",
            "designerId": "3efd5760-551f-4083-b718-2110056ff6b6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "rec",
                    "colors",
                    "grid"
                ],
                "fn": "getHexByCode",
                "implHandler": [
                    "///////////////////////////////////////////////////",
                    "// get hex color from color code library by code //",
                    "///////////////////////////////////////////////////",
                    "var count = 0;",
                    "var me = this;",
                    "var cfgStore = Ext.getStore('ConfigStore');",
                    "var getHex = function(r, count){",
                    "    if(grid.getItemId() == 'colorGrid'){//ERP 업데이트에서 가져와 colorGrid에 적용된 배색의 자동 채색 경우",
                    "        grid.mask('색을 생성하고 있는 중입니다.');",
                    "    }",
                    "    //show default design library that configured",
                    "    var colorCate = cfgStore.getAt(0).get('colorchipCategory');",
                    "    var code = r.get('color')[count].name;",
                    "    var chk3 = r.get('color')[count].cchk3;",
                    "    var method=\"equal\";",
                    "    var prmts = {",
                    "        ca_id:colorCate,//칼라코드",
                    "        colorCode:code,",
                    "        colorCode_method:'equal',//칼라코드 검색조건 equal",
                    "        range1:chk3,//시작값",
                    "        range1_method:'gt',//시작값 검색 코드 <",
                    "        range2:chk3,//끝값",
                    "        range2_method:'lt'//끝값 검색 코드 >",
                    "    };",
                    "    Ext.data.JsonP.request({",
                    "        url:getDataListByIdApi('', true),",
                    "        params:prmts,",
                    "        success:function(res){//흡수칼라목록 부터 뒤짐",
                    "            if(res.binderList[0] !== undefined){",
                    "                var bdData = res.binderList[0].bd_data;",
                    "                for(var i=0; i<bdData.length; i++){",
                    "                    if(bdData[i].cols_code == 'colorHex'){",
                    "                        var hex = bdData[i].data_val;",
                    "                        if(hex.indexOf('#') == -1) hex = '#' + hex;",
                    "                        r.get('color')[count].color = hex;",
                    "                        r.get('color')[count].findHex = 'limegreen';",
                    "                        r.get('color')[count].isExist = true;",
                    "                    }",
                    "                }",
                    "            }",
                    "            else{//흡수칼라목록에 없으면 칼라코드관리에서 직접 검색",
                    "                prmts.ca_id = 91;",
                    "                recount = count;",
                    "                var query = '&ca_id=91&se_subject='+ code +'&se_subject_method='+method;",
                    "                Ext.data.JsonP.request({",
                    "                    url:getDataListByIdApi(query, true),",
                    "                    success:function(reres){",
                    "                        if(reres.binderList[0] !== undefined){",
                    "                            var bdData = reres.binderList[0].bd_data;",
                    "                            for(var i=0; i<bdData.length; i++){",
                    "                                if(bdData[i].cols_code == 'colorHex'){",
                    "                                    var hex = bdData[i].data_val;",
                    "                                    if(hex.indexOf('#') == -1) hex = '#' + hex;",
                    "                                    r.get('color')[recount].color = hex;",
                    "                                    r.get('color')[recount].findHex = 'deepskyblue';",
                    "                                }",
                    "                            }",
                    "                        }",
                    "                        else{",
                    "                            r.get('color')[recount].findHex = 'orangered';",
                    "                        }",
                    "                        if(grid.getItemId() == 'colorGrid'){//ERP 업데이트에서 가져와 colorGrid에 적용된 배색의 자동 채색",
                    "                            r.get('color')[recount].isExist = false;",
                    "                            grid.refresh();",
                    "                            grid.unmask();",
                    "                        }",
                    "                        else{",
                    "                            grid.getStore().load();",
                    "                        }",
                    "                    }",
                    "                });",
                    "            }",
                    "            if(count < colors.length - 1){",
                    "                count ++;",
                    "                getHex(rec, count);",
                    "            }",
                    "            else{",
                    "                me.getView().fireEvent('colorwayloadcomplete');",
                    "                count = 0;",
                    "                if(grid.getItemId() == 'colorGrid'){",
                    "                    grid.refresh();",
                    "                    grid.unmask();",
                    "                }",
                    "                else{",
                    "                    grid.getStore().load();",
                    "                }",
                    "            }",
                    "        }",
                    "    });",
                    "};",
                    "getHex(rec, count);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "getHexByCode",
            "designerId": "0d9bd5bb-86d6-420d-b571-095dbaa791c9"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "designNo"
                ],
                "fn": "getChasuListFromERP",
                "implHandler": [
                    "///////////////",
                    "// 차수 Grid  //",
                    "///////////////",
                    "var chaGrid = Ext.create('Ext.grid.Panel', {",
                    "    width:600,",
                    "    bodyStyle:'background-color:#cccccc',",
                    "    columns: [",
                    "        {",
                    "            text:'차수',",
                    "            dataIndex:'CHASU',",
                    "            width:50,",
                    "        },",
                    "        {",
                    "            text:'작업자',",
                    "            dataIndex:'JSSANO'",
                    "        },",
                    "        {",
                    "            text:'도수',",
                    "            dataIndex:'DOSU',",
                    "            width:50,",
                    "        },",
                    "        {",
                    "            text:'거래처',",
                    "            dataIndex:'SITE'",
                    "        },",
                    "        {",
                    "            text:'원단',",
                    "            flex:1,",
                    "            dataIndex:'FABRIC'",
                    "        }",
                    "    ]",
                    "});",
                    "var url = this.getView().erpDomain + '/getDesign?design=' + designNo ;",
                    "var myStore = Ext.create('Ext.data.Store', {",
                    "    storeId:'ChaStore',",
                    "    autoLoad:true,",
                    "    proxy: {",
                    "        type: 'jsonp',",
                    "        api: {",
                    "            read: url",
                    "        },",
                    "        reader: {",
                    "            type: 'json',",
                    "        }",
                    "    },",
                    "    fields:[",
                    "        {name:'거래처', mapping:'SITE'},",
                    "        {name:'원단', mapping:'FABRIC'},",
                    "        {name:'작업자', mapping:'JSSANO'},",
                    "        {name:'도수', mapping:'DOSU'},",
                    "        {name:'차수', mapping:'CHASU'}",
                    "    ],",
                    "    listeners:{",
                    "        load:function(st){",
                    "            if(st.getCount() === 0){",
                    "                Ext.toast(loc.colorway.noChasuInfoInERP);",
                    "                return;",
                    "            }",
                    "            st.sort('CHASU', 'ASC');",
                    "            ///////////////////////",
                    "            // 칼라웨이 목록 윈도우 //",
                    "            ///////////////////////",
                    "            var chaWin = Ext.create('Ext.window.Window', {",
                    "                padding:15,",
                    "                title:'차수 선택',",
                    "                scrollable:true,",
                    "                maxHeight:windowMaxHeight,",
                    "                items:[",
                    "                    chaGrid",
                    "                ]",
                    "            }).show();",
                    "        }",
                    "    }",
                    "});",
                    "chaGrid.reconfigure(myStore);",
                    "return chaGrid;"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "getChasuListFromERP",
            "designerId": "dbb1e2d0-e0e8-45d6-8af0-a6a1ea36f96c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "추천칼라웨이 윈도 오른쪽 그리드"
                ],
                "designer|params": [
                    "rec",
                    "target"
                ],
                "fn": "getColorwayByChasuFromERP",
                "implHandler": [
                    "var me = this;",
                    "var cha = rec.get('CHASU');//차수",
                    "var dosu = rec.get('DOSU');//도수",
                    "var besu = parseInt(rec.get('JSSU'));//배색수",
                    "var designNo = rec.get('DESIGN');",
                    "var url = this.getView().erpDomain + '/getColorList?design='+designNo+'&chasu='+cha+'&cno=1';",
                    "var colors = [{num:''}];",
                    "Ext.data.JsonP.request({",
                    "    url:url,",
                    "    success:function(response){",
                    "        var colorways=[];",
                    "        var i, j;",
                    "        for(i=0; i< besu.length; i++){",
                    "            colorways[i] = [];",
                    "        }",
                    "        Ext.Array.each(response, function(entry, z){",
                    "            var cwNo = entry.CNO - 1;",
                    "            var jssu = entry.JSSU - 9;",
                    "            if(colorways[jssu] === undefined){",
                    "                colorways[jssu] = {color:[]};",
                    "            }",
                    "",
                    "            var c = (entry.DCOLOR === null)? entry.COLOR : entry.DCOLOR;",
                    "            var isExist=false;",
                    "            for (var i = 0; i < colorways[jssu].color.length; i++) {",
                    "                if ((colorways[jssu].color[i].cno === cwNo + 1) && (colorways[jssu].color[i].name == c)) isExist=true;",
                    "",
                    "            }",
                    "            if(c == '.') {",
                    "                c = colorways[jssu - 1].color[cwNo-1].name;",
                    "            }",
                    "",
                    "            if(isExist === false) colorways[jssu].color.push({name:c, cno:cwNo + 1, cchk3:entry.CCHK3, findHex:'#cecece'});",
                    "        });",
                    "        ////////////////////",
                    "        // Colorway store //",
                    "        ////////////////////",
                    "        var colorStore = Ext.create('Ext.data.Store', {",
                    "            storeId:'ERPColorwayStore',",
                    "            fields:[",
                    "                {",
                    "                    name:'칼라코드',",
                    "                    mapping:'color'",
                    "                }",
                    "            ],",
                    "            data:colorways",
                    "        });",
                    "        var grid = {",
                    "            ///////////////////",
                    "            // Colorway grid //",
                    "            ///////////////////",
                    "            xtype:'gridpanel',",
                    "            flex:1,",
                    "            itemId:'recommColorGrid',",
                    "            columns:[",
                    "                {",
                    "                    xtype:'rownumberer'",
                    "                },",
                    "                {",
                    "                    text: 'Color',",
                    "                    dataIndex:'color',",
                    "                    flex:1,",
                    "                    renderer:function(v){",
                    "                        var val = '';",
                    "                        var test = '';",
                    "                        for(var i=0; i<v.length; i++){",
                    "                            var bgColor = (v[i].color === undefined)? 'white':v[i].color;",
                    "                            val += '<div style=\"background-color:'+bgColor+';float:left;font-size:12px;padding:2px 5px 2px 5px;';",
                    "                            val += 'border:1px solid '+v[i].findHex+';margin-right:3px; width:50px;text-align:center\">';",
                    "                            val += v[i].name+'<br><sapn style=\"font-size:10px\">('+v[i].cchk3+')</span></div>';",
                    "                        }",
                    "                        return val;",
                    "                    }",
                    "                },",
                    "                {",
                    "                    xtype: 'actioncolumn',",
                    "                    width:45,",
                    "                    text:'색',",
                    "                    style:'font-size:12px',",
                    "                    align:'center',",
                    "                    items:[",
                    "                        {",
                    "                            ////////////////////",
                    "                            // 한건씩 칼라 매칭 //",
                    "                            ////////////////////",
                    "//                             glyph:'xf1fb@FontAwesome',",
                    "                            iconCls:'colorway-small',",
                    "                            tooltip:'색불러오기',",
                    "                            handler:function(grid, rowIndex, colIndex){",
                    "                                var rec = grid.getStore().getAt(rowIndex);",
                    "                                var colors = rec.get('color');",
                    "                                var cfgStore = Ext.getStore('ConfigStore');",
                    "                                var count = 0;",
                    "                                var recount;",
                    "                                me.getHexByCode(rec, colors, grid);",
                    "                            }",
                    "                        }",
                    "",
                    "                    ]",
                    "                },",
                    "                {",
                    "                    xtype:'actioncolumn',",
                    "                    text:'보기',",
                    "                    width:50,",
                    "                    align:'center',",
                    "                    items:[",
                    "                        {",
                    "                            glyph:'xf06e@FontAwesome',",
                    "                            tooltip:'미리보기',",
                    "                            handler:function(grid, rowIndex, colIndex){",
                    "                                if(!me.checkSymbols()) return;",
                    "                                var form = Ext.getCmp('color_window').down('#designForm');",
                    "                                form.mask('디자인의 배색을 변경중입니다.');",
                    "                                var rec = grid.getStore().getAt(rowIndex);",
                    "",
                    "                                ///////////////////////////////////////////////////////////////",
                    "                                //색깔과 디자인기호와 순서를 맞추어 표시하여 디자인에 연결될 칼라 저장 //",
                    "                                ///////////////////////////////////////////////////////////////",
                    "                                var chasu = Ext.getCmp('color_window').down('#cbChasu').getValue();",
                    "                                var symbolOrder = Ext.getCmp('color_window').symbolOrder[chasu]; //checkSymbols()에서 저장한것",
                    "                                var newColors = [];",
                    "                                for(var i=0; i<rec.get('color').length; i++){",
                    "                                    newColors[i] = rec.get('color')[symbolOrder[i]];",
                    "                                }",
                    "                                setTimeout(form.setAllChangeColor, 300, form.originalColor.color, newColors);",
                    "                            }",
                    "                        }",
                    "                    ]",
                    "                },",
                    "                {",
                    "                    xtype:'actioncolumn',",
                    "                    text:'추가',",
                    "                    align:'center',",
                    "                    width:50,",
                    "                    items:[",
                    "                        {",
                    "                            toolTip:'디자인에 배색 추가',",
                    "                            glyph:'xf058@FontAwesome'",
                    "                        }",
                    "                    ],",
                    "                    handler:function(grid, rowIndex, colIndex){",
                    "                         me.insertColorway(grid.getStore().getAt(rowIndex).get('color'));",
                    "                    }",
                    "                }",
                    "",
                    "            ],",
                    "            store:colorStore",
                    "        };",
                    "",
                    "        if(target !== undefined){",
                    "            target.removeAll();",
                    "            target.add(grid);",
                    "            return;",
                    "        }",
                    "",
                    "        /////////////////////////////////",
                    "        // Colorway list in ERP window //",
                    "        /////////////////////////////////",
                    "        var colorWin = Ext.create('Ext.window.Window', {",
                    "            width:600,",
                    "            padding:20,",
                    "            title:'Colorways',",
                    "            scrollable:true,",
                    "            layout:'fit',",
                    "            maxHeight:windowMaxHeight,",
                    "            items:[grid]",
                    "",
                    "        }).show();",
                    "        colorStore.load();",
                    "    }",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code",
                "designer|commentHeader": "comment"
            },
            "name": "getColorwayByChasuFromERP",
            "designerId": "2e10d1c5-f2db-4410-b143-5dde27f36653"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "추천칼라웨이 윈도 오른쪽 그리드"
                ],
                "designer|params": [
                    "rec",
                    "target"
                ],
                "fn": "getColorwayByChasuFromERP1",
                "implHandler": [
                    "var me = this;",
                    "var cha = rec.get('CHASU');//차수",
                    "var dosu = rec.get('DOSU');//도수",
                    "var besu = parseInt(rec.get('JSSU'));//배색수",
                    "var designNo = rec.get('DESIGN');",
                    "var url = this.getView().erpDomain + '/getColorList?design='+designNo+'&chasu='+cha+'&cno=1';",
                    "var colors = [{num:''}];",
                    "Ext.data.JsonP.request({",
                    "    url:url,",
                    "    success:function(response){",
                    "        var colorways=[];",
                    "        var i, j;",
                    "        for(i=0; i< besu.length; i++){",
                    "            colorways[i] = [];",
                    "        }",
                    "        Ext.Array.each(response, function(entry, z){",
                    "            var cwNo = entry.CNO - 1;",
                    "            var jssu = entry.JSSU - 9;",
                    "            if(colorways[jssu] === undefined){",
                    "                colorways[jssu] = {colors:[]};",
                    "            }",
                    "",
                    "            var c = (entry.DCOLOR === null)? entry.COLOR : entry.DCOLOR;",
                    "            var isExist=false;",
                    "            for (var i = 0; i < colorways[jssu].colors.length; i++) {",
                    "                if ((colorways[jssu].colors[i].cno === cwNo + 1) && (colorways[jssu].colors[i].name == c)) isExist=true;",
                    "",
                    "            }",
                    "            if(c == '.') {",
                    "                c = colorways[jssu - 1].colors[cwNo-1].name;",
                    "            }",
                    "",
                    "            if(isExist === false) colorways[jssu].colors.push({name:c, cno:cwNo + 1, cchk3:entry.CCHK3, findHex:'#cecece'});",
                    "        });",
                    "        ////////////////////",
                    "        // Colorway store //",
                    "        ////////////////////",
                    "        var colorStore = Ext.create('Ext.data.Store', {",
                    "            storeId:'ERPColorwayStore',",
                    "            fields:[",
                    "                {",
                    "                    name:'칼라코드',",
                    "                    mapping:'colors'",
                    "                }",
                    "            ],",
                    "            data:colorways",
                    "        });",
                    "",
                    "        var grid = {",
                    "            ///////////////////",
                    "            // Colorway grid //",
                    "            ///////////////////",
                    "            xtype:'gridpanel',",
                    "            flex:1,",
                    "            itemId:'recommColorGrid',",
                    "            columns:[",
                    "                {",
                    "                    xtype:'rownumberer'",
                    "                },",
                    "                {",
                    "                    text: 'Color',",
                    "                    dataIndex:'colors',",
                    "                    flex:1,",
                    "                    renderer:function(v){",
                    "                        var val = '';",
                    "                        var test = '';",
                    "                        for(var i=0; i<v.length; i++){",
                    "                            var bgColor = (v[i].color === undefined)? 'white':v[i].color;",
                    "                            val += '<div style=\"background-color:'+bgColor+';float:left;font-size:12px;padding:2px 5px 2px 5px;';",
                    "                            val += 'border:1px solid '+v[i].findHex+';margin-right:3px; width:50px;text-align:center\">';",
                    "                            val += v[i].name+'<br><sapn style=\"font-size:10px\">('+v[i].cchk3+')</span></div>';",
                    "                        }",
                    "                        return val;",
                    "                    }",
                    "                },",
                    "                {",
                    "                    xtype: 'actioncolumn',",
                    "                    width:45,",
                    "                    text:'색',",
                    "                    style:'font-size:12px',",
                    "                    align:'center',",
                    "                    items:[",
                    "                        {",
                    "                            ////////////////////",
                    "                            // 한건씩 칼라 매칭 //",
                    "                            ////////////////////",
                    "//                             glyph:'xf1fb@FontAwesome',",
                    "                            iconCls:'colorway-small',",
                    "                            tooltip:'색불러오기',",
                    "                            handler:function(grid, rowIndex, colIndex){",
                    "                                var rec = grid.getStore().getAt(rowIndex);",
                    "                                var colors = rec.get('colors');",
                    "                                var cfgStore = Ext.getStore('ConfigStore');",
                    "                                var count = 0;",
                    "                                var recount;",
                    "                                me.getHexByCode(rec, colors, grid);",
                    "                            }",
                    "                        }",
                    "",
                    "                    ]",
                    "                },",
                    "                {",
                    "                    xtype:'actioncolumn',",
                    "                    text:'보기',",
                    "                    width:50,",
                    "                    align:'center',",
                    "                    items:[",
                    "                        {",
                    "                            glyph:'xf06e@FontAwesome',",
                    "                            tooltip:'미리보기',",
                    "                            handler:function(grid, rowIndex, colIndex){",
                    "                                if(!me.checkSymbols()) return;",
                    "                                var form = Ext.getCmp('color_window').down('#designForm');",
                    "                                form.mask('디자인의 배색을 변경중입니다.');",
                    "                                var rec = grid.getStore().getAt(rowIndex);",
                    "",
                    "                                ///////////////////////////////////////////////////////////////",
                    "                                //색깔과 디자인기호와 순서를 맞추어 표시하여 디자인에 연결될 칼라 저장 //",
                    "                                ///////////////////////////////////////////////////////////////",
                    "                                var chasu = Ext.getCmp('color_window').down('#cbChasu').getValue();",
                    "                                var symbolOrder = Ext.getCmp('color_window').symbolOrder[chasu]; //checkSymbols()에서 저장한것",
                    "                                var newColors = [];",
                    "                                for(var i=0; i<rec.get('colors').length; i++){",
                    "                                    newColors[i] = rec.get('colors')[symbolOrder[i]];",
                    "                                }",
                    "                                setTimeout(form.setAllChangeColor, 300, form.originalColor.color, newColors);",
                    "                                //                                 form.setAllChangeColor(form.originalColor.color, newColors);",
                    "                            }",
                    "                        }",
                    "                    ]",
                    "                },",
                    "                {",
                    "                    xtype:'actioncolumn',",
                    "                    text:'추가',",
                    "                    align:'center',",
                    "                    width:50,",
                    "                    items:[",
                    "                        {",
                    "                            toolTip:'디자인에 배색 추가',",
                    "                            glyph:'xf058@FontAwesome'",
                    "                        }",
                    "                    ],",
                    "                    handler:function(grid, rowIndex, colIndex){",
                    "                         me.insertColorway(grid.getStore().getAt(rowIndex).get('colors'));",
                    "                    }",
                    "                }",
                    "",
                    "            ],",
                    "            store:colorStore",
                    "        };",
                    "",
                    "        if(target !== undefined){",
                    "            target.removeAll();",
                    "            target.add(grid);",
                    "            return;",
                    "        }",
                    "",
                    "        /////////////////////////////////",
                    "        // Colorway list in ERP window //",
                    "        /////////////////////////////////",
                    "        var colorWin = Ext.create('Ext.window.Window', {",
                    "            width:600,",
                    "            padding:20,",
                    "            title:'Colorways',",
                    "            scrollable:true,",
                    "            layout:'fit',",
                    "            maxHeight:windowMaxHeight,",
                    "            items:[grid]",
                    "",
                    "        }).show();",
                    "        colorStore.load();",
                    "    }",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code",
                "designer|commentHeader": "comment"
            },
            "name": "getColorwayByChasuFromERP1",
            "designerId": "c1f79060-7a5b-495e-91e4-cf44aa4d8c59"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "designNo",
                    "chasu"
                ],
                "fn": "getColorSymbol",
                "implHandler": [
                    "if(chasu === undefined) chasu = 1;",
                    "var url = this.getView().erpDomain + '/getColorTitle?design=' + designNo + '&chasu=' + chasu;",
                    "var store = Ext.create('Ext.data.Store', {",
                    "    fields:['color'],",
                    "    storeId:'behalf_' + designNo + '_' + chasu,",
                    "    autoLoad:true,",
                    "    params:{",
                    "        design:designNo,",
                    "        chasu:chasu",
                    "    },",
                    "    proxy: {",
                    "        url:url,",
                    "        type: 'jsonp',",
                    "        reader: {",
                    "            type: 'json'",
                    "        }",
                    "    }",
                    "});",
                    "return store;"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "getColorSymbol",
            "designerId": "d767870e-5f04-488d-b146-205ba0e8b712"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "target"
                ],
                "fn": "getColorSymbolList",
                "implHandler": [
                    "////////////////////////////////////",
                    "// selecting a behalf from the list //",
                    "////////////////////////////////////",
                    "var me = this;",
                    "var cWin = this.getView();",
                    "var bhWin = Ext.create('Ext.window.Window', {",
                    "    width:370,",
                    "    maxHeight:windowMaxHeight,",
                    "    height:910,",
                    "    layout:'fit',",
                    "    padding:12,",
                    "    modal:true,",
                    "    alwaysOnTop:true,",
                    "    title:'디자인 기호',",
                    "    items:[",
                    "        {",
                    "            xtype:'dataview',",
                    "            itemSelector:'div.behalf-unit',",
                    "            scrollable:true,",
                    "            overItemCls:'x-column-header-over',",
                    "            store:Ext.create('Ext.data.Store', {",
                    "                fields:['color'],",
                    "                data:[",
                    "                    {",
                    "                        color:'가-1'",
                    "                    },",
                    "                    {",
                    "                        color:'가-2'",
                    "                    },",
                    "                    {",
                    "                        color:'가-3'",
                    "                    },",
                    "                    {",
                    "                        color:'가-4'",
                    "                    },",
                    "                    {",
                    "                        color:'가-5'",
                    "                    },",
                    "                    {",
                    "                        color:'나-1'",
                    "                    },",
                    "                    {",
                    "                        color:'나-2'",
                    "                    },",
                    "                    {",
                    "                        color:'나-3'",
                    "                    },",
                    "                    {",
                    "                        color:'나-4'",
                    "                    },",
                    "                    {",
                    "                        color:'나-5'",
                    "                    },",
                    "                    {",
                    "                        color:'다-1'",
                    "                    },",
                    "                    {",
                    "                        color:'다-2'",
                    "                    },",
                    "                    {",
                    "                        color:'다-3'",
                    "                    },",
                    "                    {",
                    "                        color:'다-4'",
                    "                    },",
                    "                    {",
                    "                        color:'다-5'",
                    "                    },",
                    "                    {",
                    "                        color:'라-1'",
                    "                    },",
                    "                    {",
                    "                        color:'라-2'",
                    "                    },",
                    "                    {",
                    "                        color:'라-3'",
                    "                    },",
                    "                    {",
                    "                        color:'라-4'",
                    "                    },",
                    "                    {",
                    "                        color:'라-5'",
                    "                    },",
                    "                    {",
                    "                        color:'마-1'",
                    "                    },",
                    "                    {",
                    "                        color:'마-2'",
                    "                    },",
                    "                    {",
                    "                        color:'마-3'",
                    "                    },",
                    "                    {",
                    "                        color:'마-4'",
                    "                    },",
                    "                    {",
                    "                        color:'마-5'",
                    "                    },",
                    "                    {",
                    "                        color:'바-1'",
                    "                    },",
                    "                    {",
                    "                        color:'바-2'",
                    "                    },",
                    "                    {",
                    "                        color:'바-3'",
                    "                    },",
                    "                    {",
                    "                        color:'바-4'",
                    "                    },",
                    "                    {",
                    "                        color:'바-5'",
                    "                    },",
                    "                    {",
                    "                        color:'사-1'",
                    "                    },",
                    "                    {",
                    "                        color:'사-2'",
                    "                    },",
                    "                    {",
                    "                        color:'사-3'",
                    "                    },",
                    "                    {",
                    "                        color:'사-4'",
                    "                    },",
                    "                    {",
                    "                        color:'사-5'",
                    "                    },",
                    "                    {",
                    "                        color:'아-1'",
                    "                    },",
                    "                    {",
                    "                        color:'아-2'",
                    "                    },",
                    "                    {",
                    "                        color:'아-3'",
                    "                    },",
                    "                    {",
                    "                        color:'아-4'",
                    "                    },",
                    "                    {",
                    "                        color:'아-5'",
                    "                    },",
                    "                    {",
                    "                        color:'자-1'",
                    "                    },",
                    "                    {",
                    "                        color:'자-2'",
                    "                    },",
                    "                    {",
                    "                        color:'자-3'",
                    "                    },",
                    "                    {",
                    "                        color:'자-4'",
                    "                    },",
                    "                    {",
                    "                        color:'자-5'",
                    "                    },",
                    "                    {",
                    "                        color:'차-1'",
                    "                    },",
                    "                    {",
                    "                        color:'차-2'",
                    "                    },",
                    "                    {",
                    "                        color:'차-3'",
                    "                    },",
                    "                    {",
                    "                        color:'차-4'",
                    "                    },",
                    "                    {",
                    "                        color:'차-5'",
                    "                    },",
                    "                    {",
                    "                        color:'카-1'",
                    "                    },",
                    "                    {",
                    "                        color:'카-2'",
                    "                    },",
                    "                    {",
                    "                        color:'카-3'",
                    "                    },",
                    "                    {",
                    "                        color:'카-4'",
                    "                    },",
                    "                    {",
                    "                        color:'카-5'",
                    "                    },",
                    "                    {",
                    "                        color:'타-1'",
                    "                    },",
                    "                    {",
                    "                        color:'타-2'",
                    "                    },",
                    "                    {",
                    "                        color:'타-3'",
                    "                    },",
                    "                    {",
                    "                        color:'타-4'",
                    "                    },",
                    "                    {",
                    "                        color:'타-5'",
                    "                    },",
                    "                    {",
                    "                        color:'파-1'",
                    "                    },",
                    "                    {",
                    "                        color:'파-2'",
                    "                    },",
                    "                    {",
                    "                        color:'파-3'",
                    "                    },",
                    "                    {",
                    "                        color:'파-4'",
                    "                    },",
                    "                    {",
                    "                        color:'파-5'",
                    "                    },",
                    "                    {",
                    "                        color:'하-1'",
                    "                    },",
                    "                    {",
                    "                        color:'하-2'",
                    "                    },",
                    "                    {",
                    "                        color:'하-3'",
                    "                    },",
                    "                    {",
                    "                        color:'하-4'",
                    "                    },",
                    "                    {",
                    "                        color:'하-5'",
                    "                    },",
                    "                    {",
                    "                        color:'G'",
                    "                    },",
                    "                    {",
                    "                        color:'G-1'",
                    "                    },",
                    "                    {",
                    "                        color:'G-2'",
                    "                    },",
                    "                    {",
                    "                        color:'G-3'",
                    "                    },",
                    "                    {",
                    "                        color:'3'",
                    "                    },",
                    "                    {",
                    "                        color:'L'",
                    "                    },",
                    "                    {",
                    "                        color:'L-1'",
                    "                    },",
                    "                    {",
                    "                        color:'L-2'",
                    "                    },",
                    "                    {",
                    "                        color:'L-3'",
                    "                    },",
                    "                    {",
                    "                        color:''",
                    "                    },",
                    "                    {",
                    "                        color:'N'",
                    "                    },",
                    "                    {",
                    "                        color:''",
                    "                    },",
                    "                    {",
                    "                        color:''",
                    "                    },",
                    "                    {",
                    "                        color:''",
                    "                    },",
                    "                    {",
                    "                        color:''",
                    "                    },",
                    "                    {",
                    "                        color:'잎-1'",
                    "                    },",
                    "                    {",
                    "                        color:'잎-2'",
                    "                    },",
                    "                    {",
                    "                        color:'잎-3'",
                    "                    },",
                    "                    {",
                    "                        color:'잎-4'",
                    "                    },",
                    "                    {",
                    "                        color:'잎-5'",
                    "                    },",
                    "                    {",
                    "                        color:'연-1'",
                    "                    },",
                    "                    {",
                    "                        color:'연-2'",
                    "                    },",
                    "                    {",
                    "                        color:'연-3'",
                    "                    },",
                    "                    {",
                    "                        color:'연-4'",
                    "                    },",
                    "                    {",
                    "                        color:'연-5'",
                    "                    }",
                    "                ]",
                    "            }),",
                    "            tpl:new Ext.XTemplate(",
                    "                '<tpl for=\".\">',",
                    "                    '<div style=\"display:inline-block;overflow:hidden;cursor:pointer;margin-right:5px\">',",
                    "                        '<div class=\"behalf-unit\" style=\"width:60px;height:40px;padding:5px;border:1px solid #cecece;\">{color}</div>',",
                    "                    '</div>',",
                    "                '</tpl>'",
                    "            ),",
                    "            listeners:{",
                    "                select:function(dataview, record, index){",
                    "                    var className = Ext.getClass(target).superclass.$className;",
                    "                    if(className == 'Ext.Component'){//기본 자동배색 윈도우",
                    "                        target.setText(record.get('color'));",
                    "                        var chasu = cWin.down('#cbChasu').getValue();",
                    "                        //write color behalfs to store in case saving to server",
                    "                        var symbolCon = cWin.down('#behalfCon');",
                    "                        var cStore = cWin.getViewModel().getStore('ColorwayStore');",
                    "                        var symbols = cStore.getAt(0).get('behalf');",
                    "                        symbolCon.symbols[target.index] = record.get('color');",
                    "                        cStore.getAt(0).set('behalf', symbols);",
                    "                        cWin.down('#colorGrid').refresh();",
                    "                    }",
                    "                    else if(className == 'Ext.data.Model'){//추천칼라웨이 검색조건에서 디자인 기호 변경하려는 경우",
                    "                        target.set('name', record.get('color'));",
                    "                    }",
                    "                    else if(className == 'Ext.data.ProxyStore'){//추천칼라웨이 검색조건에서 디자인 기호를 추가하려는 경우",
                    "                        target.add({name:record.get('color'), check:false});",
                    "                    }",
                    "                    bhWin.close();",
                    "                }",
                    "            }",
                    "        }",
                    "    ]",
                    "}).show();"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "getColorSymbolList",
            "designerId": "511c0854-fb1d-4da4-91be-f856c6e6a0cc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "추천칼라웨이 윈도 왼쪽 그리드"
                ],
                "designer|params": [
                    "parameters",
                    "target"
                ],
                "fn": "getRecommended",
                "implHandler": [
                    "// target : #recomColorwayCon in onBtnGetERPDataClick",
                    "var url = this.getView().erpDomain + '/getDesignList';",
                    "var me = this;",
                    "var form = this.getView().down('form');",
                    "var record = form.getRecord();",
                    "var recommGrid, recommStore;",
                    "if(!target.down('#recommandedGrid')){",
                    "    recommStore = Ext.create('Ext.data.Store', {",
                    "        storeId:'ChaStore',",
                    "        proxy: {",
                    "            type: 'jsonp',",
                    "            api: {",
                    "                read: url",
                    "            },",
                    "            reader: {",
                    "                type: 'json',",
                    "            }",
                    "        },",
                    "        fields:[",
                    "            {name:'거래처', mapping:'SITE'},",
                    "            {name:'디자인', mapping:'DESIGN'},",
                    "            {name:'배색수', mapping:'JSSU', type:'int'},",
                    "            {name:'도수', mapping:'DOSU', type:'int'},",
                    "            {anme:'차수', mapping:'CHASU', type:'int'}",
                    "        ],        ",
                    "",
                    "    });",
                    "",
                    "    recommGrid = Ext.create('Ext.grid.Panel', {",
                    "        store:recommStore,",
                    "        flex:1,",
                    "        scrollable:true,",
                    "        itemId:'recommandedGrid',",
                    "        bodyStyle:'background-color:white',",
                    "        columns: [",
                    "            {",
                    "                text:'거래처',",
                    "                dataIndex:'SITE',",
                    "                width:130",
                    "            },",
                    "            {",
                    "                text:'디자인',",
                    "                dataIndex:'DESIGN',",
                    "                width:100",
                    "            },",
                    "            {",
                    "                text:'배색수',",
                    "                dataIndex:'JSSU',",
                    "                width:60",
                    "            },",
                    "            {",
                    "                text:'도수',",
                    "                dataIndex:'DOSU',",
                    "                width:48,",
                    "            },",
                    "            {",
                    "                text:'차수',",
                    "                dataIndex:'CHASU',",
                    "                width:48",
                    "            }",
                    "        ],",
                    "        listeners:{",
                    "            itemclick:function(dataview, rec){",
                    "                me.getColorwayByChasuFromERP(rec, target.up('panel').down('#recomColorwayCon'));",
                    "            }",
                    "        }",
                    "    });",
                    "",
                    "    target.add(recommGrid);",
                    "}",
                    "else{",
                    "    recommGrid = target.down('#recommandedGrid');",
                    "    recommStore = recommGrid.getStore();",
                    "}",
                    "",
                    "recommStore.load({",
                    "    params:parameters",
                    "});",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code",
                "designer|commentHeader": "comment"
            },
            "name": "getRecommended",
            "designerId": "62574af4-6a04-4029-9227-8f8bd16fb713"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "ERP 색순서와 시스템 색순서 매칭"
                ],
                "fn": "checkSymbols",
                "implHandler": [
                    "var cWin = this.getView();",
                    "var sColors = cWin.down('#colorGrid').getStore().getAt(0).get('color');",
                    "var inputs = cWin.down('#colorGrid').el.select('.defalut-color').elements;",
                    "var chasu = cWin.down('#cbChasu').getValue();",
                    "var mapCheck = true;",
                    "cWin.symbolOrder[chasu] = [];",
                    "var defaultSymbols = cWin.down('#behalfCon').symbols;",
                    "var systemSymbols = [];",
                    "for(i=0; i<sColors.length; i++){",
                    "    //디자인기호의 적용여부 확인",
                    "    if(inputs[i].value.trim() === ''){",
                    "        mapCheck = false;",
                    "    }",
                    "    else{",
                    "        systemSymbols.push(inputs[i].value.trim());",
                    "    }",
                    "",
                    "}",
                    "if(!mapCheck){//디자인 디폴트에 칼라순서 매칭 했는지 확인",
                    "    Ext.toast('먼저 디자인 디폴트에 색순서의 재배치가 필요합니다. 각각의 색에 맞는 디자인 기호를 입력해 주세요');",
                    "    cWin[chasu] = undefined;",
                    "}",
                    "else{",
                    "    for(i=0; i<sColors.length; i++){//시스템에 ERP의 디자인기호 순서를 매핑시키기 위해 바뀔 순서를 Array에 저장",
                    "        cWin.symbolOrder[chasu][i] = systemSymbols.indexOf(defaultSymbols[i]);",
                    "    }",
                    "}",
                    "return mapCheck;"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "designer|commentHeader": "comment"
            },
            "name": "checkSymbols",
            "designerId": "8ed6f31f-5a27-479c-80ab-574bb7f6400d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "colors",
                    "chasu"
                ],
                "fn": "insertColorway",
                "implHandler": [
                    "if(!this.checkSymbols()) return;",
                    "var cWin = this.getView();",
                    "var allRecords = this.getAllRecords();",
                    "var numOfColors = this.getStore().getAt(0).get('color').length;",
                    "var newColors = [];",
                    "if(chasu === undefined) chasu = cWin.down('#cbChasu').getValue();",
                    "var i;",
                    "",
                    "var symbolOrder = cWin.symbolOrder[chasu]; //checkSymbols()에서 저장한것",
                    "var reColors = [];",
                    "",
                    "//서버에 칼라가 없는경우 랜덤 Gray로 대체",
                    "for(i=0; i<colors.length; i++){",
                    "    var obj = {};",
                    "    if(colors[i].color === undefined){ //색이 지정 안됐으면",
                    "        colors[i].color = chroma.scale(['#777777', '#eeeeee']).colors(colors.length)[i];",
                    "        obj.color = colors[i].color;",
                    "        obj.isExist = false;",
                    "    }",
                    "    else{",
                    "        obj.isExist = true;",
                    "    }",
                    "    obj.color = colors[i].color;",
                    "    obj.name = colors[i].name;",
                    "    obj.cno = colors[i].cno;",
                    "    newColors.push(obj);",
                    "    reColors.push(getController('Util').copyObject(obj));",
                    "}",
                    "///////////////////////////////////////////////////////////////",
                    "//색깔과 디자인기호와 순서를 맞추어 표시하여 디자인에 연결될 칼라 저장 //",
                    "///////////////////////////////////////////////////////////////",
                    "for(i=0; i<newColors.length; i++){",
                    "    reColors[i] = colors[symbolOrder[i]];",
                    "}",
                    "var recObj = {",
                    "    group:this.getStore().getCount(),",
                    "    check:false,",
                    "    color:newColors,",
                    "    reorderColors:reColors,",
                    "    color_name:'New_' + chasu +'-'+ this.getStore().getCount(),",
                    "    user:userInfo.nv_name,",
                    "    chasu:chasu",
                    "};",
                    "this.getStore().add(recObj);",
                    "if(this.getStore().filters) this.getStore().filters.clear();",
                    "this.getStore().filterBy(function(record){",
                    "    if(record.get('chasu') === 0 || record.get('chasu') === chasu && record.get('color').length > 0){",
                    "        return record;",
                    "    }",
                    "});",
                    "cWin.down('#colorGrid').refresh();",
                    "Ext.toast('추가 됐습니다.');"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "insertColorway",
            "designerId": "be48a6dc-3f1a-4579-9d0c-daabb4b51b94"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getAllRecords",
                "implHandler": [
                    "var allRecords = (this.getStore().getData().getSource() || this.getStore().getData()).getRange();",
                    "return allRecords;"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "getAllRecords",
            "designerId": "309d6761-e98f-4635-8af0-800d92eda83c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "cId",
                    "hex"
                ],
                "fn": "findSimilarColor",
                "implHandler": [
                    "if(Ext.getCmp('colorFinder')) {Ext.getCmp('colorFinder').show(); return;}",
                    "var me = this;",
                    "var rgbs;",
                    "if(hex){",
                    "    if(hex.charAt(0) != '#') hex = '#' + hex;",
                    "    rgbs = chroma(hex).rgb();",
                    "}",
                    "",
                    "var win = Ext.create('Ext.window.Window', {",
                    "    layout:{",
                    "        type:'vbox',",
                    "        align:'stretch'",
                    "    },",
                    "    title:'Color Finder',",
                    "    ghost:false,",
                    "    id:'colorFinder',",
                    "    alwaysOnTop:true,",
                    "    padding:40,",
                    "    items:[",
                    "        {",
                    "            xtype:'container',//color preview container",
                    "            itemId:'colorBox',",
                    "            height:50,",
                    "            style:'background-color:#000000;cursor:pointer',",
                    "            listeners:{",
                    "                afterrender:function(comp){",
                    "                    if(hex) {",
                    "                        //                         comp.setStyle({'background-color':hex});//if hex has value, set conlor in colorBox",
                    "                        comp.up('window').down('#searchBtn').setDisabled(false);//maker serach button enabled",
                    "                    }",
                    "                    comp.el.on('click', function(){",
                    "                        if(Ext.getCmp('colorPicker') !== undefined) return;",
                    "                        var picker = Ext.create('Ext.ux.colorpick.Selector', {",
                    "                            value: hex,  // initial selected color,]",
                    "                            listeners: {",
                    "                                change: function (colorselector, color) {",
                    "                                    win.down('#color').setValue('#' + color);",
                    "                                }",
                    "                            }",
                    "                        });",
                    "                        //show color picker window",
                    "                        Ext.create('Ext.window.Window', {",
                    "                            items:[picker],",
                    "                            title:'Color picker',",
                    "                            modal:true,",
                    "                            id:'colorPicker',",
                    "                            alwaysOnTop:true,",
                    "                        }).show();",
                    "                    });",
                    "                }",
                    "            }",
                    "        },",
                    "        {",
                    "            xtype:'container',",
                    "            layout:'hbox',",
                    "            items:[",
                    "                {",
                    "                    xtype:'textfield',//input for hex value",
                    "                    itemId:'color',",
                    "                    fieldLabel:'Hex',",
                    "                    height:63,",
                    "                    width:156,",
                    "                    labelAlign:'top',",
                    "                    listeners:{",
                    "                        change:function (field){",
                    "                            var value = field.getValue().trim();",
                    "                            if(value.charAt(0) != '#'){",
                    "                                value = '#' + value;",
                    "                            }",
                    "                            var isHex = getController('Util').isHex(value);",
                    "                            var rawVal = value.replace('#' , '');",
                    "                            if(rawVal.length < 6){",
                    "                                return;",
                    "                            }",
                    "                            //check if number of length is over than 6",
                    "                            if(rawVal.length > 6) value = field.setValue(value.replace(value.charAt(value.length - 1), ''));",
                    "                            if(!isHex && rawVal !== ''){//check if hex value is valid",
                    "                                Ext.toast(loc.error.unknwonColor + ' \"' + value + '\"');",
                    "                                field.focus();",
                    "                                return;",
                    "                            }",
                    "",
                    "                            var rgbs = chroma(value).rgb();",
                    "                            var fr = field.up('window').down('#colorR');",
                    "                            var fg = field.up('window').down('#colorG');",
                    "                            var fb = field.up('window').down('#colorB');",
                    "                            fr.setValue(rgbs[0]);",
                    "                            fg.setValue(rgbs[1]);",
                    "                            fb.setValue(rgbs[2]);",
                    "                            field.up('window').down('#colorBox').setStyle('background-color', value);",
                    "                            field.up('window').down('#searchBtn').setDisabled(false);",
                    "                        },",
                    "                        afterrender:function(field){",
                    "                            if(hex) field.setValue(hex);",
                    "                        }",
                    "                    }",
                    "                },",
                    "                {",
                    "                    xtype:'numberfield',//range of searching tollerance",
                    "                    itemId:'range',",
                    "                    fieldLabel:'Range',",
                    "                    width:75,",
                    "                    maxValue:50,",
                    "                    minValue:0,",
                    "                    margin:'0 0 0 10',",
                    "                    labelAlign:'top',",
                    "                    value:25",
                    "                }",
                    "            ]",
                    "        },",
                    "        {",
                    "            xtype:'container',",
                    "            layout:'hbox',",
                    "            items:[",
                    "                {",
                    "                    xtype:'numberfield',//input Red",
                    "                    itemId:'colorR',",
                    "                    fieldLabel:'R',",
                    "                    width:80,",
                    "                    labelAlign:'top',",
                    "                    maxValue:255,",
                    "                    minValue:0,",
                    "                    listeners:{",
                    "                        blur:function(field){",
                    "                            var rVal = field.getValue();",
                    "                            var gVal = field.up('container').down('#colorG').getValue();",
                    "                            var bVal = field.up('container').down('#colorB').getValue();",
                    "                            if(rVal !== null && gVal !== null & bVal !== null ){",
                    "                                var hex = chroma([rVal, gVal, bVal]);",
                    "                                field.up('window').down('#color').setValue(hex);",
                    "                                field.up('window').down('#colorBox').setStyle('background-color', hex);",
                    "                                field.up('window').down('#searchBtn').setDisabled(false);",
                    "                            }",
                    "",
                    "                        }",
                    "                    }",
                    "                },",
                    "                {",
                    "                    xtype:'numberfield',//input Green",
                    "                    itemId:'colorG',",
                    "                    fieldLabel:'G',",
                    "                    width:80,",
                    "                    labelAlign:'top',",
                    "                    maxValue:255,",
                    "                    minValue:0,",
                    "                    listeners:{",
                    "                        blur:function(field){",
                    "                            var gVal = field.getValue();",
                    "                            var rVal = field.up('container').down('#colorR').getValue();",
                    "                            var bVal = field.up('container').down('#colorB').getValue();",
                    "                            if(rVal !== null && gVal !== null & bVal !== null ){",
                    "                                var hex = chroma([rVal, gVal, bVal]);",
                    "                                field.up('window').down('#color').setValue(hex);",
                    "                                field.up('window').down('#colorBox').setStyle('background-color', hex);",
                    "                                field.up('window').down('#searchBtn').setDisabled(false);",
                    "                            }",
                    "",
                    "                        },",
                    "                        render:function(field){",
                    "",
                    "                        }",
                    "                    }",
                    "                },",
                    "                {",
                    "                    xtype:'numberfield',//input Blue",
                    "                    itemId:'colorB',",
                    "                    fieldLabel:'B',",
                    "                    width:80,",
                    "                    labelAlign:'top',",
                    "                    maxValue:255,",
                    "                    minValue:0,",
                    "                    listeners:{",
                    "                        blur:function(field){",
                    "                            var bVal = field.getValue();",
                    "                            var gVal = field.up('container').down('#colorG').getValue();",
                    "                            var rVal = field.up('container').down('#colorR').getValue();",
                    "                            if(rVal !== null && gVal !== null & bVal !== null ){",
                    "                                var hex = chroma([rVal, gVal, bVal]);",
                    "                                field.up('window').down('#color').setValue(hex);",
                    "                                field.up('window').down('#colorBox').setStyle('background-color', hex);",
                    "                                field.up('window').down('#searchBtn').setDisabled(false);",
                    "                            }",
                    "",
                    "                        }",
                    "                    }",
                    "                }",
                    "            ]",
                    "",
                    "        },",
                    "        /////////////",
                    "        // 검색버튼 //",
                    "        /////////////",
                    "        {",
                    "            xtype:'container',",
                    "            layout:{",
                    "                type:'hbox',",
                    "                pack:'center'",
                    "            },",
                    "            padding:'25, 0 0 0',",
                    "            items:[",
                    "                {",
                    "                    xtype:'button',//Search button",
                    "                    text:loc.search.search,",
                    "                    width:115,",
                    "                    disabled:true,",
                    "                    itemId:'searchBtn',",
                    "                    listeners:{",
                    "                        click:function(btn){",
                    "                            var cId = Ext.getCmp('colorChipWin').categoryId;",
                    "                            var cVal = btn.up('window').down('#color').getValue();",
                    "                            var cArr = chroma(cVal.trim()).rgb();",
                    "                            var ranVal = btn.up('window').down('#range').getValue();",
                    "                            var query = 'rgb_r='+cArr[0]+'&rgb_r_method=intbet:' + ranVal;",
                    "                            query += '&rgb_g='+cArr[1]+'&rgb_g_method=intbet:' + ranVal;",
                    "                            query += '&rgb_b='+cArr[2]+'&rgb_b_method=intbet:' + ranVal;",
                    "                            query += '&ca_id=' + cId;",
                    "                            //Base on params define if keep the paramesters",
                    "                            var me = this;",
                    "                            var dataUrl = getDataListByIdApi(query);",
                    "                            var store = Ext.getCmp('colorChipWin').getGrid().getStore();",
                    "                            store.getProxy().setUrl(dataUrl);",
                    "                            store.getProxy().extraParams = {};",
                    "                            store.load();",
                    "                        }",
                    "                    }",
                    "                },",
                    "                {",
                    "                    xtype:'tbspacer',",
                    "                    width:10",
                    "                },",
                    "                {",
                    "                    xtype:'button',//close button",
                    "                    text:loc.menu.close,",
                    "                    width:115,",
                    "                    handler:function(button){",
                    "                        win.close();",
                    "                    }",
                    "                }",
                    "            ]",
                    "        }",
                    "    ]",
                    "",
                    "}).show();"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "findSimilarColor",
            "designerId": "7e500287-bb28-4168-9f5a-e916cb56d723"
        }
    ]
}
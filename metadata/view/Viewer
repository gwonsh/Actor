{
    "type": "Ext.container.Container",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "categoryId": "`''`",
        "cls": [
            "viewer"
        ],
        "designer|userAlias": "viewer",
        "designer|userClassName": "Viewer",
        "editable": false,
        "height": "100%",
        "info": "`null`",
        "itemId": "viewer",
        "style": null,
        "width": null
    },
    "configAlternates": {
        "style": "string",
        "editable": "boolean",
        "categoryId": "string",
        "cls": "typedarray",
        "designer|userAlias": "string",
        "designer|userClassName": "string",
        "height": "auto",
        "info": "string",
        "itemId": "string",
        "width": "auto"
    },
    "name": "MyContainer6",
    "designerId": "97de7575-b7ff-4456-981c-0781de712454",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "categoryId",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "info",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "bdIdx",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "editable",
            "type": "string"
        }
    ],
    "viewControllerInstanceId": "572d8426-296d-458b-8882-ec3ad7213644",
    "viewModelInstanceId": "2a9dd63a-37c7-43e0-8d66-52c707dbf299",
    "cn": [
        {
            "type": "viewcontrollereventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "make direct editable according to field type"
                ],
                "fn": "onViewerAfterRender",
                "implHandler": [
                    "var viewCtr = getController('Viewer');",
                    "var i;",
                    "var ctlr = getController('Post');",
                    "var fStore = Ext.getStore('fStore_' + component.categoryId);",
                    "/* when click the approval table */",
                    "var apvFld = component.el.select('.apvUnit');",
                    "var apvEl = apvFld.elements;",
                    "if(apvEl.length > 0){",
                    "    viewCtr.setApproval(apvEl);",
                    "}",
                    "",
                    "/* when click the basic data */",
                    "var basicFld = component.el.select('.basic-field');",
                    "Ext.Array.each(basicFld.elements, function(entry){",
                    "    Ext.get(entry).on('click', function onFieldClick(e){",
                    "        /* check if edit mode activated */",
                    "        if(!component.getEditable()) return;",
                    "        var target = e.currentTarget;",
                    "        /* Editing subject */",
                    "        if(target.getAttribute('field_type') == 'subject'){",
                    "            /* stop event prevent for duplicating even though input field added */",
                    "            Ext.get(target).un('click', onFieldClick);",
                    "            viewCtr.setInputField(target, onFieldClick);",
                    "        }",
                    "",
                    "        /* Editing content by window */",
                    "        if(target.getAttribute('field_type') == 'content'){",
                    "            var win = Ext.create('Ext.window.Window', {",
                    "                width:600,",
                    "                height:390,",
                    "                modal:true,",
                    "                ghost:false,",
                    "                items:[",
                    "                    {",
                    "                        xtype: 'htmleditor',",
                    "                        height: 300,",
                    "                        style: 'background-color:#ffffff',",
                    "                        width: '100%',",
                    "                        hideLabel: true,",
                    "                        enableFont: false,",
                    "                        value:Ext.get(target).dom.innerHTML",
                    "                    },",
                    "                    {",
                    "                        xtype:'container',",
                    "                        layout:{",
                    "                            type:'hbox',",
                    "                            pack:'center'",
                    "                        },",
                    "                        margin:'12 0 0 0',",
                    "                        items:[",
                    "                            {",
                    "                                xtype:'button',",
                    "                                width:140,",
                    "                                text:loc.menu.edit,",
                    "                                glyph:'xf044@FontAwesome',",
                    "                                handler:function(){",
                    "                                    viewCtr.setHtmlEditorField(target, win);",
                    "                                }",
                    "                            },",
                    "                            {",
                    "                                xtype:'button',",
                    "                                width:100,",
                    "                                glyph:'xf00d@FontAwesome',",
                    "                                text:loc.upload.cancel,",
                    "                                margin:'0 0 0 10',",
                    "                                handler:function(){",
                    "                                    win.close();",
                    "                                }",
                    "                            }",
                    "                        ]",
                    "                    }",
                    "                ]",
                    "            });",
                    "            win.show();",
                    "        }",
                    "    });",
                    "});",
                    "",
                    "/* when click a custom data */",
                    "var customFld = component.el.select('.custom-field');",
                    "var dsetRecord = Ext.data.Record.create([",
                    "    {name:'cols_category'}, {name:'cols_code'}, {name:'cols_data'}, {name:'cols_idx'}, {name:'cols_option'},{name:'data_val'}",
                    "]);",
                    "Ext.Array.each(customFld.elements, function(entry){",
                    "    Ext.get(entry).on('click', function onCustomFldClick(e){",
                    "        var utilCtr = getController('Util');",
                    "        target = e.currentTarget;",
                    "        if(e.target.getAttribute);",
                    "        var attr = target.getAttribute('cols_type');",
                    "        var fieldIndex = target.getAttribute('fieldIndex');",
                    "        var colsName = target.getAttribute('cols_name');",
                    "        var colsData = fStore.getData().items[fieldIndex].get('cols_data');",
                    "        var colsIdx = target.getAttribute('cols_idx');",
                    "        var bdIdx = target.getAttribute('bd_idx');",
                    "        var colsCode = target.getAttribute('cols_code');",
                    "        var preVal = fStore.getData().items[fieldIndex].get('data_val');",
                    "        if(preVal === null) preVal = '';",
                    "        /* check if edit mode activated */",
                    "        if(!component.getEditable()) return;",
                    "        if(attr == 'text' || attr == 'number' || attr == 'url' || attr == 'idx'){",
                    "            /* stop event prevent for duplicating even though input field added */",
                    "            Ext.get(target).un('click', onCustomFldClick);",
                    "            viewCtr.setInputField(target, onCustomFldClick);",
                    "        }",
                    "",
                    "        if(attr == 'dbtext'){",
                    "            var winAuto = Ext.create('Ext.window.Window', {",
                    "                width:215,",
                    "                modal:true,",
                    "                bodyStyle:'padding:20px',",
                    "                ghost:false,",
                    "                title:colsName,",
                    "                items:[",
                    "                    {",
                    "                        xtype:'label',",
                    "                        text:loc.upload.autoText,",
                    "                        style:'font-size:12px'",
                    "                    },",
                    "                    {",
                    "                        xtype:'combo',",
                    "                        margin:'8 0 0 0',",
                    "                        store:[],",
                    "                        value:preVal,",
                    "                        listeners:{",
                    "                            render:function(combo){",
                    "                                combo.inputEl.on('keyup', function onComboKeyup(e){",
                    "                                    ctlr.getDbtextValue(combo, e, colsIdx);",
                    "                                });",
                    "                            }",
                    "                        }",
                    "                    },",
                    "                    {",
                    "                        xtype:'button',",
                    "                        text:loc.menu.update,",
                    "                        glyph:'xf079@FontAwesome',",
                    "                        margin:'20 0 0 45',",
                    "                        width:100,",
                    "                        handler:function(){",
                    "                            var combo = winAuto.down('combo');",
                    "                            fStore.getData().items[fieldIndex].set('data_val', combo.getValue());",
                    "                            viewCtr.setQuery(target, combo.getValue(), winAuto);",
                    "                        }",
                    "                    }",
                    "                ]",
                    "            }).show();",
                    "        }",
                    "        if(attr == 'textarea'){",
                    "            var winTa = Ext.create('Ext.window.Window', {",
                    "                width:600,",
                    "                height:390,",
                    "                modal:true,",
                    "                ghost:false,",
                    "                items:[",
                    "                    {",
                    "                        xtype: 'htmleditor',",
                    "                        height: 300,",
                    "                        style: 'background-color:#ffffff',",
                    "                        width: '100%',",
                    "                        hideLabel: true,",
                    "                        enableFont: false,",
                    "                        value:preVal",
                    "                    },",
                    "                    {",
                    "                        xtype:'container',",
                    "                        layout:{",
                    "                            type:'hbox',",
                    "                            pack:'center'",
                    "                        },",
                    "                        margin:'12 0 0 0',",
                    "                        items:[",
                    "                            {",
                    "                                xtype:'button',",
                    "                                width:120,",
                    "                                text:loc.menu.update,",
                    "                                glyph:'xf079@FontAwesome',",
                    "                                handler:function(){",
                    "                                    viewCtr.setHtmlEditorField(target, winTa);",
                    "                                }",
                    "                            },",
                    "                            {",
                    "                                xtype:'button',",
                    "                                width:120,",
                    "                                glyph:'xf00d@FontAwesome',",
                    "                                text:loc.upload.cancel,",
                    "                                margin:'0 0 0 10',",
                    "                                handler:function(){",
                    "                                    winTa.close();",
                    "                                }",
                    "                            }",
                    "                        ]",
                    "                    }",
                    "                ]",
                    "            });",
                    "            winTa.show();",
                    "        }",
                    "        if(attr == 'date'){",
                    "            var winDate = Ext.create('Ext.window.Window', {",
                    "                width:215,",
                    "                modal:true,",
                    "                bodyStyle:'padding:20px',",
                    "                ghost:false,",
                    "                title:colsName,",
                    "                items:[",
                    "                    {",
                    "                        xtype:'datefield',",
                    "                        margin:'8 0 0 0',",
                    "                        listeners:{",
                    "                            render:function(df){",
                    "                                df.setValue(preVal);",
                    "                                df.inputEl.on('keyup', function(e){",
                    "                                    if(e.keyCode == 13){",
                    "                                        var val = utilCtr.parseDate(e.target.value);",
                    "                                        fStore.getData().items[fieldIndex].set('data_val', val);",
                    "                                        viewCtr.setQuery(target, val, winDate);",
                    "                                    }",
                    "                                });",
                    "                            }",
                    "                        }",
                    "                    },",
                    "                    {",
                    "                        xtype:'button',",
                    "                        text:loc.menu.update,",
                    "                        glyph:'xf079@FontAwesome',",
                    "                        margin:'20 0 0 45',",
                    "                        width:100,",
                    "                        handler:function(){",
                    "                            var val = utilCtr.parseDate(winDate.down('datefield').getValue());",
                    "                            fStore.getData().items[fieldIndex].set('data_val', val);",
                    "                            viewCtr.setQuery(target, val, winDate);",
                    "                        }",
                    "                    }",
                    "                ]",
                    "            }).show();",
                    "        }",
                    "        if(attr == 'select'){",
                    "            var winSelect = Ext.create('Ext.window.Window', {",
                    "                width:215,",
                    "                modal:true,",
                    "                bodyStyle:'padding:20px',",
                    "                ghost:false,",
                    "                title:colsName,",
                    "                items:[",
                    "                    {",
                    "                        xtype:'combo',",
                    "                        margin:'8 0 0 0',",
                    "                        store:colsData,",
                    "                        value:preVal,",
                    "                        listeners:{",
                    "                            render:function(combo){",
                    "                                combo.inputEl.on('keyup', function onComboKeyup(e){",
                    "                                    if(e.keyCode == 13){",
                    "                                        combo.inputEl.un('keyup', onComboKeyup);",
                    "                                        if(combo.getValue() === null) combo.setValue('');",
                    "                                        fStore.getData().items[fieldIndex].set('data_val', combo.getValue());",
                    "                                        viewCtr.setQuery(target, combo.getValue(), winSelect);",
                    "                                    }",
                    "                                });",
                    "                            }",
                    "                        }",
                    "                    },",
                    "                    {",
                    "                        xtype:'button',",
                    "                        text:loc.menu.update,",
                    "                        glyph:'xf079@FontAwesome',",
                    "                        margin:'20 0 0 45',",
                    "                        width:100,",
                    "                        handler:function(){",
                    "                            var combo = winSelect.down('combo');",
                    "                            fStore.getData().items[fieldIndex].set('data_val', combo.getValue());",
                    "                            viewCtr.setQuery(target, combo.getValue(), winSelect);",
                    "                        }",
                    "                    }",
                    "                ]",
                    "            }).show();",
                    "        }",
                    "        if(attr == 'radio'){",
                    "            var winRadio = Ext.create('Ext.window.Window', {",
                    "                width:215,",
                    "                modal:true,",
                    "                bodyStyle:'padding:20px',",
                    "                ghost:false,",
                    "                title:colsName,",
                    "                items:[",
                    "                    {",
                    "                        xtype:'radiogroup',",
                    "                        margin:'8 0 0 0',",
                    "                        columns:1,",
                    "                        listeners:{",
                    "                            render:function(rg){",
                    "                                Ext.Array.each(colsData, function(entry, index){",
                    "                                    var isChecked = (entry == preVal)? true : false;",
                    "                                    rg.add({name:'rdo_' + colsIdx, boxLabel:entry, inputValue:entry, checked:isChecked});",
                    "                                });",
                    "                            }",
                    "                        }",
                    "                    },",
                    "                    {",
                    "                        xtype:'button',",
                    "                        text:loc.menu.update,",
                    "                        glyph:'xf079@FontAwesome',",
                    "                        margin:'20 0 0 45',",
                    "                        width:100,",
                    "                        handler:function(){",
                    "                            var radio = winRadio.down('radiogroup');",
                    "                            var val = radio.getValue()['rdo_'+colsIdx];",
                    "                            fStore.getData().items[fieldIndex].set('data_val', val);",
                    "                            viewCtr.setQuery(target, val, winRadio);",
                    "                        }",
                    "                    }",
                    "                ]",
                    "            }).show();",
                    "        }",
                    "        if(attr == 'datagrp'){",
                    "            var relatedCategory = target.getAttribute('relatedCategory');",
                    "            var grpVal = target.getAttribute('value');",
                    "            var grpWin = Ext.create(appName + '.view.DataGroupWindow', {",
                    "                relatedCategory:relatedCategory",
                    "            });",
                    "            grpWin.show();",
                    "            var dgGrid = grpWin.down('#dgGrid');",
                    "            dgGrid.on('cellclick', function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts){",
                    "                fStore.getData().items[fieldIndex].set('data_val', record.get('bd_subject'));",
                    "                var query = '?bd_idx=' + bdIdx + '&cols_idx=' + colsIdx + '&data_val=' + record.get('bd_subject');",
                    "                viewCtr.setQuery(target, record.get('bd_subject'), grpWin);",
                    "            });",
                    "        }",
                    "        if(attr == 'check'){",
                    "            var winCheck = Ext.create('Ext.window.Window', {",
                    "                width:215,",
                    "                modal:true,",
                    "                bodyStyle:'padding:20px',",
                    "                ghost:false,",
                    "                title:colsName,",
                    "                items:[",
                    "                    {",
                    "                        xtype:'checkboxgroup',",
                    "                        margin:'8 0 0 0',",
                    "                        columns:1,",
                    "                        listeners:{",
                    "                            render:function(cg){",
                    "                                Ext.Array.each(colsData, function(entry, index){",
                    "                                    entry = entry.trim();",
                    "                                    var isChecked = false;",
                    "                                    var cbArr = preVal.split(',');",
                    "                                    Ext.Array.each(cbArr, function(valItem, index){",
                    "                                        cbArr[index] = valItem.trim();",
                    "                                    });",
                    "                                    if(Ext.Array.contains(cbArr, entry)) isChecked = true;",
                    "                                    cg.add({name:'chk_' + colsIdx, boxLabel:entry, inputValue:entry, checked:isChecked});",
                    "                                });",
                    "                            }",
                    "                        }",
                    "                    },",
                    "                    {",
                    "                        xtype:'button',",
                    "                        text:loc.menu.update,",
                    "                        glyph:'xf079@FontAwesome',",
                    "                        margin:'20 0 0 45',",
                    "                        width:100,",
                    "                        handler:function(){",
                    "                            var check = winCheck.down('checkboxgroup');",
                    "                            var vals = check.getValue()['chk_'+colsIdx];",
                    "                            var val;",
                    "                            if(Ext.isString(vals)){//선택값이 하나이면 String으로 가져오므로",
                    "                                val = vals;",
                    "                            }",
                    "                            else{",
                    "                                val = vals[0];",
                    "                                Ext.Array.each(vals, function(entry, index){",
                    "                                    if(index !== 0){",
                    "                                        val += ', ' + vals[index];",
                    "                                    }",
                    "                                });",
                    "                            }",
                    "                            fStore.getData().items[fieldIndex].set('data_val', val);",
                    "                            viewCtr.setQuery(target, val, winCheck);",
                    "                        }",
                    "                    }",
                    "                ]",
                    "            }).show();",
                    "        }",
                    "        if(attr == 'dbl_select'){",
                    "            /* Array data for the first combobox */",
                    "            var fstData = [];",
                    "            Ext.Array.each(colsData, function(item){",
                    "                fstData.push({name:item.data, subData:item.subdata});",
                    "            });",
                    "            /* store for the first combobox */",
                    "            var fstStore = Ext.create('Ext.data.Store', {",
                    "                fields:['name', 'subData'],",
                    "                data : fstData",
                    "            });",
                    "            /* show multi select window */",
                    "            var dblSelecCon= Ext.create(appName + '.view.MultiSelectWindow', {",
                    "                title:colsName,",
                    "                modal:true,",
                    "                alwaysOnTop:true",
                    "            });",
                    "",
                    "            /* value field in MultiSelectWindow */",
                    "            var valFld = dblSelecCon.down('#valueField');",
                    "            /* fill given value to value field */",
                    "            valFld.setValue(preVal);",
                    "            /* connect store to first select option */",
                    "            dblSelecCon.setFirstStore(fstStore);",
                    "            dblSelecCon.show();",
                    "            dblSelecCon.on('close', function(){",
                    "                if(dblSelecCon.getTitle() === ''){//empty title means it has new data when btnOk click",
                    "                    var val = valFld.getValue();",
                    "                    fStore.getData().items[fieldIndex].set('data_val', val);",
                    "                    viewCtr.setQuery(target, val, winCheck);",
                    "                }",
                    "                else{//existing title means click 'cancel' or 'close' button",
                    "                    dblSelecCon.down('#valueField').setValue('');",
                    "                }",
                    "            });",
                    "        }",
                    "        if(attr == 'color'){",
                    "            var winColor = Ext.create('Ext.window.Window',{",
                    "                modal:true,",
                    "                bodyStyle:'padding:20px',",
                    "                ghost:false,",
                    "                title:colsName,",
                    "                items:[",
                    "                    {",
                    "                        xtype:'colorpicker',",
                    "                        listeners:{",
                    "                            select:function( picker, color, eOpts){",
                    "                                var val = '#' + color;",
                    "                                var query = '?bd_idx=' + bdIdx + '&cols_idx=' + colsIdx + '&data_val=' + encodeURIComponent(val);",
                    "                                fStore.getData().items[fieldIndex].set('data_val', val);",
                    "                                viewCtr.updateCellValue(query, winColor);",
                    "                                Ext.get(target).dom.innerHTML = '<div style=\"width:13px;height:13px;background-color:'+val+'\"></div>';",
                    "                            }",
                    "                        }",
                    "                    }",
                    "                ]",
                    "            }).show();",
                    "        }",
                    "        if(attr == 'color256'){",
                    "            var win256 = Ext.create('Ext.window.Window',{",
                    "                modal:true,",
                    "                bodyStyle:'padding:20px',",
                    "                width:234,",
                    "                ghost:false,",
                    "                title:colsName,",
                    "                items:[",
                    "                    {",
                    "                        xtype:'colorpicker',",
                    "                        listeners:{",
                    "                            select:function( picker, color, eOpts){",
                    "                                var val = '#' + color;",
                    "                                var chip = {",
                    "                                    xtype:'container',",
                    "                                    width:30,",
                    "                                    height:30,",
                    "                                    value:val,",
                    "                                    cls:'color-chip',",
                    "                                    margin:'0 0 2 2',",
                    "                                    style:'float:left;background-color:' + val,",
                    "                                    listeners:{",
                    "                                        render:function(chip){",
                    "                                            chip.el.on('click', function(){",
                    "                                                chip.destroy();",
                    "                                            });",
                    "                                        }",
                    "                                    }",
                    "                                };",
                    "                                win256.down('#colorCon').add(chip);",
                    "                            }",
                    "                        }",
                    "                    },",
                    "                    {",
                    "                        xtype:'container',",
                    "                        width:'100%',",
                    "                        height:96,",
                    "                        itemId:'colorCon',",
                    "                        margin:'10 0 0 0',",
                    "                        style:'background-color:#f5f5f5',",
                    "                        listeners:{",
                    "                            render:function(comp){",
                    "                                var colors = [];",
                    "                                Ext.Array.each(preVal.split(','), function(item){",
                    "                                    colors.push(item.trim());",
                    "                                });",
                    "                                Ext.Array.each(colors, function(color){",
                    "                                    var chip = {",
                    "                                        xtype:'container',",
                    "                                        width:30,",
                    "                                        height:30,",
                    "                                        value:color,",
                    "                                        cls:'color-chip',",
                    "                                        margin:'0 0 2 2',",
                    "                                        style:'float:left;background-color:' + color,",
                    "                                        listeners:{",
                    "                                            render:function(chip){",
                    "                                                chip.el.on('click', function(){",
                    "                                                    chip.destroy();",
                    "                                                });",
                    "                                            }",
                    "                                        }",
                    "                                    };",
                    "                                    comp.add(chip);",
                    "                                });",
                    "                            }",
                    "                        }",
                    "                    },",
                    "                    {",
                    "                        xtype:'button',",
                    "                        text:loc.menu.update,",
                    "                        glyph:'xf079@FontAwesome',",
                    "                        margin:'10 0 0 50',",
                    "                        width:100,",
                    "                        handler:function(button){",
                    "                            var chips = win256.down('#colorCon').items.items;",
                    "                            var val = encodeURIComponent(chips[0].value);",
                    "                            var html = '';",
                    "                            Ext.Array.each(chips, function(entry, index){",
                    "                                if(index !=- 0){",
                    "                                    val += ', ' + encodeURIComponent(entry.value);",
                    "                                }",
                    "                                html += '<div style=\"float:left;width:15px;height:15px;background-color:'+entry.value+'\"></div>';",
                    "                            });",
                    "                            var query = '?bd_idx=' + bdIdx + '&cols_idx=' + colsIdx + '&data_val=' + val;",
                    "                            fStore.getData().items[fieldIndex].set('data_val', val);",
                    "                            viewCtr.updateCellValue(query, win256);",
                    "                            Ext.get(target).dom.innerHTML = html;",
                    "                        }",
                    "                    }",
                    "                ]",
                    "            }).show();",
                    "        }",
                    "        if(attr == 'colorchk'){",
                    "            var winCC = Ext.create('Ext.window.Window', {",
                    "                width:215,",
                    "                modal:true,",
                    "                bodyStyle:'padding:20px',",
                    "                ghost:false,",
                    "                title:colsName,",
                    "                items:[",
                    "                    {",
                    "                        xtype:'checkboxgroup',",
                    "                        margin:'8 0 0 0',",
                    "                        columns:1,",
                    "                        listeners:{",
                    "                            render:function(cg){",
                    "                                Ext.Array.each(colsData, function(entry, index){",
                    "                                    var isChecked = false;",
                    "                                    var preArr = preVal.split(',');",
                    "                                    Ext.Array.each(preArr, function(item, index){",
                    "                                        preArr[index] = item.trim();",
                    "                                    });",
                    "                                    if(Ext.Array.contains(preArr, entry[2])) isChecked = true;",
                    "",
                    "                                    cg.add(",
                    "                                        {",
                    "                                            name:'chk_' + colsIdx,",
                    "                                            boxLabel:entry[2].split('||')[1],",
                    "                                            inputValue:entry[2],",
                    "                                            checked:isChecked,",
                    "                                            margin:'0 5 0 0',",
                    "                                            beforeLabelTpl :[",
                    "                                                '<div style=\"float:left;margin:9px 2px 0 0;width:14px;height:14px;background-color:'+entry[2].split('||')[0]+'\"></div>'",
                    "                                            ]",
                    "                                        }",
                    "                                    );",
                    "",
                    "                                });",
                    "                            }",
                    "                        }",
                    "                    },",
                    "                    {",
                    "                        xtype:'button',",
                    "                        text:loc.menu.update,",
                    "                        glyph:'xf079@FontAwesome',",
                    "                        margin:'20 0 0 45',",
                    "                        width:100,",
                    "                        handler:function(){",
                    "                            var check = winCC.down('checkboxgroup');",
                    "                            var vals = check.getValue()['chk_'+colsIdx];",
                    "",
                    "                            var val;",
                    "                            if(Ext.isString(vals)){//선택값이 하나이면 String으로 가져오므로",
                    "                                val = vals;",
                    "                            }",
                    "                            else{",
                    "                                val = vals[0];",
                    "                                Ext.Array.each(vals, function(entry, index){",
                    "                                    if(index !== 0){",
                    "                                        val += ', ' + vals[index];",
                    "                                    }",
                    "                                });",
                    "                            }",
                    "                            Ext.get(target).dom.innerHTML = viewCtr.getColorradio(val);",
                    "                            var query = '?bd_idx=' + bdIdx + '&cols_idx=' + colsIdx + '&data_val=' + encodeURIComponent(val);",
                    "                            fStore.getData().items[fieldIndex].set('data_val', val);",
                    "                            viewCtr.updateCellValue(query, winCC);",
                    "                        }",
                    "                    }",
                    "                ]",
                    "            }).show();",
                    "        }",
                    "        if(attr == 'link'){",
                    "            var lnkWin = Ext.create(appName + '.view.LinkingWindow', {",
                    "                maxHeight:windowMaxHeight",
                    "            });",
                    "            lnkWin.on('show', function(lw){",
                    "                if(preVal.length === 0) return;",
                    "                var lnkData = preVal.split(',');",
                    "                Ext.Array.each(lnkData, function(item){",
                    "                    /* get information of each data in link from server */",
                    "                    Ext.data.JsonP.request({",
                    "                        url:getDataWriteApi() + '?bd_idx=' + item.trim(),",
                    "                        success:function(response){",
                    "                            if(!response.binderBean.bd_file) return;",
                    "                            var path = 'resources/images/ico_noimage.gif';",
                    "                            if(response.binderBean.bd_file.length > 0){",
                    "                                path = response.binderBean.bd_file[0].thumb_path;",
                    "                            }",
                    "                            var unit = Ext.create(appName + '.view.LinkUnit', {",
                    "                                bd_idx:response.binderBean.bd_idx,",
                    "                                itemId:'unit_' + response.binderBean.bd_idx",
                    "                            });",
                    "                            unit.down('#image').setStyle('background-image', 'url('+ path + ')');",
                    "                            unit.getViewModel().setData({",
                    "                                unitTitle:response.binderBean.bd_subject,",
                    "                                src:path",
                    "                            });",
                    "                            var dropBox = lnkWin.down('#dropBox');",
                    "                            dropBox.add(unit);",
                    "                        }",
                    "                    });",
                    "                });",
                    "            });",
                    "            lnkWin.show();",
                    "            lnkWin.on('save', function(win){",
                    "                var dropBox = lnkWin.down('#dropBox');",
                    "                var val = '';",
                    "                if(dropBox.getLinkData().length > 0){",
                    "                    val = dropBox.getLinkData()[0].bd_idx;",
                    "                }",
                    "",
                    "                for (var i=dropBox.getLinkData().length; i--; ){",
                    "                    if(i !== 0){",
                    "                        val += ', ' + dropBox.getLinkData()[i].bd_idx;",
                    "                    }",
                    "                }",
                    "                /* update html to viewer */",
                    "                var html = '<div style=\"width:100%\">';",
                    "                for(i=0; i<dropBox.getLinkData().length; i++){",
                    "                    var url = domain + '/thumb/' + dropBox.getLinkData()[i].bd_idx + '/0/T';",
                    "                    html += '<div class=\"viewer-link\" style=\"background:URL('+url+')\"></div>';",
                    "                }",
                    "                html += '</div>';",
                    "",
                    "                Ext.get(target).dom.innerHTML = html;",
                    "                var query = '?bd_idx=' + bdIdx + '&cols_idx=' + colsIdx + '&data_val=' + val;",
                    "                fStore.getData().items[fieldIndex].set('data_val', val);",
                    "                viewCtr.updateCellValue(query, lnkWin);",
                    "            });",
                    "        }",
                    "        if(attr == 'dataset'){",
                    "            dsetRecord.set('cols_name', target.getAttribute('cols_name'));",
                    "            dsetRecord.set('cols_idx',  target.getAttribute('cols_idx'));",
                    "            dsetRecord.set('cols_data', fStore.getData().items[fieldIndex].get('cols_data'));",
                    "            dsetRecord.set('cols_code', target.getAttribute('cols_code'));",
                    "",
                    "            var winDset = Ext.create('Ext.window.Window',{",
                    "                modal:true,",
                    "                bodyStyle:'padding:20px',",
                    "                width:810,",
                    "                ghost:false,",
                    "                title:colsName",
                    "            }).show();",
                    "",
                    "            var saveBtn = {",
                    "                xtype:'button',",
                    "                text:loc.menu.update,",
                    "                glyph:'xf079@FontAwesome',",
                    "                width:100,",
                    "                style:'margin:0 auto',",
                    "                handler:function(button){",
                    "                    var dsetCon = button.up('window').down('datasetgridbox');",
                    "                    var grid = dsetCon.getGrid();",
                    "                    /* in case grids insise of form */",
                    "                    /* if dataset field exists, get values from each dataset field */",
                    "                    /* store in dataset grid */",
                    "                    var dsetStore = grid.getStore();",
                    "                    //     var subIdxs = grid.subIdxs;",
                    "                    var idxVal = '';",
                    "                    var query = 'cols_idx=' + colsIdx;",
                    "                    query += '&bd_idx=' + bdIdx;",
                    "                    dsetStore.each(function(record, index){",
                    "                        Ext.Object.each(record.data, function(key, val){",
                    "                            if(val === undefined || val === null) val = '';",
                    "                            /* for Date value change to short format */",
                    "                            if(Ext.isDate(val)){",
                    "                                val = utilCtr.parseDate(val);",
                    "                            }",
                    "                            var prefix;",
                    "                            if(key.indexOf('_data_') != -1){",
                    "                                query += '&' + key + '_' + index + '=' + val;",
                    "                            }",
                    "                            /* sub category */",
                    "                            if(key === 'subIdx'){",
                    "                                query += '&cols' + colsIdx + '_bd_idx=' + val;",
                    "                            }",
                    "                        });",
                    "                        if(index == dsetStore.getCount() - 1){",
                    "                            viewCtr.updateDatasetValue(target, winDset, query);",
                    "                        }",
                    "                    });",
                    "                }",
                    "            };",
                    "            getController('Post').setDatasetField(dsetRecord.data, true, winDset);",
                    "            winDset.add(saveBtn);",
                    "            return;",
                    "        }",
                    "",
                    "    });",
                    "});",
                    "",
                    "/* when click on attached */",
                    "var attachFile = component.el.select('.viewer-download-image');",
                    "viewCtr.viewAttachedFile(attachFile.elements);",
                    "/* to show color information */",
                    "var colorHex;",
                    "if(component.el.select('td[cols_code=colorHex]').elements.length > 0){",
                    "    colorHex = component.el.select('td[cols_code=colorHex]');",
                    "}",
                    "if(component.el.select('td[render=colorHex]').elements.length > 0){",
                    "    colorHex = component.el.select('td[render=colorHex]');",
                    "}",
                    "if(colorHex !== undefined) this.viewColorInformation(colorHex.elements);"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "designer|commentHeader": "comment",
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string"
            },
            "name": "onViewerAfterRender",
            "designerId": "dba9abdb-bc9b-4149-9c0a-36b72f6e7df8"
        }
    ]
}
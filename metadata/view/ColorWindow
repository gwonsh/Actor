{
    "type": "Ext.window.Window",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "container|align": "stretch",
        "container|padding": 15,
        "designer|userAlias": "colorwindow",
        "designer|userClassName": "ColorWindow",
        "erpDomain": "http://hanapi.dipol.co.kr:8080",
        "ghost": false,
        "id": "color_window",
        "itemId": "colorWindow",
        "layout": "hbox",
        "maximizable": true,
        "maximized": true,
        "removedRecord": [
            "[]"
        ],
        "symbolOrder": [
            "{}"
        ],
        "title": "Colorway"
    },
    "configAlternates": {
        "designer|userAlias": "string",
        "designer|userClassName": "string",
        "height": "auto",
        "id": "string",
        "title": "string",
        "width": "auto",
        "itemId": "string",
        "container|align": "string",
        "flex": "number",
        "layout": "string",
        "maximizable": "boolean",
        "ghost": "boolean",
        "modal": "boolean",
        "container|padding": "auto",
        "erpDomain": "string",
        "removedRecord": "array",
        "symbols": "object",
        "symbolOrder": "object",
        "maximized": "boolean"
    },
    "name": "MyWindow",
    "designerId": "4560d2ee-663c-4cde-ad95-652a099bc49d",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "erpDomain",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "removedRecord",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "symbolOrder",
            "type": "string"
        }
    ],
    "viewControllerInstanceId": "b0c65c55-6cce-4345-8afd-a2ce470d362a",
    "viewModelInstanceId": "a265a6aa-6553-4d46-9a04-9a9790283f44",
    "cn": [
        {
            "type": "Ext.container.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "container|align": "stretch",
                "height": "100%",
                "itemId": "designCon",
                "layout": "vbox",
                "layout|flex": 1,
                "padding": "0 0 10 0"
            },
            "configAlternates": {
                "container|align": "string",
                "height": "auto",
                "itemId": "string",
                "layout": "string",
                "layout|flex": "number",
                "padding": "auto"
            },
            "name": "MyContainer3",
            "designerId": "94c84b0e-4857-42f0-9728-76cf760b814e",
            "cn": [
                {
                    "type": "Ext.toolbar.Toolbar",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "dock": "top",
                        "style": "border:none"
                    },
                    "configAlternates": {
                        "dock": "string",
                        "style": "string"
                    },
                    "name": "MyToolbar1",
                    "designerId": "15f662fe-15bf-44b6-b5a0-01ea4976338d",
                    "cn": [
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "icon": "resources/images/ico_fit.png",
                                "itemId": "btnFit",
                                "layout|flex": null
                            },
                            "configAlternates": {
                                "icon": "string",
                                "itemId": "string",
                                "layout|flex": "number"
                            },
                            "name": "MyButton30",
                            "designerId": "ca2ec943-60ba-4561-b588-5ead73eeeeb5",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnFitClick",
                                        "implHandler": [
                                            "this.setImage('fit');"
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnFitClick",
                                    "designerId": "61b7004b-f33c-453f-bfa9-49000dbcf145"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "icon": "resources/images/ico_actual.png",
                                "itemId": "btnActual",
                                "layout|flex": null
                            },
                            "configAlternates": {
                                "icon": "string",
                                "layout|flex": "number",
                                "itemId": "string"
                            },
                            "name": "MyButton31",
                            "designerId": "92650875-1970-40e4-ae7c-604da2e863b5",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnActualClick",
                                        "implHandler": [
                                            "this.setImage('actual');"
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnActualClick",
                                    "designerId": "04930128-03e6-4620-8bae-5c17c7ffa29a"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "iconCls": "fa fa-search-plus",
                                "itemId": "btnPlus",
                                "layout|flex": null
                            },
                            "configAlternates": {
                                "iconCls": "string",
                                "itemId": "string",
                                "layout|flex": "number"
                            },
                            "name": "MyButton32",
                            "designerId": "68620138-5d63-45ee-ba29-fc91ff6baf57",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnPlusClick",
                                        "implHandler": [
                                            "this.setImage('plus');"
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnPlusClick",
                                    "designerId": "c6b4a6fc-52a3-4cf5-8f94-8f7c2ef78458"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "iconCls": "fa fa-search-minus",
                                "itemId": "btnMinus",
                                "layout|flex": null
                            },
                            "configAlternates": {
                                "iconCls": "string",
                                "layout|flex": "number",
                                "itemId": "string"
                            },
                            "name": "MyButton33",
                            "designerId": "edef0508-1446-4f3f-b119-99b844c06c17",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnMinusClick",
                                        "implHandler": [
                                            "this.setImage('minus');"
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnMinusClick",
                                    "designerId": "8e453bbf-9abf-4c74-813f-2595532acf51"
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "Ext.form.Panel",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "appliedGroup": 0,
                        "itemId": "designForm",
                        "layout|flex": 1,
                        "scrollable": true
                    },
                    "configAlternates": {
                        "scrollable": "auto",
                        "flex": "number",
                        "layout|flex": "number",
                        "bodyStyle": "string",
                        "height": "auto",
                        "itemId": "string",
                        "appliedGroup": "number"
                    },
                    "name": "MyForm",
                    "designerId": "bea1d535-919f-4f71-a553-ac9b523b54c1",
                    "customConfigs": [
                        {
                            "group": "(Custom Properties)",
                            "name": "appliedGroup",
                            "type": "string"
                        }
                    ],
                    "cn": [
                        {
                            "type": "viewcontrollereventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onFormAfterRender",
                                "implHandler": [
                                    "var record=component.getRecord();",
                                    "",
                                    "if(record.get('bd_file').length === 0) {",
                                    "    cWin.close();",
                                    "    return;",
                                    "}",
                                    "var cWin = component.up('window');",
                                    "var me = this;",
                                    "var file_path=\"\";",
                                    "cWin.currentDesign = record.get('bd_subject');",
                                    "",
                                    "//최초 캔버스 크기 지정",
                                    "component.canvas.width = record.get('file_width');",
                                    "component.canvas.height = record.get('file_height');",
                                    "component.canvas.scale = 1;",
                                    "",
                                    "/////////////////////////////////////////",
                                    "// Actor에 저장된 해당 디자인 칼라웨이 로드 //",
                                    "/////////////////////////////////////////",
                                    "var scSto = cWin.getViewModel().getStore('SavedColorway');",
                                    "var cfgStore = Ext.getStore('ConfigStore');",
                                    "var query = 'ca_id=' + cfgStore.getAt(0).get('colorwayCategory') + '&se_refer=' + record.get('bd_idx') + '&page_size=' + 10000;",
                                    "cWin.firstIdxs = []; // ERP로 부터 업데이트 된경우 초기화를 위해 칼라웨이 카테고리의 해당 디자인의 칼라웨이를 모두 삭제 준비",
                                    "scSto.getProxy().setUrl(getDataListByIdApi(query));",
                                    "scSto.load({",
                                    "    callback:function(records, operation){",
                                    "        if(scSto.getCount() > 0){",
                                    "            var colorways = [];",
                                    "            scSto.each(function(record, index){",
                                    "                //디자인디폴트 자료를 제외한 모든 칼라웨이 자료를 담아서 삭제 대비",
                                    "                //이 경우 업데이트하고 저장할 경우 기존 자료를 수정 처리하므로 남아 있게 된다.",
                                    "//                 if(record.get('group') !== 0) cWin.firstIdxs.push(record.get('bd_idx'));",
                                    "                cWin.firstIdxs.push(record.get('bd_idx'));",
                                    "                var obj = {};",
                                    "                obj.color = record.data.color;",
                                    "                obj.color_name = record.data.color_name;",
                                    "                obj.user = record.data.user;",
                                    "                obj.chasu = record.data.chasu;",
                                    "                obj.group = record.data.group;",
                                    "                obj.behalf = record.data.behalf;",
                                    "                obj.check = record.data.check;",
                                    "                obj.bd_idx = record.data.bd_idx; //스토어 수정이나 삭제를 위해서 저장",
                                    "                colorways.push(obj);",
                                    "                if(record.get('group') === 0){",
                                    "                    component.originalColor=JSON.parse(JSON.stringify(obj));",
                                    "                }",
                                    "                cWin.fireEvent('orginalColorloaded');",
                                    "            });",
                                    "            cWin.sourceOrigin = 'actor';",
                                    "            cWin.getController().initialize(colorways);",
                                    "        }",
                                    "        else{//서버에 저장된 칼라웨이 정보가 없으면 디자인 기본칼라를 불러 새로운 칼라웨이 시작",
                                    "            component.getDefaultColorList(record);",
                                    "        }",
                                    "        file_path=record.get('bd_file')[0].file_path;",
                                    "        me.setImage('actual');",
                                    "    }",
                                    "});",
                                    "",
                                    "// me.setImage('fit');",
                                    "cWin.setTitle(cWin.getTitle() + '[' + record.get('bd_subject') + ']');",
                                    "",
                                    "component.canvas.onclick = function(e, eOpt){",
                                    "    var colorRec = component.selectedColorRecord;",
                                    "    if(colorRec === undefined || colorRec.get('group') === 0){",
                                    "        Ext.toast(loc.colorway.noDefaultChange);",
                                    "        return;",
                                    "    }",
                                    "    var canvas = component.canvas;",
                                    "    var ctx = canvas.getContext('2d');",
                                    "    var p = ctx.getImageData(e.x, e.y, 1, 1).data;    ",
                                    "    var color = chroma([p[0], p[1], p[2]]).hex();",
                                    "    console.log(color);",
                                    "    for(var i=0; i<colorRec.get('color').length; i++){",
                                    "        if(colorRec.get('color')[i].color == color){",
                                    "            colorRec.get('color')[i].color = '#ffcc00';  ",
                                    "        }",
                                    "    }",
                                    "    component.up('window').down('#colorGrid').refresh();",
                                    "    return;",
                                    "",
                                    "    var cWin = Ext.create(appName + '.view.ActorWindow',{",
                                    "        id:'colorChipWin',",
                                    "        listeners:{",
                                    "            render:function(win){",
                                    "                win.disableEvent();",
                                    "            },",
                                    "            pagingtoolbarcomplete:function(toolbar){",
                                    "                var rangeFinder = {",
                                    "                    xtype: 'button',",
                                    "                    height:35,",
                                    "                    width:23,",
                                    "                    itemId:'btnFindByColorRange',",
                                    "                    glyph: 'xf00e@FontAwesome',",
                                    "",
                                    "                    listeners:{",
                                    "                        render:function(button){",
                                    "                            button.el.select('.x-btn-icon-el').elements[0].style.color = '#FFC017';",
                                    "                            button.setTooltip(loc.search.findSimilar);",
                                    "                        }",
                                    "                    },",
                                    "                    handler:function(button){",
                                    "                        me.findSimilarColor(91, color);",
                                    "                    }",
                                    "                };",
                                    "                toolbar.insert(toolbar.items.items.length - 2, rangeFinder);",
                                    "            }",
                                    "        }",
                                    "    }).show();",
                                    "",
                                    "    var tree = cWin.down('#tree');",
                                    "    tree.on('itemclick', function(cateTree, rec){",
                                    "        if(rec && rec.data){",
                                    "            var opt = getOption(rec.data.data.ca_option);",
                                    "            if(opt.colorChip){",
                                    "                cWin.getGrid().categoryId = rec.get(\"id\");",
                                    "                cWin.getGrid().numOfItem = 100;",
                                    "                getController('Main').getServerData(rec.get(\"id\"), 'ca_id=' + rec.get(\"id\"), cWin.getGrid());",
                                    "            }",
                                    "            else{",
                                    "                Ext.toast(loc.error.noColorchipCategory);",
                                    "            }",
                                    "        }",
                                    "    });",
                                    "    var treeStore = tree.getStore();",
                                    "    treeStore.on('load', function(tStore){",
                                    "        var ccCate = 91;",
                                    "        cWin.categoryId = ccCate;",
                                    "        var node = treeStore.getNodeById(ccCate);",
                                    "        tree.getSelectionModel().select(node);",
                                    "        //show category that configured at actor.json at the first time",
                                    "        tree.fireEvent('itemclick', tree, node, tree.el, '', event);",
                                    "    });",
                                    "    //when click one of color code list",
                                    "    cWin.getGrid().on('itemclick', function(inDataview, inRecord){",
                                    "        var hex = inRecord.get('idcolorHex');",
                                    "        var name=inRecord.get('bd_subject');",
                                    "        if(hex.indexOf('#') == -1) hex = '#'+ hex;",
                                    "        tempColor.color=hex;",
                                    "        tempColor.name=name;",
                                    "        color[idx]=tempColor;",
                                    "        record.set(\"color\",color);",
                                    "        dataview.refresh();",
                                    "        cWin.close();",
                                    "        if(record.get('check')) {",
                                    "            form.setChangeColor(tempColor2, hex, form.cloneCanvas(form.originalCanvas), canvas);",
                                    "        }",
                                    "    });",
                                    "",
                                    "};"
                                ],
                                "name": "afterrender",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string",
                                "scope": "string"
                            },
                            "name": "onFormAfterRender",
                            "designerId": "ddfb90da-d61b-4f6e-99fa-b6bc3156dc56"
                        },
                        {
                            "type": "viewcontrollereventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onFormBeforeRender",
                                "implHandler": [
                                    "    var canvas_box=new Ext.create({",
                                    "        xtype:'box',",
                                    "        itemId:'myCanvas',",
                                    "        autoEl:{",
                                    "            tag:'canvas'",
                                    "        },",
                                    "        listeners: {",
                                    "            render:function(componet) {",
                                    "                var canvas=componet.el.dom;",
                                    "                componet.up(\"form\").canvas=canvas;",
                                    "",
                                    "            }",
                                    "        }",
                                    "    });",
                                    "",
                                    "    component.add(canvas_box);"
                                ],
                                "name": "beforerender",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string",
                                "scope": "string"
                            },
                            "name": "onFormBeforeRender",
                            "designerId": "dc5fe24a-9843-4757-b742-3dfed397e581"
                        },
                        {
                            "type": "basicfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "rec"
                                ],
                                "fn": "getDefaultColorList",
                                "implHandler": [
                                    "",
                                    "////////////////////////",
                                    "// get local colorway //",
                                    "////////////////////////",
                                    "var me = this;",
                                    "var cWin = me.up('window');",
                                    "var url=domain+\"/json/color\";",
                                    "var params={file_idx:rec.get('bd_file')[0].file_idx};",
                                    "//call default colors",
                                    "Ext.data.JsonP.request({",
                                    "    url:url,",
                                    "    method:'POST',",
                                    "    params: params,",
                                    "    success: function(response){",
                                    "        var symbolCon = me.up('window').down('#behalfCon');",
                                    "        var symbols = [], colorways;",
                                    "        for(var i=0; i<response.color.length; i++){",
                                    "            response.color[i].cno = i + 1;",
                                    "        }",
                                    "        colorways = [{group:0, check:true, color:response.color, chasu:1, color_name:'디자인 디폴트', behalf:symbols, id:'default_1'}];",
                                    "        cWin.down('#designForm').originalColor=colorways[0];",
                                    "        cWin.getController().initialize(colorways);",
                                    "    },",
                                    "    failure: function() {",
                                    "        console.info(\"오류\");",
                                    "    }",
                                    "",
                                    "});"
                                ]
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code"
                            },
                            "name": "getDefaultColorList",
                            "designerId": "602ce696-af67-4261-9936-cacb6f10bb9b"
                        },
                        {
                            "type": "basicfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "canvas"
                                ],
                                "fn": "cloneCanvas",
                                "implHandler": [
                                    "//create a new canvas",
                                    "var newCanvas = document.createElement('canvas');",
                                    "var context = newCanvas.getContext('2d');",
                                    "//set dimensions",
                                    "newCanvas.width = canvas.width;",
                                    "newCanvas.height = canvas.height;",
                                    "//apply the old canvas to the new one",
                                    "context.drawImage(canvas, 0, 0);",
                                    "",
                                    "//return the new canvas",
                                    "return newCanvas;",
                                    ""
                                ]
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code"
                            },
                            "name": "cloneCanvas",
                            "designerId": "da855443-bd6e-49c6-b53d-22bf22f732df"
                        },
                        {
                            "type": "basicfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "isOrignal"
                                ],
                                "fn": "setButton",
                                "implHandler": [
                                    "                var win=this.up(\"window\");",
                                    "                if(isOrignal===false) {",
                                    "                    win.down(\"#btnRestore\").setDisabled(false);",
                                    "                }"
                                ]
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code"
                            },
                            "name": "setButton",
                            "designerId": "71e08488-ff6f-4ae2-aa3e-c6e8062533b1"
                        },
                        {
                            "type": "basicfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "file_path"
                                ],
                                "fn": "setImage",
                                "implHandler": [
                                    "// var me=this;",
                                    "// var canvas=this.canvas;",
                                    "// var drawing = new Image();",
                                    "// this.mask(loc.main.loadingImage);",
                                    "// drawing.crossOrigin=\"anonymous\";",
                                    "// drawing.src = file_path;",
                                    "// drawing.onload=function() {",
                                    "//     var drwWidth=drawing.width;",
                                    "//     var drwHeight=drawing.height;",
                                    "//     if(drawing.width>1024) {",
                                    "//         var ratio=1024/drwHeight;",
                                    "//         drwWidth=drwWidth*ratio;",
                                    "//         drwHeight=1024;",
                                    "//     }",
                                    "",
                                    "//     canvas.width=drwWidth;",
                                    "//     canvas.height=drwHeight;",
                                    "//     ctx = canvas.getContext('2d'); // Get the drawing context of your canvas element.",
                                    "",
                                    "//     ctx.oImageSmoothingEnabled = false;",
                                    "//     ctx.mozImageSmoothingEnabled = false;",
                                    "//     ctx.webkitImageSmoothingEnabled = false;",
                                    "//     ctx.msImageSmoothingEnabled = false;",
                                    "//     ctx.imageSmoothingEnabled = false;",
                                    "// //     ctx.drawImage(drawing, 0, 0, drawing.width, drawing.height, 0, 0, drwWidth, drwHeight);",
                                    "//     ctx.drawImage(drawing, 0, 0, drawing.width, drawing.height);",
                                    "// //     ctx.drawImage(drawing, 0, 0, drwWidth, drwHeight);",
                                    "//     // \tctx.drawImage(drawing, 0, 0, drwWidth, drwHeight);",
                                    "//     if(me.originalCanvas===undefined) {",
                                    "//         me.originalCanvas=me.cloneCanvas(canvas);",
                                    "//     }",
                                    "//     me.unmask();",
                                    "//     me.fireEvent('imageready');",
                                    "// };",
                                    ""
                                ]
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code"
                            },
                            "name": "setImage",
                            "designerId": "5aea883b-6233-486e-9b15-b41616d5d739"
                        },
                        {
                            "type": "basicfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "hex"
                                ],
                                "fn": "hexToRgb",
                                "implHandler": [
                                    "var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);",
                                    "return result ? {",
                                    "    r: parseInt(result[1], 16),",
                                    "    g: parseInt(result[2], 16),",
                                    "    b: parseInt(result[3], 16)",
                                    "} : null;",
                                    ""
                                ]
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code"
                            },
                            "name": "hexToRgb",
                            "designerId": "5de899de-14b2-4c35-8dd5-887e528cae5a"
                        },
                        {
                            "type": "basicfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "designNo",
                                    "chasu",
                                    "dosu",
                                    "colorings"
                                ],
                                "fn": "getChasuList",
                                "implHandler": [
                                    "var url = this.up('window').erpDomain + '/getColorList?design='+designNo+'&chasu='+chasu+'&cno=1';",
                                    "var colors = [{num:''}];",
                                    "Ext.data.JsonP.request({",
                                    "    url:url,",
                                    "    success:function(response){",
                                    "        var colorways=[];",
                                    "        var i, j;",
                                    "        for(i=0; i< colorings.length; i++){",
                                    "            colorways[i] = [];",
                                    "        }",
                                    "        Ext.Array.each(response, function(entry, z){",
                                    "            var cwNo = entry.CNO - 1;",
                                    "            var jssu = entry.JSSU - 9;",
                                    "",
                                    "            if(colorways[jssu] === undefined){",
                                    "                colorways[jssu] = {colors:[]};",
                                    "            }",
                                    "",
                                    "            var c = (entry.DCOLOR === null)? entry.COLOR : entry.DCOLOR;",
                                    "            var isExist=false;",
                                    "            for (var i = 0; i < colorways[jssu].colors.length; i++) {",
                                    "                if ((colorways[jssu].colors[i].cno === cwNo + 1) && (colorways[jssu].colors[i].name == c)) isExist=true;",
                                    "",
                                    "            }",
                                    "            if(c == '.') {",
                                    "                c = colorways[jssu - 1].colors[cwNo-1].name;",
                                    "            }",
                                    "",
                                    "            if(isExist === false) colorways[jssu].colors.push({name:c, cno:cwNo + 1});",
                                    "        });",
                                    "        ////////////////////",
                                    "        // Colorway store //",
                                    "        ////////////////////",
                                    "        var colorStore = Ext.create('Ext.data.Store', {",
                                    "            storeId:'ERPColorwayStore',",
                                    "            autoLoad:true,",
                                    "            fields:[",
                                    "                {",
                                    "                    name:'칼라코드',",
                                    "                    mapping:'colors'",
                                    "                }",
                                    "            ],",
                                    "            data:colorways",
                                    "        });",
                                    "        /////////////////////////////////",
                                    "        // Colorway list in ERP window //",
                                    "        /////////////////////////////////",
                                    "        var cListWin = Ext.create('Ext.window.Window', {",
                                    "            width:600,",
                                    "            padding:20,",
                                    "            title:'Colorways-' + chasu,",
                                    "            scrollable:true,",
                                    "            layout:'fit',",
                                    "            itemId:'colorwayList',",
                                    "            maxHeight:windowMaxHeight,",
                                    "            items:[",
                                    "                {",
                                    "                    ///////////////////",
                                    "                    // Colorway grid //",
                                    "                    ///////////////////",
                                    "                    xtype:'gridpanel',",
                                    "                    width:'100%',",
                                    "                    columns:[",
                                    "                        {",
                                    "                            xtype:'rownumberer'",
                                    "                        },",
                                    "                        {",
                                    "                            text: 'Color',",
                                    "                            dataIndex:'colors',",
                                    "                            flex:1,",
                                    "                            renderer:function(v){",
                                    "                                var val = '';",
                                    "                                for(var i=0; i<v.length; i++){",
                                    "                                    var bgColor = (v[i].color === undefined)? '':v[i].color;",
                                    "                                    val += '<div style=\"background-color:'+bgColor+';display:inline-block;padding:2px 5px 2px 5px;border:1px solid #cecece;margin-right:5px; width:55px\">';",
                                    "                                    val += v[i].name+'</div>';",
                                    "                                }",
                                    "                                return val;",
                                    "                            }",
                                    "                        },",
                                    "                        {",
                                    "                            xtype: 'actioncolumn',",
                                    "                            width:60,",
                                    "                            text:'보기',",
                                    "                            align:'center',",
                                    "                            items:[",
                                    "                                {",
                                    "                                    icon:'resources/images/ico_colorwheel.png',",
                                    "                                    tooltip:'색표시',",
                                    "                                    itemId:'btnGetHex',",
                                    "                                    cls:'action-icon',",
                                    "                                    handler:function (grid, rowIndex, colIndex){",
                                    "                                        //add cliked colorway to color_window grid",
                                    "                                        var rec = grid.getStore().getAt(rowIndex);",
                                    "                                        var colors = rec.get('colors');",
                                    "                                        Ext.getCmp('color_window').getController().getHexByCode(rec, colors, colorWin.down('gridpanel'));",
                                    "                                    }",
                                    "                                }",
                                    "                            ]",
                                    "                        }",
                                    "",
                                    "                    ],",
                                    "                    selModel: {",
                                    "                        selType: 'checkboxmodel'",
                                    "                    },",
                                    "                    store:colorStore,",
                                    "                    listeners:{",
                                    "                        itemclick:function(dataview, rec, item, index, e){",
                                    "                            if(e.target.className == 'x-grid-checkcolumn') return;//for click on checkbox",
                                    "                            //when click on activecolumn",
                                    "                            if(Ext.get(e.target).dom.localName == 'img') return;",
                                    "                            var colors = rec.get('colors');",
                                    "                            dataview.grid.addColorway(colors);",
                                    "                        },",
                                    "                        afterlayout:function onAfterLayout(dataview){",
                                    "                            /////////////////////////////////////////////////////////",
                                    "                            // Automatically fill color by hex to colorways in ERP //",
                                    "                            /////////////////////////////////////////////////////////",
                                    "                            dataview.un('afterlayout', onAfterLayout);",
                                    "                            var count = 0;",
                                    "                            var store = dataview.getStore(); //store for colorways in ERP",
                                    "                            var getColorways = function(rec, colors){",
                                    "                                dataview.up('window').mask('추천 배색를 불러오고 있는 중입니다.');",
                                    "                                Ext.getCmp('color_window').getController().getHexByCode(rec, colors, dataview);",
                                    "                            };",
                                    "                            Ext.getCmp('color_window').on('colorwayloadcomplete', function (win){",
                                    "                                if(count < store.getCount() ){",
                                    "                                    getColorways(store.getAt(count), store.getAt(count).get('colors'));",
                                    "                                    count ++;",
                                    "                                }",
                                    "                                else{",
                                    "                                    if(dataview.up('window')) dataview.up('window').unmask();",
                                    "                                }",
                                    "                            });",
                                    "                            getColorways(store.getAt(count), store.getAt(count).get('colors'));",
                                    "",
                                    "                        }",
                                    "                    },",
                                    "                    addColorway:function(colors){",
                                    "                        var colorWin = Ext.getCmp('color_window');",
                                    "                        var colorStore= colorWin.down('#colorGrid').getStore();",
                                    "                        var genMainColor={group:colorStore.getCount(), check:false, color:colors, color_name:''};",
                                    "                        var record = Ext.data.Record.create(genMainColor);",
                                    "                        record.set('chasu', colorWin.down('#cbChasu').getValue()); // add chasu to store",
                                    "                        record.set('user', userInfo.nv_name);",
                                    "                        colorStore.add(record);",
                                    "                        var colorwayList = colorWin.down('#colorGrid');",
                                    "                        colorwayList.refresh();",
                                    "                        cListWin.close();",
                                    "                    }",
                                    "                }",
                                    "            ],",
                                    "            dockedItems:[//add colorway to color_window grid",
                                    "                {",
                                    "                    xtype:'container',",
                                    "                    dock:'bottom',",
                                    "                    width:'100%',",
                                    "                    margin:'15 0 0 0',",
                                    "                    items:[",
                                    "                        {",
                                    "                            xtype:'button',",
                                    "                            text:loc.main.add,",
                                    "                            style:'float: right',",
                                    "                            width:100,",
                                    "                            handler:function(button){",
                                    "                                var selected = button.up('window').down('gridpanel').getSelectionModel().getSelection();",
                                    "                                var grid = button.up('window').down('gridpanel');",
                                    "                                for(var i=0; i<selected.length; i++){",
                                    "                                    grid.addColorway(selected[i].get('colors'));",
                                    "                                }",
                                    "                            }",
                                    "                        }",
                                    "                    ]",
                                    "                }",
                                    "            ]",
                                    "",
                                    "        }).show();",
                                    "    }",
                                    "});"
                                ]
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code"
                            },
                            "name": "getChasuList",
                            "designerId": "ec2e40c5-bbe7-4ea7-ab56-51ea420673d6"
                        },
                        {
                            "type": "basicfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "originalRec, targetRec"
                                ],
                                "fn": "setAllChangeColor",
                                "implHandler": [
                                    "var form = Ext.getCmp('color_window').down('#designForm');",
                                    "var originalCanvas=form.cloneCanvas(form.originalCanvas);",
                                    "var targetCanvas=form.canvas; // 칼라웨이를 적용할 캔버스",
                                    "var count = 0;",
                                    "form.on('colorapplied', function removeMask(){",
                                    "//     form.un('colorapplied', removeMask);",
                                    "    count ++;",
                                    "    if(count == originalRec.length - 1){",
                                    "        count = 0;",
                                    "        form.unmask();",
                                    "    }",
                                    "});",
                                    "for(var i=0; i<originalRec.length;i++) {",
                                    "    if(targetRec.length-1>=i) {",
                                    "        form.setChangeColor(originalRec[i].color, targetRec[i].color, originalCanvas, targetCanvas);",
                                    "    }",
                                    "}",
                                    ""
                                ]
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code"
                            },
                            "name": "setAllChangeColor",
                            "designerId": "7072071c-6807-4861-b2f5-a2abbd7b9178"
                        },
                        {
                            "type": "basicfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "original",
                                    "target",
                                    "originalCanvas",
                                    "targetCanvas"
                                ],
                                "fn": "setChangeColor",
                                "implHandler": [
                                    "// originalCanvas : form.cloneCanvas(form.originalCanvas);",
                                    "// targetCanvas : form.canvas; // 칼라웨이를 적용할 캔버스",
                                    "",
                                    "var original_color=this.hexToRgb(original);",
                                    "var target_color=this.hexToRgb(target);",
                                    "//for none exist color, set color to white",
                                    "if(original_color === null) original_color = {r:255, g:255, b:255};",
                                    "if(target_color === null) target_color = {r:255, g:255, b:255};",
                                    "var oriCtx = originalCanvas.getContext('2d'); // Get the drawing context of your canvas element.",
                                    "var img = oriCtx.getImageData(0, 0, originalCanvas.width, originalCanvas.height), // Pull a rectangle of image data from context",
                                    "    data = img.data, // Image image data array.",
                                    "    len = data.length; // Length of data array.",
                                    "this.setButton(false);",
                                    "//    this.isOrignal=false;",
                                    "",
                                    "var t=1;",
                                    "i=0;",
                                    "do {",
                                    "    if(data[i]==original_color.r && data[i+1]==original_color.g && data[i+2]==original_color.b) {",
                                    "        data[i] = (1-t) + (target_color.r*t);",
                                    "        data[i+1] = (1-t) + (target_color.g*t);",
                                    "        data[i+2] = (1-t) + (target_color.b*t);",
                                    "    }",
                                    "    i+=2; //data[i] = data[i++] * 1 + 0; << skip alpha component. Adjust as needed.",
                                    "",
                                    "} while(i < len);",
                                    "oriCtx.putImageData(img, 0, 0);//originalCanvas context",
                                    "var tgtCtx = targetCanvas.getContext('2d');//targetCanvas context",
                                    "//apply the old canvas to the new one",
                                    "tgtCtx.clearRect(0, 0, this.originalCanvas.width, this.originalCanvas.height);",
                                    "tgtCtx.drawImage(originalCanvas, 0, 0);",
                                    "",
                                    "this.baseCanvas = this.cloneCanvas(originalCanvas);",
                                    "this.up('window').unmask();",
                                    "this.fireEvent('colorapplied');//to read count from setAllChangeColor",
                                    ""
                                ]
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code"
                            },
                            "name": "setChangeColor",
                            "designerId": "91331b10-3dd5-4a47-8b6c-a55667af6344"
                        }
                    ]
                }
            ]
        },
        {
            "type": "Ext.container.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "height": "100%",
                "itemId": "eastCon",
                "layout": "vbox",
                "minWidth": 320,
                "padding": 15,
                "scrollable": true,
                "style": "border-left:1px solid #cecece",
                "width": 320
            },
            "configAlternates": {
                "layout|flex": "number",
                "container|align": "string",
                "height": "auto",
                "layout": "string",
                "padding": "auto",
                "style": "string",
                "minWidth": "number",
                "scrollable": "auto",
                "itemId": "string",
                "width": "auto"
            },
            "name": "MyContainer",
            "designerId": "4bf0e733-6cec-460c-9e25-250090017843",
            "cn": [
                {
                    "type": "Ext.form.FieldSet",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "container|align": "stretch",
                        "itemId": "chasuFieldSet",
                        "layout": "hbox",
                        "style": "background-color:white !important;border: 1px solid #cecece;",
                        "title": "차수",
                        "width": 288
                    },
                    "configAlternates": {
                        "container|align": "string",
                        "layout": "string",
                        "padding": "auto",
                        "container|padding": "auto",
                        "itemId": "string",
                        "style": "string",
                        "title": "string",
                        "width": "auto"
                    },
                    "name": "MyFieldSet",
                    "designerId": "e2e79263-dec8-4b9a-a557-286f7a218c8c",
                    "cn": [
                        {
                            "type": "Ext.form.field.ComboBox",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "displayField": "chasu",
                                "itemId": "cbChasu",
                                "labelWidth": 45,
                                "valueField": "chasu",
                                "width": 65
                            },
                            "configAlternates": {
                                "value": "string",
                                "displayField": "datafield",
                                "fieldLabel": "string",
                                "itemId": "string",
                                "labelWidth": "number",
                                "valueField": "datafield",
                                "width": "auto"
                            },
                            "name": "MyComboBox2",
                            "designerId": "838bb396-d358-475e-9a4d-1e7be3d3a217",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onCbChasuSelect",
                                        "implHandler": [
                                            "var me = this;",
                                            "var chasu = combo.getValue();",
                                            "var behalfCon = combo.up('#eastCon').down('#behalfCon');",
                                            "// initialize filters",
                                            "if(this.getStore().filters) this.getStore().filters.clear();",
                                            "//전체 store에서 차수에 맞게 sort",
                                            "this.getStore().filterBy(function(rec){",
                                            "    var rc = rec.get('chasu');",
                                            "    if(rc == chasu && rec.get('color').length > 0){",
                                            "        if(rc == chasu){",
                                            "            //give title of labels in #behalfCon",
                                            "            behalfCon.setBehalfs(rec, me.getStore());",
                                            "        }",
                                            "        return rec;",
                                            "    }",
                                            "});",
                                            "",
                                            "//선택된 칼라웨이를 디자인에 적용",
                                            "var cWin = combo.up('window');",
                                            "var allRecords = me.getAllRecords();",
                                            "var selRec;",
                                            "for(var i=0; i<allRecords.length; i++){",
                                            "    if(allRecords[i].get('check') && allRecords[i].get('chasu') == chasu){",
                                            "        selRec = allRecords[i];",
                                            "    }",
                                            "}",
                                            "if(!selRec) return;",
                                            "var applyColor = function(){",
                                            "    cWin.down('#designForm').selectedColorRecord = selRec;",
                                            "    if(!me.checkSymbols()) return;",
                                            "    var chasu = Ext.getCmp('color_window').down('#cbChasu').getValue();",
                                            "    var symbolOrder = Ext.getCmp('color_window').symbolOrder[chasu]; //checkSymbols()에서 저장한것",
                                            "    var newColors = [];",
                                            "    for(var i=0; i<selRec.get('color').length; i++){",
                                            "        newColors[i] = selRec.get('color')[symbolOrder[i]];",
                                            "    }",
                                            "    var sourceColor = (selRec.get('group') === 0)? selRec.get('color') : newColors;",
                                            "//     Ext.getCmp('color_window').mask('칼라웨이를 적용하고 있습니다.');",
                                            "//     setTimeout(form.setAllChangeColor, 500, form.originalColor.color, sourceColor);",
                                            "",
                                            "",
                                            "    var appliedGroup = selRec.get('group');",
                                            "    if(appliedGroup === 0 && cWin.down('#designForm').appliedGroup === 0){//이미 적용된 칼라를 다시 적용하려하면 생햑",
                                            "        cWin.down('#designForm').unmask();",
                                            "        return;",
                                            "    };",
                                            "    cWin.down('#designForm').appliedGroup = selRec.get('group');",
                                            "    if(cWin.down('#designForm').originalColor === undefined){//서버에서 추출칼라 정보가 덜 불러와졌을때 대비",
                                            "        cWin.on('orginalColorloaded', function(){",
                                            "            cWin.down('#designForm').setAllChangeColor(cWin.down('#designForm').originalColor.color, sourceColor);",
                                            "        });",
                                            "    }",
                                            "    else{",
                                            "        cWin.down('#designForm').setAllChangeColor(cWin.down('#designForm').originalColor.color, sourceColor);",
                                            "    }",
                                            "};",
                                            "if(cWin.down('#designForm').originalCanvas === undefined){",
                                            "    cWin.down('#designForm').on('imageready', function(){//이미지가 완전 로드된 후",
                                            "        setTimeout(applyColor, 500);",
                                            "    });",
                                            "}",
                                            "else{",
                                            "    cWin.down('#designForm').mask('초기화 중입니다.');",
                                            "    setTimeout(applyColor, 500);",
                                            "}"
                                        ],
                                        "name": "select",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onCbChasuSelect",
                                    "designerId": "78242948-af62-4c96-9807-2aa40dce4b22"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "iconCls": "fa fa-info-circle",
                                "itemId": "btnChasuInfo",
                                "margin": "0 0 0 5"
                            },
                            "configAlternates": {
                                "iconCls": "string",
                                "itemId": "string",
                                "margin": "auto"
                            },
                            "name": "MyButton28",
                            "designerId": "60654f6b-d1b0-4069-a36c-417756876876",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnChasuInfoClick",
                                        "implHandler": [
                                            "var me = this;",
                                            "var designNo = button.up('window').down('form').getRecord().get('bd_subject');",
                                            "var chasuGrid = this.getChasuListFromERP(designNo);",
                                            "chasuGrid.on('itemclick', function(dataview, record){",
                                            "    me.getColorwayByChasuFromERP(record);",
                                            "});"
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnChasuInfoClick",
                                    "designerId": "d8fca5b9-adca-4792-9b5f-8b9356ae0d92"
                                },
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnChasuInfoAfterRender",
                                        "implHandler": [
                                            "component.setTooltip(loc.colorway.getChasulistFromERP);",
                                            ""
                                        ],
                                        "name": "afterrender",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnChasuInfoAfterRender",
                                    "designerId": "b9395e61-0b8a-43ea-9aea-2d201b91b701"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "itemId": "btnAddChasu",
                                "margin": "0 0 0 5",
                                "text": [
                                    "{add}"
                                ]
                            },
                            "configAlternates": {
                                "text": "binding",
                                "margin": "auto",
                                "itemId": "string"
                            },
                            "name": "MyButton27",
                            "designerId": "9057dec8-c414-409b-97fc-439b9b8de568",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onButtonAfterRender",
                                        "implHandler": [
                                            "component.setTooltip(loc.colorway.addChasu);"
                                        ],
                                        "name": "afterrender",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onButtonAfterRender",
                                    "designerId": "9d423773-af48-4121-a45b-af68723dd802"
                                },
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnAddChasuClick",
                                        "implHandler": [
                                            "var combo = button.up('container').down('#cbChasu');",
                                            "var store = combo.getStore();",
                                            "combo.onTriggerClick();//to make effect click on combo so chasu can list loaded",
                                            "combo.getStore().add({chasu:store.getCount() + 1});",
                                            "",
                                            "var cwStore = button.up('window').getController().getStore();",
                                            "var allRecords = this.getAllRecords();",
                                            "var defaultRec;",
                                            "for(var i=0; i<allRecords.length; i++){",
                                            "    if(allRecords[i].get('group') === 0 && allRecords[i].get('chasu') == 1){",
                                            "        defaultRec = allRecords[i];",
                                            "    }",
                                            "}",
                                            "var newRec = Ext.data.Record.create({});",
                                            "var defaultObj = {} ;",
                                            "Ext.Object.each(Ext.clone(defaultRec.data), function(key, item){",
                                            "   newRec.set(key, item);",
                                            "});",
                                            "newRec.set('chasu', store.getCount());",
                                            "newRec.set('id', 'default_' + store.getCount());",
                                            "newRec.set('check', true);",
                                            "cwStore.add(newRec.data);",
                                            "this.getView().down('#colorGrid').refresh();",
                                            ""
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnAddChasuClick",
                                    "designerId": "9b3ba112-23f2-4b1a-add0-dfd3474adc4f"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "itemId": "btnUpdateChasu",
                                "margin": "0 0 0 5",
                                "text": [
                                    "{update}"
                                ]
                            },
                            "configAlternates": {
                                "text": "binding",
                                "margin": "auto",
                                "hidden": "boolean",
                                "itemId": "string"
                            },
                            "name": "MyButton29",
                            "designerId": "902e9217-3392-41f0-96af-575b19cec971",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnUpdateChasuRender",
                                        "implHandler": [
                                            "component.setTooltip(loc.colorway.updateChasu);"
                                        ],
                                        "name": "afterrender",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnUpdateChasuRender",
                                    "designerId": "19feb4fa-0c65-4ade-a9a4-f7c27832859f"
                                },
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnUpdateChasuClick",
                                        "implHandler": [
                                            "var me = this;",
                                            "var toConf = Ext.Msg.confirm('ERP DATA 업데이트', \"업데이트하면 현재 디자인의 칼라웨이가 모두 지워집니다. 괜찮으시겠습니까?\", function(toggle, value){",
                                            "    if(toggle == 'yes'){",
                                            "        var cWin = button.up('window');",
                                            "        var url = cWin.erpDomain + '/getColorList';",
                                            "        var i;",
                                            "        ///////////////////////////////////////////",
                                            "        // 칼라순서 1 이상 조색 2 이상 모두 긁어 옴   //",
                                            "        // jssu=1은 뭔지 모르고 jssu=2는 차수별 조색 //",
                                            "        // Array로 디자인기호가 포함되어 출력        //",
                                            "        // jssu=9 이상증감함에 따라 배색 순번 별 칼라 //",
                                            "        // 웨이\t\t\t\t\t\t\t\t    //",
                                            "        ///////////////////////////////////////////",
                                            "",
                                            "        var sSyms = cWin.down('#behalfCon').symbols; //ERP에 저장된 디자인기호들",
                                            "        var mSyms = []; //재배치 된 디자인 기호들",
                                            "        var sColors = cWin.down('#colorGrid').getStore().getAt(0).get('color');",
                                            "        var inputs = cWin.down('#colorGrid').el.select('.defalut-color').elements;",
                                            "",
                                            "        if(!me.checkSymbols()){//디자인 디폴트에 칼라순서 매칭 했는지 확인",
                                            "            return;",
                                            "        }",
                                            "",
                                            "        var params = {",
                                            "            cno:1,",
                                            "            jssu:2,",
                                            "            design:cWin.currentDesign",
                                            "        };",
                                            "        Ext.data.JsonP.request({",
                                            "            url:url,",
                                            "            params:params,",
                                            "            success:function(res){",
                                            "                var colorways=[], j;",
                                            "                var jssus = [];",
                                            "                var chasus = [];",
                                            "                var colorInfo = [];",
                                            "                cWin.updated = true; // 저장할때 업데이트 여부 확인하여 기존 칼라웨이 삭제를 위해",
                                            "                for(i=0; i<res.length; i++){",
                                            "                    var index = res[i].CHASU - 1;",
                                            "                    if(res[i].JSSU == 2){",
                                            "                        if(jssus[index] === undefined) jssus[index] = [];",
                                            "                        jssus[index].push(res[i]); // 배색 Array",
                                            "                        if(chasus.indexOf(res[i].CHASU) == -1){",
                                            "                            chasus.push(res[i].CHASU);//차수 Array",
                                            "                        }",
                                            "                    }",
                                            "                    else{",
                                            "                        var color = (res[i].DCOLOR !== '' && res[i].DCOLOR !== 'null')? res[i].DCOLOR : res[i].COLOR;",
                                            "                        colorInfo.push(res[i]);",
                                            "                    }",
                                            "                }",
                                            "                for(i=0; i<chasus.length; i++){",
                                            "                    chasus[i] = {chasu:chasus[i]};",
                                            "                }",
                                            "                var combo = button.up('#chasuFieldSet').down('#cbChasu');",
                                            "                var comboStore = combo.getStore();",
                                            "                combo.onTriggerClick();",
                                            "                comboStore.setData(chasus);",
                                            "                comboStore.sort('chasu', 'ASC');",
                                            "                combo.collapse();",
                                            "                Ext.Array.each(colorInfo, function(entry, z){",
                                            "                    var chasu = entry.CHASU;",
                                            "                    var cwNo = entry.CNO - 1;",
                                            "                    var jssu = entry.JSSU - 9;",
                                            "",
                                            "                    var c = (entry.DCOLOR === null)? entry.COLOR : entry.DCOLOR;",
                                            "",
                                            "                    /*-----------------------------------------------------------------------*/",
                                            "                    var c2=c;",
                                            "                    var isExist=false;",
                                            "",
                                            "                    if(colorways[chasu] === undefined) {",
                                            "                        colorways[chasu]=[];",
                                            "                    }",
                                            "                    if(colorways[chasu][jssu] === undefined) {",
                                            "                        colorways[chasu][jssu] = {color:[]};",
                                            "",
                                            "                    }",
                                            "",
                                            "                    for (var i = 0; i < colorways[chasu][jssu].color.length; i++) {",
                                            "",
                                            "                        if ((colorways[chasu][jssu].color[i].cno === cwNo) && (colorways[chasu][jssu].color[i].name == c2)){",
                                            "                            isExist=true;",
                                            "                        }",
                                            "                    }",
                                            "",
                                            "",
                                            "                    if(c2 == '.') {",
                                            "                        c2 = colorways[chasu][jssu - 1].color[cwNo-1].name;",
                                            "                    }",
                                            "                    colorways[chasu][jssu].chasu = chasu;",
                                            "                    colorways[chasu][jssu].group = jssu + 1;",
                                            "                    colorways[chasu][jssu].check = false;",
                                            "                    colorways[chasu][jssu].bd_idx = '';",
                                            "                    colorways[chasu][jssu].behalf = [];",
                                            "                    colorways[chasu][jssu].color_name = 'Colorway ' + chasu + '-' + (jssu + 1);",
                                            "                    if(isExist === false) {",
                                            "                        colorways[chasu][jssu].color.push({color:chroma.random().hex(), name:c, cno:cwNo, chasu:entry.CHASU, cchk3:entry.CCHK3});",
                                            "                    }",
                                            "",
                                            "                });",
                                            "                var colorways3 = [];",
                                            "                for(i=0; i<colorways.length; i++) {",
                                            "                    if(colorways[i]!==undefined) {",
                                            "                        for(var jj=0; jj<colorways[i].length; jj++) {//도수만큼 돌려서 Array 합침",
                                            "                            colorways3.push(colorways[i][jj]);",
                                            "                        }",
                                            "                    }",
                                            "",
                                            "                }",
                                            "                //////////////////////////////////////////////",
                                            "                // 차수별 첫번째 Array에 기본 축출칼라 UNIT 추가 //",
                                            "                //////////////////////////////////////////////",
                                            "                var cwStore = button.up('window').getController().getStore();",
                                            "                var allRecords = me.getAllRecords();",
                                            "                var fstObjs = [];",
                                            "                for(i=0; i<allRecords.length; i++){",
                                            "                    if(allRecords[i].get('group') === 0){",
                                            "                        var obj = Ext.clone(allRecords[i].data);",
                                            "                        if(obj.chasu === 1) { //차수1 그룹0 데이터를 기준으로 삼기위해 항상 Array[0]에 위치",
                                            "                            fstObjs.unshift(obj);",
                                            "                        }",
                                            "                        else{",
                                            "                            fstObjs.push(obj);",
                                            "                        }",
                                            "                    }",
                                            "                }",
                                            "                for(i=0; i<chasus.length; i++){",
                                            "                    if(fstObjs[i] === undefined) fstObjs[i] = Ext.clone(fstObjs[0]);// 새로 추가된 차수에 대해서 첫번째 디자인기호 복사",
                                            "                    fstObjs[i].group = 0;",
                                            "                    fstObjs[i].chasu = i + 1;",
                                            "                    fstObjs[i].id = 'defalut_' + (i + 1);",
                                            "                    colorways3.unshift(fstObjs[i]);",
                                            "                }",
                                            "                cwStore.setData(colorways3);",
                                            "                cWin.down('#colorGrid').refresh();",
                                            "            }",
                                            "        });",
                                            "    }",
                                            "    else{",
                                            "        return false;",
                                            "    }",
                                            "});",
                                            "toConf.alwaysOnTop = true;"
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnUpdateChasuClick",
                                    "designerId": "8efce824-d2f9-42be-8bfc-ace37a78e129"
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "Ext.toolbar.Spacer",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "height": 5
                    },
                    "configAlternates": {
                        "height": "auto"
                    },
                    "name": "MySpacer1",
                    "designerId": "c2e67a2d-9f5f-43ac-bb0a-f8637f46e8d7"
                },
                {
                    "type": "Ext.toolbar.Toolbar",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "dock": "top",
                        "width": "100%"
                    },
                    "configAlternates": {
                        "dock": "string",
                        "width": "auto"
                    },
                    "name": "MyToolbar",
                    "designerId": "df867a88-2683-4bf9-83d9-3df6ca64bf08",
                    "cn": [
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "iconCls": "fa fa-file-o",
                                "itemId": "btnNewColorway",
                                "layout|flex": null
                            },
                            "configAlternates": {
                                "layout|flex": "number",
                                "text": "string",
                                "itemId": "string",
                                "iconCls": "string"
                            },
                            "name": "MyButton23",
                            "designerId": "943f1757-2659-480f-a045-3b599440ccc8",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnNewColorwayClick",
                                        "implHandler": [
                                            "if(!this.checkSymbols()) return;",
                                            "var len = this.getStore().getAt(0).get('color').length;",
                                            "var arr = [];",
                                            "for(var i=0; i<len; i++){",
                                            "    arr.push({name:undefined, color:undefined});",
                                            "}",
                                            "this.insertColorway(arr);",
                                            ""
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnNewColorwayClick",
                                    "designerId": "bda181df-1473-4225-b940-1efe9bb78ffc"
                                },
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnNewColorwayRender",
                                        "implHandler": [
                                            "component.setTooltip(loc.menu.newColorway);"
                                        ],
                                        "name": "render",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnNewColorwayRender",
                                    "designerId": "3cf6792f-abbc-41c1-a66d-8b27fdba16bd"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "iconAlign": "top",
                                "iconCls": "fa fa-clone",
                                "itemId": "btnCopyColorway",
                                "layout|flex": null
                            },
                            "configAlternates": {
                                "layout|flex": "number",
                                "iconAlign": "string",
                                "iconCls": "string",
                                "itemId": "string"
                            },
                            "name": "MyButton13",
                            "designerId": "bd422ea5-2a61-4be6-80ef-afddf7d676e9",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnCopyColorwayRender",
                                        "implHandler": [
                                            "component.setTooltip(loc.menu.fromAnotherDesign);"
                                        ],
                                        "name": "render",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnCopyColorwayRender",
                                    "designerId": "54cce47e-51d1-4323-984d-ff05a8cb78a4"
                                },
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnCopyColorwayClick",
                                        "implHandler": [
                                            "var me = this;",
                                            "var store = this.getStore();",
                                            "var cSto = button.up('#eastCon').down('#cbChasu').getStore();",
                                            "var chasu = button.up('#eastCon').down('#cbChasu').getValue();",
                                            "",
                                            "var win = Ext.create('Ext.window.Window', {",
                                            "    layout:{",
                                            "        type:'vbox',",
                                            "        align:'stretch'",
                                            "    },",
                                            "    width:700,",
                                            "    padding:15,",
                                            "    y:150,",
                                            "    maxHeight:windowMaxHeight,",
                                            "    title:'다른 차수에서 복사',",
                                            "    items:[",
                                            "        {",
                                            "            xtype:'container',",
                                            "            items:[",
                                            "                {",
                                            "                    xtype:'radiogroup',",
                                            "                    itemId:'rg',",
                                            "                    listeners:{",
                                            "                        render:function(rg){",
                                            "                            for(var i=0; i<cSto.getCount(); i++){",
                                            "                                var unit = {",
                                            "                                    boxLabel: (i+1).toString()+'차',",
                                            "                                    name: 'rb',",
                                            "                                    inputValue: i+1,",
                                            "                                    padding:'0 10 0 0'",
                                            "                                };",
                                            "                                if(chasu == i + 1){",
                                            "                                    unit.disabled = true;",
                                            "                                }",
                                            "                                rg.add(unit);",
                                            "                            }",
                                            "                        },",
                                            "                        change:function(rg, value, oldValue){",
                                            "                            var cData = [];",
                                            "                            Ext.Array.each(me.getAllRecords(), function(record){",
                                            "                                if(record.get('group') !== 0){",
                                            "                                    if(record.get('chasu') == value.rb){",
                                            "                                        cData.push(getController('Util').copyObject(record.data));",
                                            "                                    }",
                                            "                                }",
                                            "                            });",
                                            "                            rg.up('window').down('gridpanel').getStore().setData(cData);",
                                            "                        }",
                                            "                    }",
                                            "                },",
                                            "            ]",
                                            "        },",
                                            "        {",
                                            "            xtype:'gridpanel',",
                                            "            scrollalbe:true,",
                                            "            columns: [",
                                            "                { text: loc.main.name, dataIndex: 'color_name' },",
                                            "                { text: loc.colorway.colorway, dataIndex: 'color', flex: 1 , renderer:function(v){",
                                            "                    var unit = '<div style=\"width:100%\">';",
                                            "                    for(var i=0; i<v.length; i++){",
                                            "                        var css = 'display:inline-block;width:30px;height:30px;background-color:'+v[i].color;",
                                            "                        unit += '<div style=\"'+css+'\"></div>';",
                                            "                    }",
                                            "                    unit += '</div>';",
                                            "                    return unit;",
                                            "                }}",
                                            "            ],",
                                            "            store:Ext.create('Ext.data.Store',{",
                                            "                fields:['name', 'color']",
                                            "            }),",
                                            "            selModel: {",
                                            "                selType: 'checkboxmodel'",
                                            "            }",
                                            "        },",
                                            "    ],",
                                            "    dockedItems:[",
                                            "        {",
                                            "            xtype:'container',",
                                            "            items:[",
                                            "                {",
                                            "                    xtype:'button',",
                                            "                    text:loc.main.add,",
                                            "                    handler:function(button){",
                                            "                        var grid = button.up('window').down('gridpanel');",
                                            "                        var selected = grid.getSelectionModel().getSelection();",
                                            "                        if(selected.length === 0){",
                                            "                            Ext.toast(loc.main.noneSelected);",
                                            "                        }",
                                            "                        else{",
                                            "                            for(var i=0; i<selected.length; i++){",
                                            "                                var rec = selected[i].clone();",
                                            "                                rec.set('chasu', chasu);",
                                            "                                rec.set('color_name',  selected[i].get('color_name')+'_clone');",
                                            "                                store.add(rec);",
                                            "                            }",
                                            "                        }",
                                            "                        ",
                                            "                    }",
                                            "                }",
                                            "            ]",
                                            "        }",
                                            "    ]",
                                            "}).show();"
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnCopyColorwayClick",
                                    "designerId": "3089da5a-de01-4662-8c91-718e60cd5f10"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "hidden": true,
                                "iconAlign": "top",
                                "iconCls": "fa fa-clone",
                                "itemId": "btnCopyColorway1",
                                "layout|flex": null
                            },
                            "configAlternates": {
                                "layout|flex": "number",
                                "iconAlign": "string",
                                "iconCls": "string",
                                "itemId": "string",
                                "hidden": "boolean"
                            },
                            "name": "MyButton37",
                            "designerId": "18061bd5-5c9a-42e0-a1dc-79475fe36985",
                            "cn": [
                                {
                                    "type": "fixedfunction",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|params": [
                                            "button",
                                            "e"
                                        ],
                                        "fn": "handler",
                                        "implHandler": [
                                            "",
                                            "",
                                            "var dsnWin = Ext.create(appName + '.view.ActorWindow', {",
                                            "    title:'색정보를 가져올 디자인 선택',",
                                            "    listeners:{",
                                            "        afterrender:function(win){",
                                            "            win.disableEvent();",
                                            "        }",
                                            "    }",
                                            "}).show();",
                                            "var tree =  dsnWin.down('#tree');",
                                            "tree.on('itemclick', function(cateTree, rec){",
                                            "    if(rec.data){",
                                            "        var hasColorChip = (rec.data.data.isColor == 1)? true : false;",
                                            "        if(!hasColorChip){",
                                            "            Ext.toast(loc.error.hasNoColorDataCategory);",
                                            "        }",
                                            "        else{",
                                            "            dsnWin.down('gridpanel').categoryId = rec.get(\"id\");",
                                            "            getController('Main').getServerData(rec.get(\"id\"), '&ca_id=' + rec.get(\"id\"), dsnWin.down('gridpanel'));",
                                            "        }",
                                            "    }",
                                            "});",
                                            "tree.getStore().on('load', function(treeStore){",
                                            "    var cfgStore = Ext.getStore('ConfigStore');",
                                            "    //show default design library that configured",
                                            "    var dsnCate = cfgStore.getAt(0).get('designSourceCategory');",
                                            "    var node = treeStore.getNodeById(dsnCate);",
                                            "    tree.getSelectionModel().select(node);",
                                            "    //show category that sonfigured at actor.json",
                                            "    tree.fireEvent('itemclick', tree, node, tree.el, '', event);",
                                            "});",
                                            "//when click one of rows in the list",
                                            "dsnWin.getGrid().on('itemclick', function(grid, record){",
                                            "    var url=domain+\"/json/color\";",
                                            "    var params={file_idx:record.get('bd_file')[0].file_idx};",
                                            "    var cName = record.get('bd_file')[0].file_name;",
                                            "    Ext.data.JsonP.request({",
                                            "        url:url,",
                                            "        method:'POST',",
                                            "        params: params,",
                                            "        success: function(response){",
                                            "            var colorStore = button.up('window').getViewModel().getStore('ColorwayStore');",
                                            "            var genMainColor = {group:colorStore.getCount(), check:false, color:response.color, color_name:cName};",
                                            "            var record = Ext.data.Record.create(genMainColor);",
                                            "            colorStore.insert(1, record);",
                                            "            var dataview=button.up('window').down('dataview');",
                                            "            dataview.refresh();",
                                            "            dsnWin.close();",
                                            "        },",
                                            "        failure: function() {",
                                            "            console.info(\"오류\");",
                                            "        }",
                                            "",
                                            "    });",
                                            "",
                                            "});"
                                        ]
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "fn": "string",
                                        "implHandler": "code"
                                    },
                                    "name": "handler",
                                    "designerId": "0967e213-533a-4002-9281-a9870c02c906"
                                },
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnCopyColorwayRender1",
                                        "implHandler": [
                                            "component.setTooltip(loc.menu.fromAnotherDesign);"
                                        ],
                                        "name": "render",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnCopyColorwayRender1",
                                    "designerId": "25b7a056-b941-4487-a089-a966d9037830"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "iconAlign": "top",
                                "iconCls": "fa fa-server",
                                "itemId": "btnGetERPData",
                                "layout|flex": null
                            },
                            "configAlternates": {
                                "layout|flex": "number",
                                "iconAlign": "string",
                                "iconCls": "string",
                                "itemId": "string"
                            },
                            "name": "MyButton4",
                            "designerId": "468ca83c-e637-492c-b1e8-14717a790a86",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnGetERPDataRender",
                                        "implHandler": [
                                            "component.setTooltip(loc.menu.getERPData);"
                                        ],
                                        "name": "render",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnGetERPDataRender",
                                    "designerId": "81a12037-8c64-4060-a5f1-c70a2e86e1bc"
                                },
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnGetERPDataClick",
                                        "implHandler": [
                                            "var me = this, i;",
                                            "if(!this.checkSymbols()){",
                                            "    return;",
                                            "}",
                                            "var symbols = me.getView().down('#behalfCon').symbols;",
                                            "var sbStoData = [];",
                                            "var westSize = 417;",
                                            "",
                                            "var formRec = Ext.getCmp('color_window').down('#designForm').getRecord();",
                                            "var fStore = Ext.getStore('fStore_' + formRec.get('ca_id'));",
                                            "var dsnTypes = fStore.findRecord('cols_code', 'designType').get('cols_data');",
                                            "var findFrom =  '<div style=\"float:right;display:inline-block;width:220px\">';",
                                            "findFrom    +=  '\t\t<i class=\"fa fa-square\" aria-hidden=\"true\" style=\"color:limegreen\"></i>';",
                                            "findFrom    +=  '\t\t흡수칼라&nbsp;&nbsp;';",
                                            "findFrom    +=  '\t\t<i class=\"fa fa-square\" aria-hidden=\"true\" style=\"color:deepskyblue\"></i>';",
                                            "findFrom    +=  '\t\t대표칼라&nbsp;&nbsp;';",
                                            "findFrom    +=  '\t\t<i class=\"fa fa-square\" aria-hidden=\"true\" style=\"color:orangered\"></i>';",
                                            "findFrom    +=  '\t\t칼라없음';",
                                            "findFrom    +=  '</div>';",
                                            "",
                                            "if(dsnTypes.indexOf(loc.upload.select) == -1)dsnTypes.unshift(loc.upload.select);",
                                            "for(i=0; i<symbols.length; i++){",
                                            "    sbStoData[i] = {name:symbols[i]};",
                                            "}",
                                            "Ext.create('Ext.window.Window', {",
                                            "    width:1100,",
                                            "    maxWidth:windowMaxWidth,",
                                            "    alwaysOnTop:true,",
                                            "    ghost:false,",
                                            "    layout:{",
                                            "        type:'vbox',",
                                            "        align:'stretch'",
                                            "    },",
                                            "    padding:15,",
                                            "    height:800,",
                                            "    maxHeight:windowMaxHeight,",
                                            "    title:'추천 배색 검색',",
                                            "    tools:[",
                                            "        {",
                                            "            glyph:'xf066@FontAwesome',",
                                            "            callback:function(window, icon){",
                                            "                if(icon.getGlyph().glyphConfig == 'xf066@FontAwesome'){",
                                            "                    if(!Ext.getCmp('color_window').maximized)",
                                            "                        Ext.getCmp('color_window').setX((windowMaxWidth - 1457)/2);//두창을 나란히 중앙에 표시",
                                            "                    window.setWidth(705);",
                                            "                    window.setX(Ext.getCmp('color_window').getX() + 700);",
                                            "                    icon.setGlyph('xf065@FontAwesome');",
                                            "                }",
                                            "                else{",
                                            "                    window.setWidth(1100);",
                                            "                    window.center();",
                                            "                    icon.setGlyph('xf066@FontAwesome');",
                                            "                }",
                                            "            }",
                                            "        }",
                                            "    ],",
                                            "    items:[",
                                            "        {",
                                            "            xtype:'container',",
                                            "            layout:'hbox',",
                                            "            items:[",
                                            "                {",
                                            "                    xtype:'label',",
                                            "                    text:'검색 조건',",
                                            "                    cls:'form-title-label',",
                                            "                    width:westSize,",
                                            "                },",
                                            "                {",
                                            "                    xtype:'label',",
                                            "                    text:'디자인 기호',",
                                            "                    cls:'form-title-label'",
                                            "                }",
                                            "            ]",
                                            "        },",
                                            "        {",
                                            "            xtype:'container',",
                                            "            layout:'hbox',",
                                            "            height:140,",
                                            "            style:'border-bottom:1px solid #eeeeee',",
                                            "            items:[",
                                            "                {",
                                            "                    xtype:'container',",
                                            "                    layout:'vbox',",
                                            "                    width:westSize,",
                                            "                    padding:'15 0 15 0',",
                                            "                    items:[",
                                            "                        {",
                                            "                            xtype:'container',",
                                            "                            width:'100%',",
                                            "                            layout:'hbox',",
                                            "                            items:[",
                                            "                                {",
                                            "                                    xtype:'datefield',",
                                            "                                    width:180,",
                                            "                                    labelWidth:60,",
                                            "                                    format:'Y-m-d',",
                                            "                                    itemId:'startDate',",
                                            "                                    fieldLabel:'시작날짜',",
                                            "                                    submitFormat:'Y-m-d'",
                                            "                                },",
                                            "                                {",
                                            "                                    xtype:'tbspacer',",
                                            "                                    width:15",
                                            "                                },",
                                            "                                {",
                                            "                                    xtype:'datefield',",
                                            "                                    width:180,",
                                            "                                    format:'Y-m-d',",
                                            "                                    itemId:'endDate',",
                                            "                                    labelWidth:60,",
                                            "                                    fieldLabel:'끝 날짜',",
                                            "                                    submitFormat:'Y-m-d',",
                                            "                                    listeners:{",
                                            "                                        afterrender:function(field){",
                                            "                                            field.setValue(new Date());",
                                            "                                        }",
                                            "                                    }",
                                            "                                },",
                                            "                                {",
                                            "                                    xtype:'tbspacer',",
                                            "                                    width:15",
                                            "                                }",
                                            "                            ]",
                                            "                        },",
                                            "                        {",
                                            "                            xtype:'tbspacer',",
                                            "                            height:5",
                                            "                        },",
                                            "                        {",
                                            "                            xtype:'container',",
                                            "                            layout:'hbox',",
                                            "                            items:[",
                                            "                                {",
                                            "                                    xtype:'numberfield',",
                                            "                                    width:132,",
                                            "                                    fieldLabel:'도수',",
                                            "                                    labelWidth:60,",
                                            "                                    itemId:'fdDosu',",
                                            "                                    listeners:{",
                                            "                                        afterrender:function(field){",
                                            "                                            field.setValue(formRec.get('idnumberOfColors'));",
                                            "                                        }",
                                            "                                    }",
                                            "                                },",
                                            "                                {",
                                            "                                    xtype:'tbspacer',",
                                            "                                    width:15",
                                            "                                },",
                                            "                                {",
                                            "                                    xtype:'combo',",
                                            "                                    fieldLabel:'디자인종류',",
                                            "                                    labelWidth:80,",
                                            "                                    itemId:'fdDesignType',",
                                            "                                    store:dsnTypes,",
                                            "                                    listeners:{",
                                            "                                        afterrender:function(combo){",
                                            "                                            var dt = formRec.get('iddesignType');",
                                            "                                            if(dt === undefined || dt === '') dt = loc.upload.select;",
                                            "                                            combo.setValue(dt);",
                                            "                                        }",
                                            "                                    }",
                                            "                                }",
                                            "                            ]",
                                            "                        },",
                                            "                        {",
                                            "                            xtype:'tbspacer',",
                                            "                            height:5",
                                            "                        },",
                                            "                        {",
                                            "                            xtype:'container',",
                                            "                            layout:'hbox',",
                                            "                            items:[",
                                            "                              {",
                                            "                                    xtype:'textfield',",
                                            "                                    width:152,",
                                            "                                    fieldLabel:'거래처',",
                                            "                                    labelWidth:60,",
                                            "                                    itemId:'fdCustomer'",
                                            "                                },",
                                            "                                {",
                                            "                                    xtype:'tbspacer',",
                                            "                                    width:15",
                                            "                                },",
                                            "                                {",
                                            "                                    xtype:'textfield',",
                                            "                                    fieldLabel:'원단',",
                                            "                                    labelWidth:60,",
                                            "                                    itemId:'fdFabric'",
                                            "                                }",
                                            "                            ]",
                                            "                        }",
                                            "                    ]",
                                            "                },",
                                            "                {",
                                            "                    xtype:'container',",
                                            "                    layout:'column',",
                                            "                    padding:'20 0 0 0',",
                                            "                    scrollable:true,",
                                            "                    flex:1,",
                                            "                    items:[",
                                            "                        {",
                                            "                            //////////////",
                                            "                            // 디자인기호 //",
                                            "                            //////////////",
                                            "                            xtype:'dataview',",
                                            "                            layout:'column',",
                                            "                            width:'100%',",
                                            "                            height:139,",
                                            "                            itemId:'symbolCon',",
                                            "                            itemSelector:'.symbol_unit',",
                                            "                            store:Ext.create('Ext.data.Store', {",
                                            "                                fields:['name', 'check'],",
                                            "                                data:sbStoData",
                                            "                            }),",
                                            "                            listeners:{",
                                            "                                itemclick:function( dataview, record, item, index, e, eOpts){",
                                            "                                    if(e.target.localName == 'div'){",
                                            "                                        me.getColorSymbolList(record);",
                                            "                                    }",
                                            "                                    if(e.target.localName == 'input'){",
                                            "                                        record.set('check', true);",
                                            "                                    }",
                                            "                                }",
                                            "                            },",
                                            "                            tpl:new Ext.XTemplate(",
                                            "                                '<tpl for=\".\">',",
                                            "                                    '<div class=\"symbol_unit\" style=\"display:inline-block;width:40px;height:30px;border:1px solid #cecece;margin-right:3px;padding:3px;text-align:center;cursor:pointer;\">',",
                                            "                                        '<div style=\"margin-top:-22px;color:#678fcd\">{[xindex]}</div>',",
                                            "                                        '<div style=\"margin-top:8px\">{name}</div>',",
                                            "                                    '<input name=\"symbol\" type=\"radio\" style=\"margin-top:8px\">',",
                                            "                                    '</div>',",
                                            "                                '</tpl>'",
                                            "                            )",
                                            "                        }",
                                            "",
                                            "                    ]",
                                            "                },",
                                            "                {",
                                            "                    xtype:'container',",
                                            "                    layout:{",
                                            "                        type:'vbox',",
                                            "                        align:'right'",
                                            "                    },",
                                            "                    height:'100%',",
                                            "                    items:[",
                                            "                        {",
                                            "                            xtype:'tbspacer',",
                                            "                            flex:1",
                                            "                        },",
                                            "                        {",
                                            "                            xtype:'container',",
                                            "                            layout:'hbox',",
                                            "                            items:[",
                                            "                                ////////////////////////",
                                            "                                // 디자인 기호 추가 버튼 //",
                                            "                                ////////////////////////",
                                            "                                {",
                                            "                                    xtype:'button',",
                                            "                                    iconCls:'fa fa-plus',",
                                            "                                    width:30,",
                                            "                                    ui:'plain-toolbar-small',",
                                            "                                    height:30,",
                                            "                                    listeners:{",
                                            "                                        click:function(button){",
                                            "                                            me.getColorSymbolList(button.up('window').down('#symbolCon').getStore());",
                                            "                                        }",
                                            "                                    }",
                                            "                                },",
                                            "                                ////////////////////////",
                                            "                                // 디자인 기호 삭제 버튼 //",
                                            "                                ////////////////////////",
                                            "                                {",
                                            "                                    xtype:'tbspacer',",
                                            "                                    width:5",
                                            "                                },",
                                            "                                {",
                                            "                                    xtype:'button',",
                                            "                                    iconCls:'fa fa-minus',",
                                            "                                    width:30,",
                                            "                                    ui:'plain-toolbar-small',",
                                            "                                    height:30,",
                                            "                                    listeners:{",
                                            "                                        click:function(button){",
                                            "                                            var sto = button.up('winndow').down('#symbolCon').getStore();",
                                            "                                            var count = 0;",
                                            "                                            sto.each(function(record, index){",
                                            "                                                if(record.get('check')) {",
                                            "                                                    sto.remove(record);",
                                            "                                                    count ++;",
                                            "                                                }",
                                            "                                            });",
                                            "                                            if(count === 0) Ext.toast('선택된 디자인기호가 없는데요?');",
                                            "                                        }",
                                            "                                    }",
                                            "                                }",
                                            "                            ]",
                                            "                        },",
                                            "                        ////////////",
                                            "                        // 검색버튼 //",
                                            "                        ////////////",
                                            "                        {",
                                            "                            xtype:'button',",
                                            "                            text:loc.search.search,",
                                            "                            width:100,",
                                            "                            height:50,",
                                            "                            itemId:'btnSearch',",
                                            "                            listeners:{",
                                            "                                click:function(button){",
                                            "                                    var rWin = button.up('window');",
                                            "                                    var count = 0;",
                                            "                                    var dt = button.up('window').down('#fdDesignType').getValue();",
                                            "                                    if(dt == loc.upload.select) dt = '';",
                                            "                                    var params = {",
                                            "                                        //&site =",
                                            "                                        //&fabirc =",
                                            "                                        //&dkind =",
                                            "",
                                            "                                        sdate:button.up('window').down('#startDate').getSubmitValue() || '0000-00-00',",
                                            "                                        edate:button.up('window').down('#endDate').getSubmitValue(),",
                                            "                                        dosu:button.up('window').down('#fdDosu').getValue(),",
                                            "                                        fabric:button.up('window').down('#fdFabric').getValue(),",
                                            "                                        dkind:dt,",
                                            "                                        site:button.up('window').down('#fdCustomer').getValue()",
                                            "                                    };",
                                            "                                    var sto = button.up('window').down('#symbolCon').getStore();",
                                            "                                    sto.each(function(rec){",
                                            "                                        count ++;",
                                            "                                        params['nm'+count] = rec.get('name');",
                                            "                                    });",
                                            "                                    //현재 윈도우에 추천 목록 추가",
                                            "                                    me.getRecommended(params, button.up('window').down('#recomGroupCon'));",
                                            "                                }",
                                            "                            }",
                                            "                        },",
                                            "                        {",
                                            "                            xtype:'tbspacer',",
                                            "                            height:10",
                                            "                        },",
                                            "                        //////////////",
                                            "                        // 전체색표시 //",
                                            "                        //////////////",
                                            "                        {",
                                            "                            xtype:'button',",
                                            "                            icon:'resources/images/ico_colorwheel.png',",
                                            "                            ui:'plain-toolbar-small',",
                                            "                            toolTip:'전체 색 표시',",
                                            "                            handler:function(button){",
                                            "                                var recommGrid = button.up('window').down('#recommColorGrid');",
                                            "                                if(recommGrid){",
                                            "                                    /////////////////////////////////////////////////////////",
                                            "                                    // Automatically fill color by hex to colorways in ERP //",
                                            "                                    /////////////////////////////////////////////////////////",
                                            "                                    var count = 0;",
                                            "                                    var store = recommGrid.getStore(); //store for colorways in ERP",
                                            "                                    var getColorways = function(rec, colors){",
                                            "                                        recommGrid.up('window').mask('추천배색을 불러오고 있는 중입니다.');",
                                            "                                        Ext.getCmp('color_window').getController().getHexByCode(rec, colors, recommGrid);",
                                            "                                    };",
                                            "                                    Ext.getCmp('color_window').on('colorwayloadcomplete', function (win){",
                                            "                                        if(count < store.getCount() ){",
                                            "                                            getColorways(store.getAt(count), store.getAt(count).get('color'));",
                                            "                                            count ++;",
                                            "                                        }",
                                            "                                        else{",
                                            "                                            if(recommGrid.up('window')) recommGrid.up('window').unmask();",
                                            "                                        }",
                                            "                                    });",
                                            "                                    getColorways(store.getAt(count), store.getAt(count).get('color'));",
                                            "                                }",
                                            "                            }",
                                            "                        }",
                                            "                    ]",
                                            "                }",
                                            "            ]",
                                            "        },",
                                            "        /////////////////////////////",
                                            "        // 추천 칼라웨이 그룹 컨테이너 //",
                                            "        /////////////////////////////",
                                            "        {",
                                            "            xtype:'panel',",
                                            "            flex:1,",
                                            "            layout:{",
                                            "                type:'hbox',",
                                            "                align:'stretch'",
                                            "            },",
                                            "            style:'border:1px solid #cecece',",
                                            "            bodyStyle:'background-color:white;',",
                                            "            items:[",
                                            "                {",
                                            "                    xtype:'container',",
                                            "                    itemId:'recomGroupCon',",
                                            "                    layout:{",
                                            "                        type:'hbox',",
                                            "                        align:'stretch'",
                                            "                    },",
                                            "                    style:'border-right:1px solid #cecece',",
                                            "                    width:westSize,",
                                            "                    listeners:{",
                                            "                        afterrender:function(container){",
                                            "                            container.up('window').down('#btnSearch').fireEvent('click', container.up('window').down('#btnSearch'));",
                                            "",
                                            "                        }",
                                            "                    }",
                                            "                },",
                                            "                {",
                                            "                    xtype:'container',",
                                            "                    itemId:'recomColorwayCon',",
                                            "                    layout:{",
                                            "                        type:'hbox',",
                                            "                    },",
                                            "                    scrollable:true,",
                                            "                    flex:1",
                                            "                }",
                                            "            ]",
                                            "        },",
                                            "        {",
                                            "            xtype:'tbspacer',",
                                            "            height:5",
                                            "        },",
                                            "        {",
                                            "            xtype:'component',",
                                            "            width:'100%',",
                                            "            html:findFrom",
                                            "",
                                            "        }",
                                            "    ]",
                                            "}).show();"
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnGetERPDataClick",
                                    "designerId": "684c5c94-7525-4fc9-be60-e4fb34dbec0f"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "iconCls": "fa fa-trash-o",
                                "itemId": "btnRemove",
                                "layout|flex": null
                            },
                            "configAlternates": {
                                "itemId": "string",
                                "layout|flex": "number",
                                "text": "string",
                                "iconCls": "string"
                            },
                            "name": "MyButton24",
                            "designerId": "d2649b89-69cd-4544-aeeb-db0293342e3a",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnRemoveRender",
                                        "implHandler": [
                                            "component.setTooltip('마지막차 배색 모두 제거');"
                                        ],
                                        "name": "render",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnRemoveRender",
                                    "designerId": "9aa3d559-7a50-46f1-9249-386b97bcca38"
                                },
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnRemoveClick",
                                        "implHandler": [
                                            "",
                                            "var store = button.up('window').down('#colorGrid').getStore();",
                                            "var cSto = button.up('#eastCon').down('#cbChasu').getStore();",
                                            "var chasu = button.up('#eastCon').down('#cbChasu').getValue();",
                                            "if(chasu != cSto.getCount()) {",
                                            "    Ext.toast(chasu + '차 배색입니다. 마지막 차수 외에는 삭제할 수 없습니다.');",
                                            "    return;",
                                            "}",
                                            "if(chasu == 1){",
                                            "    Ext.toast('첫번째차 배색은 삭제 할 수 없습니다.');",
                                            "    return;",
                                            "}",
                                            "store.each(function(record){",
                                            "    if(record.get('chasu') == chasu){",
                                            "        store.remove(record);",
                                            "    }",
                                            "});",
                                            "cSto.each(function(record){",
                                            "    if(record.get('chasu') == chasu){",
                                            "        cSto.remove(record);",
                                            "        button.up('#eastCon').down('#cbChasu').setValue(chasu - 1);",
                                            "        button.up('#eastCon').down('#cbChasu').fireEvent('select', button.up('#eastCon').down('#cbChasu'), cSto.getAt(chasu-1));",
                                            "    }",
                                            "});",
                                            "",
                                            "// var desWin = Ext.create('Ext.window.Window', {",
                                            "//     width:700,",
                                            "//     height:700,",
                                            "//     items:[",
                                            "//         {",
                                            "//             xtype:'draw',",
                                            "//             sprites: [",
                                            "//                 {",
                                            "//                     type:'image',",
                                            "//                     src:'http://hanyoung.dipol.co.kr:8080/thumb/28105/0',",
                                            "//                     id:'canvasda'",
                                            "//                 },",
                                            "//                 {",
                                            "//                     type:'image',",
                                            "//                     src:'http://hanyoung.dipol.co.kr:8080/thumb/28105/0',",
                                            "//                     x:200",
                                            "//                 }",
                                            "//             ],",
                                            "//             height:700,",
                                            "//             width:700",
                                            "//         }",
                                            "//     ]",
                                            "// }).show();"
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnRemoveClick",
                                    "designerId": "8dce09bd-6c3f-4973-8139-18b4ed3775f2"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|uiInterfaceName": "plain-toolbar-small",
                                "disabled": true,
                                "hidden": true,
                                "iconAlign": "top",
                                "iconCls": "fa fa-refresh",
                                "itemId": "btnRestore",
                                "layout|flex": null,
                                "ui": "plain-toolbar-small"
                            },
                            "configAlternates": {
                                "layout|flex": "number",
                                "text": "string",
                                "disabled": "boolean",
                                "id": "string",
                                "designer|uiInterfaceName": "string",
                                "iconAlign": "string",
                                "iconCls": "string",
                                "ui": "string",
                                "itemId": "string",
                                "hidden": "boolean"
                            },
                            "name": "MyButton",
                            "designerId": "d998d0f9-2743-425d-befc-c830e3456490",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnRestore",
                                        "implHandler": [
                                            "var form=button.up('window').down('form');",
                                            "var dataview=button.up('window').down('dataview');",
                                            "var orignal_source=form.originalCanvas;",
                                            "var canvas=form.canvas;",
                                            "var ctx = canvas.getContext('2d');",
                                            "ctx.drawImage(orignal_source, 0, 0);",
                                            "",
                                            "",
                                            "var cStore = button.up('#eastCon').down('#colorGrid').getStore();",
                                            "var firstRecord=cStore.getAt(0);",
                                            "cStore.each(function(rec) {",
                                            "    if(rec.get(\"check\")===true) rec.set(\"check\",false);",
                                            "});",
                                            "Ext.apply(firstRecord.data, form.originalColor);",
                                            "dataview.refresh();",
                                            "",
                                            "button.setDisabled(true);",
                                            ""
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnRestore",
                                    "designerId": "1d1d272b-dd61-4285-94c5-7b68b919f5de"
                                },
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onRecoverybtnRender",
                                        "implHandler": [
                                            "component.setTooltip(loc.menu.restore);"
                                        ],
                                        "name": "render",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onRecoverybtnRender",
                                    "designerId": "b099c573-39b4-4bf0-91db-f57b6139e492"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|uiInterfaceName": "custom",
                                "iconCls": "fa fa-floppy-o",
                                "itemId": "btnSave",
                                "layout|flex": null,
                                "style": "font-size:18px"
                            },
                            "configAlternates": {
                                "itemId": "string",
                                "layout|flex": "number",
                                "text": "string",
                                "iconCls": "string",
                                "style": "string",
                                "designer|uiInterfaceName": "string"
                            },
                            "name": "MyButton3",
                            "designerId": "37c72004-2fae-4ea3-955e-56f776e9b2b2",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnSaveClick",
                                        "implHandler": [
                                            "var me = this;",
                                            "var saveWin = Ext.create('Ext.window.Window', {",
                                            "    padding:15,",
                                            "    layout:'hbox',",
                                            "    title:loc.main.saveDesign,",
                                            "    x:e.pageX-168,",
                                            "    y:e.pageY,",
                                            "    items:[",
                                            "        {//update colors",
                                            "            xtype:'button',",
                                            "            text:loc.config.save,",
                                            "            handler:function(button){",
                                            "                var cWin = Ext.getCmp('color_window');",
                                            "                var canvas = cWin.down('form').canvas;",
                                            "                cWin.mask(loc.main.saving);",
                                            "                var store = cWin.down('#colorGrid').getStore();",
                                            "                var recCount = 0;",
                                            "                var currentRecord = getController('Main').getMainView().getViewModel().get('currentRecord');",
                                            "                var allRecords = me.getAllRecords();",
                                            "                var removeList = [];",
                                            "                var saveColorway = function(record){",
                                            "                    var cfgStore = Ext.getStore('ConfigStore');",
                                            "                    var fd = new FormData();",
                                            "//                     if(record.data.bd_idx !== 0 && record.data.bd_idx !== undefined && record.data.bd_idx !== '' ){ // 같은 디자인을 저장할 경우",
                                            "//                         fd.append('bd_idx', record.data.bd_idx);",
                                            "//                     }",
                                            "                    fd.append('id', record.data.id);",
                                            "                    fd.append('ca_id', cfgStore.getAt(0).get('colorwayCategory'));",
                                            "                    fd.append('uploadType', 'form');",
                                            "                    fd.append('bd_group', 1);",
                                            "                    fd.append('bd_subject', me.getView().currentDesign);",
                                            "                    fd.append('bd_refer', currentRecord.get('bd_idx'));//현재 작업중인 디자인의 refer에 bd_idx 기록하여 검색에 활용",
                                            "",
                                            "                    var colors = JSON.stringify(record.data.color);",
                                            "                    var symbols = JSON.stringify(record.data.behalf);",
                                            "                    fd.append('selectedcheck', record.data.check);",
                                            "                    fd.append('colorway', colors); //color",
                                            "                    fd.append('colorwaytitle', record.data.color_name); //color_name",
                                            "                    fd.append('chasu', record.data.chasu);",
                                            "                    if(record.data.group === 0){//디폴트 디자인만 디자인기호저장, behalf",
                                            "                        fd.append('symbols', symbols);",
                                            "                    }",
                                            "                    fd.append('colorgroup', record.data.group); //ggrup",
                                            "",
                                            "                    var url = domain + '/binder/addUpdate2';",
                                            "                    var request = new XMLHttpRequest();",
                                            "                    request.open('POST', url);",
                                            "                    request.onload = function(a){",
                                            "                        if(request.status == 200){",
                                            "                            recCount ++;",
                                            "                            if(recCount < store.data.autoSource.length){//뺑뺑이",
                                            "                                saveColorway(store.data.autoSource.getAt(recCount));",
                                            "                            }",
                                            "                            else{",
                                            "                                //Store에서 삭제된것과 업데이트되어서 지워야하는 칼라웨이 삭제",
                                            "//                                 var removeList = (cWin.updated)? cWin.firstIdxs : cWin.removedRecord;",
                                            "                                var query = '?';",
                                            "                                var delFd = new FormData();",
                                            "                                if(cWin.firstIdxs.length > 0){",
                                            "                                    for(var i=0; i<cWin.firstIdxs.length; i++){",
                                            "                                        delFd.append('bd_idx', cWin.firstIdxs[i]);",
                                            "                                        if(i===0){",
                                            "                                            query += 'bd_idx=' + cWin.firstIdxs[i];",
                                            "                                        }",
                                            "                                        else{",
                                            "                                            query += '&bd_idx=' + cWin.firstIdxs[i];",
                                            "                                        }",
                                            "                                    }",
                                            "                                }",
                                            "                                Ext.data.JsonP.request({",
                                            "                                    url:getDeleteDataApi() + query,",
                                            "                                    success:function(response){",
                                            "//                                         if(count == cWin.firstIdxs.length -1){",
                                            "                                            Ext.toast(loc.upload.saved);",
                                            "                                            cWin.unmask();",
                                            "                                            store = null;",
                                            "                                            saveWin.close();",
                                            "                                            cWin.close();",
                                            "//                                             setTimeout(Ext.getCmp('btnColorway').fireEvent, 500, 'click');",
                                            "//                                         }",
                                            "//                                         count += 1;",
                                            "                                    }",
                                            "                                });",
                                            "",
                                            "                                //                                 var delReq = new XMLHttpRequest();",
                                            "//                                 delReq.open('POST', getDeleteDataApi());",
                                            "//                                 delReq.send(delFd);",
                                            "",
                                            "                            }",
                                            "                        }",
                                            "                        else{",
                                            "                            alert('Error \" + oReq.status + \" occurred when trying to upload your file.<br \\/>');",
                                            "                        }",
                                            "                    };",
                                            "                    request.send(fd);",
                                            "                };",
                                            "                saveColorway(allRecords[recCount]);",
                                            "            },",
                                            "        },",
                                            "        {//save as new design",
                                            "            xtype:'button',",
                                            "            margin:'0 0 0 10',",
                                            "            text:loc.menu.saveAsNew,",
                                            "            handler:function(btnSaveAs){",
                                            "                Ext.Msg.confirm('', loc.main.saveByNewDesign, function(re){",
                                            "                    if(re == 'yes'){//when click save",
                                            "                        var form=button.up('window').down('form');",
                                            "                        var canvas=form.canvas;",
                                            "                        button.up('window').mask(loc.main.saving);",
                                            "                        if (canvas.toBlob) {",
                                            "                            canvas.toBlob(",
                                            "                                function (blob) {",
                                            "                                    var store = button.up('window').down('dataview').getStore();",
                                            "                                    var sd = [];",
                                            "                                    //get colorways except checked that is used to main colors",
                                            "                                    store.each(function(record, index){",
                                            "                                        var obj = {};",
                                            "                                        obj.color = record.data.color;",
                                            "                                        obj.color_name = record.data.color_name;",
                                            "                                        if(!record.data.check){",
                                            "                                            sd.push(obj);",
                                            "                                        }",
                                            "                                        else{//add selected color to the first at array",
                                            "                                            sd.unshift(obj);",
                                            "                                        }",
                                            "                                    });",
                                            "                                    //convert to string to save into server",
                                            "                                    var colorwayData = JSON.stringify(sd);",
                                            "                                    var record=form.getRecord();",
                                            "                                    var url=domain+\"/json/addUpdate\";",
                                            "                                    var ca_id=record.get(\"ca_id\");",
                                            "                                    //새 파일명",
                                            "                                    var newName = record.get('bd_file')[0].file_name.split('.')[0] + '_1.png';",
                                            "",
                                            "                                    var formData = new FormData();",
                                            "                                    formData.append('data_3131', colorwayData);",
                                            "                                    formData.append('ca_id', ca_id);",
                                            "                                    formData.append('file_0', blob, newName);",
                                            "                                    formData.append('uploadType', \"form\");",
                                            "",
                                            "                                    xhr = new XMLHttpRequest();",
                                            "                                    xhr.open('POST', url, true);",
                                            "                                    xhr.onload = function() {",
                                            "                                        if (xhr.status === 200) {",
                                            "                                            Ext.toast(loc.upload.saved);",
                                            "                                            button.up('window').unmask();",
                                            "                                            button.up('window').close();",
                                            "                                            getController('Main').getListTab().getActiveTab().getGrid().getStore().load();",
                                            "",
                                            "                                        } else {",
                                            "                                            alert('An error occurred!');",
                                            "                                        }",
                                            "                                    };",
                                            "                                    xhr.send(formData);",
                                            "",
                                            "                                },",
                                            "                                'image/png'",
                                            "                            );",
                                            "                             btnSaveAs.up('window').close();",
                                            "                        }",
                                            "                    }",
                                            "                    else{",
                                            "                        btnSaveAs.up('window').close();",
                                            "                    }",
                                            "                });",
                                            "            },",
                                            "        }",
                                            "    ]",
                                            "}).show();",
                                            "",
                                            ""
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnSaveClick",
                                    "designerId": "9a474071-f716-4e39-88e0-2ed26cf411d0"
                                },
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnSaveAsRender",
                                        "implHandler": [
                                            "component.setTooltip(loc.config.save);"
                                        ],
                                        "name": "render",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onBtnSaveAsRender",
                                    "designerId": "587b20d8-dff5-4c65-8c63-31997e4f1b4d"
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "Ext.form.FieldSet",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "itemId": "behalfCon",
                        "layout": "column",
                        "margin": "7 0 0 0",
                        "style": "background-color:white !important;border: 1px solid #cecece;",
                        "symbols": [
                            "[]"
                        ],
                        "title": "디자인기호",
                        "width": 288
                    },
                    "configAlternates": {
                        "behalfs": "object",
                        "itemId": "string",
                        "layout": "string",
                        "margin": "auto",
                        "width": "auto",
                        "style": "string",
                        "title": "string",
                        "symbols": "array"
                    },
                    "name": "MyFieldSet1",
                    "designerId": "43e4c54f-9ffe-4bbe-b4ae-a2dfb31d2c69",
                    "customConfigs": [
                        {
                            "group": "(Custom Properties)",
                            "name": "symbols",
                            "type": "string"
                        }
                    ],
                    "cn": [
                        {
                            "type": "basicfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "record",
                                    "store"
                                ],
                                "fn": "setBehalfs",
                                "implHandler": [
                                    "var i;",
                                    "var me = this;",
                                    "var bhf = [];",
                                    "var chasu = record.get('chasu');",
                                    "var designNo = this.up('window').down('form').getRecord().get('bd_subject');",
                                    "var bhStore;",
                                    "me.symbols = [];",
                                    "// if(Ext.getStore('behalf_' + designNo + '_' + chasu)){",
                                    "//     bhStore = Ext.getStore('behalf_' + designNo + '_' + chasu);",
                                    "//     bhStore = null;",
                                    "// }",
                                    "//ERP 서버에서 차수에 맞는 디자인 기호 불러오기",
                                    "bhStore = this.up('window').getController().getColorSymbol(designNo, chasu);",
                                    "//ERP에서 디자인 기호를 불러온 store가 load되면",
                                    "bhStore.on('load', function onSymbolsLoad(st){",
                                    "    bhStore.un('load', onSymbolsLoad);",
                                    "    me.symbols = [];",
                                    "    for(i=0; i<st.getCount(); i++){",
                                    "        if(me.items){",
                                    "            me.items.items[i].setText(st.getAt(i).get('color'));",
                                    "            me.symbols.push(st.getAt(i).get('color'));",
                                    "        }",
                                    "    }",
                                    "    if(st.getCount() === 0){//서버에 없으며 1차 복사해서 사용(일단 1차는 무조건 있다고 가정)",
                                    "        var fstChaSto = Ext.getStore('behalf_' + designNo + '_1');",
                                    "        fstChaSto.each(function(rec){",
                                    "            me.symbols.push(rec.get('color'));",
                                    "        });",
                                    "    }",
                                    "    me.fireEvent('defaultsymbolscomplete', me);",
                                    "",
                                    "});",
                                    "",
                                    "me.up('window').down('#colorGrid').setHidden(false);",
                                    ""
                                ]
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code"
                            },
                            "name": "setBehalfs",
                            "designerId": "325b6217-73f4-4c83-8f7f-16ee30901a7a"
                        }
                    ]
                },
                {
                    "type": "Ext.container.Container",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "container|align": "stretch",
                        "layout": "hbox"
                    },
                    "configAlternates": {
                        "container|align": "string",
                        "layout": "string"
                    },
                    "name": "MyContainer29",
                    "designerId": "5c2caeaa-2498-4b07-b375-6884616ce637",
                    "cn": [
                        {
                            "type": "Ext.Component",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "height": 22,
                                "style": "cursur:pointer",
                                "width": 22
                            },
                            "configAlternates": {
                                "height": "auto",
                                "style": "string",
                                "width": "auto"
                            },
                            "name": "MyComponent3",
                            "designerId": "6d38ae32-a28c-44c5-8c97-93ae367175d5",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onComponentRender",
                                        "implHandler": [
                                            "component.setHtml('<strong><span style=\"cursor:pointer;line-height:18px;title:기본 디자인기호 적용\">가</span></strong>');",
                                            "component.el.on('click', function(e){",
                                            "    var store = component.up('#eastCon').down('#colorGrid').getStore();",
                                            "    if(store.getCount() > 1){",
                                            "        Ext.toast('이미 디자인기호가 설정되어 있어서 자동 설정 할 수 없습니다.');",
                                            "        return;",
                                            "    }",
                                            "    Ext.Msg.confirm('자동 디자인기호 적용', '디자인 기호의 순서를 기본순서로 업데이트 합니다, 저장하면 이전 설정이 변경됩니다.', function(button){",
                                            "        if(button == 'yes'){    ",
                                            "            var defaultSymbols = component.up('#eastCon').down('#behalfCon').symbols;",
                                            "            if(defaultSymbols.length === 0){",
                                            "                Ext.toast('기본 디자인기호가 설정되어 있지 않습니다.');                ",
                                            "            }",
                                            "            else{",
                                            "                store.getAt(0).set('behalf', defaultSymbols);",
                                            "                component.up('#eastCon').down('#colorGrid').refresh();",
                                            "            }",
                                            "            ",
                                            "        }",
                                            "    });",
                                            "});"
                                        ],
                                        "name": "render",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onComponentRender",
                                    "designerId": "00d12ebf-9c25-4874-a1b6-cb13c1981d6c"
                                }
                            ]
                        },
                        {
                            "type": "Ext.Component",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "height": 22,
                                "itemId": "fillAllColor",
                                "style": [
                                    "{",
                                    "    'background-image':'url(resources/images/ico_colorwheel.png)',",
                                    "    'background-repeat':'no-repeat',",
                                    "    'background-position':'center',",
                                    "    'cursor':'pointer'",
                                    "}"
                                ],
                                "width": 22
                            },
                            "configAlternates": {
                                "style": "object",
                                "height": "auto",
                                "itemId": "string",
                                "width": "auto"
                            },
                            "name": "MyComponent2",
                            "designerId": "dc330636-ace8-4563-913d-6618469b6e51",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onFillAllColorRender",
                                        "implHandler": [
                                            "var me = this;",
                                            "component.el.on('click', function(e){",
                                            "    var sto = component.up('window').down('#colorGrid').getStore();",
                                            "    sto.each(function(records){",
                                            "        if(records.data.group !== 0){",
                                            "            me.getHexByCode(records, records.get('color'), component.up('window').down('#colorGrid'));",
                                            "        }",
                                            "    });",
                                            "});"
                                        ],
                                        "name": "render",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onFillAllColorRender",
                                    "designerId": "6decc1d7-d315-41c5-8d88-84538f1a20c7"
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "Ext.view.View",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "cls": [
                            "tpl-6gnpxlbi"
                        ],
                        "flex": 1,
                        "hidden": true,
                        "itemCls": "color-list-item",
                        "itemId": "colorGrid",
                        "itemSelector": ".colorways-unit",
                        "margin": "15 0 0 0",
                        "scrollable": true,
                        "width": "100%"
                    },
                    "configAlternates": {
                        "itemCls": "string",
                        "itemSelector": "string",
                        "layout|flex": "number",
                        "store": "store",
                        "flex": "number",
                        "scrollable": "auto",
                        "itemId": "string",
                        "margin": "auto",
                        "width": "auto",
                        "cls": "typedarray",
                        "hidden": "boolean"
                    },
                    "name": "MyView",
                    "designerId": "8577b172-890e-4429-bec2-90bc10f7bbd5",
                    "cn": [
                        {
                            "type": "viewcontrollereventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onDataviewItemClick",
                                "implHandler": [
                                    "var me = this;",
                                    "var form=dataview.up('window').down('#designForm');",
                                    "var idx = parseInt(Ext.get(e.target).getAttribute(\"idx\")) - 1;",
                                    "var selectGroup = function(){",
                                    "    if(!me.checkSymbols()) return;",
                                    "    if(record.get('check')) return;",
                                    "    var store=dataview.getStore();",
                                    "    store.each(function(rec) {",
                                    "        if(rec.get(\"check\")===true) rec.set(\"check\",false);",
                                    "    });",
                                    "    record.set(\"check\",true);",
                                    "    var chasu = Ext.getCmp('color_window').down('#cbChasu').getValue();",
                                    "    var symbolOrder = Ext.getCmp('color_window').symbolOrder[chasu]; //checkSymbols()에서 저장한것",
                                    "    var newColors = [];",
                                    "    for(var i=0; i<record.get('color').length; i++){",
                                    "        newColors[i] = record.get('color')[symbolOrder[i]];",
                                    "    }",
                                    "    var sourceColor = (record.get('group') === 0)? record.get('color') : newColors;",
                                    "    Ext.getCmp('color_window').mask('칼라웨이를 적용하고 있습니다.');",
                                    "    setTimeout(form.setAllChangeColor, 500, form.originalColor.color, sourceColor);",
                                    "    form.selectedColorRecord = record;",
                                    "};",
                                    "//icon for changing color by color picker",
                                    "if(Ext.get(e.target).dom.className===\"color-button\") {",
                                    "    var pickerWin=Ext.getCmp(\"color_picker\");",
                                    "    if(pickerWin === undefined) {",
                                    "       pickerWin=Ext.create(appName + \".view.ColorPickerWindow\",{",
                                    "            width:600,",
                                    "            height:428,",
                                    "            alwaysOnTop:true,",
                                    "            title:'Change Color'",
                                    "        });",
                                    "    }",
                                    "    var oriColors = [];",
                                    "    for(var i=0; i<record.get('color').length; i++){",
                                    "        var obj = {};",
                                    "        obj.color = record.get('color')[i].color;",
                                    "        obj.name = record.get('color')[i].name;",
                                    "        oriColors.push(obj);",
                                    "    }",
                                    "    pickerWin.setRecord(record);",
                                    "    //save origincal colors for restoring",
                                    "    pickerWin.originalColors = oriColors;",
                                    "    pickerWin.setIdx(idx);",
                                    "    pickerWin.show();",
                                    "    var colorSelector = pickerWin.down('colorselector');",
                                    "    colorSelector.on('change', function(picker, newColor, previousColor, eOpts){",
                                    "        var form=Ext.getCmp(\"color_window\").down(\"form\");",
                                    "        var canvas=form.canvas;",
                                    "",
                                    "        var window=picker.up('window');",
                                    "        var idx=window.getIdx();",
                                    "        var record=window.getRecord();",
                                    "        var colors=record.get(\"color\");",
                                    "        var colorpickerwindow=window.down('colorpickerwindow');",
                                    "        var ori_color=colors[idx].color;",
                                    "        newColor = \"#\" + newColor;",
                                    "        colors[idx].color=newColor;",
                                    "        record.set('color', colors);",
                                    "        var dataview=Ext.getCmp(\"color_window\").down(\"dataview\");",
                                    "        if(record.get('check')===true) form.setChangeColor(ori_color, newColor, form.baseCanvas, canvas);",
                                    "        dataview.refresh();",
                                    "",
                                    "    });",
                                    "    selectGroup();",
                                    "",
                                    "",
                                    "} else if(Ext.get(e.target).dom.className===\"color-chk\" ||Ext.get(e.target).dom.className===\"colorway-name\") {",
                                    "    selectGroup();",
                                    "//icon for move up",
                                    "} else if(Ext.get(e.target).dom.className===\"fa fa-chevron-up color-button-up\") {",
                                    "    var color=record.get(\"color\");",
                                    "    var tempColor=color[idx];",
                                    "    if(idx>0) {",
                                    "        color[idx]=color[idx-1];",
                                    "        color[idx-1]=tempColor;",
                                    "    }",
                                    "    record.set(\"color\",color);",
                                    "    dataview.refresh();",
                                    "//icon for move down",
                                    "} else if(Ext.get(e.target).dom.className===\"fa fa-chevron-down color-button-down\") {",
                                    "    var color=record.get(\"color\");",
                                    "    var tempColor=color[idx];",
                                    "    if(color.length-1>=idx) {",
                                    "        color[idx]=color[idx+1];",
                                    "        color[idx+1]=tempColor;",
                                    "    }",
                                    "    record.set(\"color\",color);",
                                    "    dataview.refresh();",
                                    "//icon for load colorchip category",
                                    "}else if(Ext.get(e.target).dom.className===\"fa fa-th colorchip\") {",
                                    "    if(Ext.getCmp('colorChipWin') !== undefined) {Ext.getCmp('colorChipWin').close();}",
                                    "    var form=dataview.up(\"window\").down(\"form\");",
                                    "    var canvas=form.canvas;",
                                    "    var cWin = Ext.create(appName + '.view.ActorWindow',{",
                                    "        id:'colorChipWin',",
                                    "        height:windowMaxHeight,",
                                    "        record:record,",
                                    "        alwaysOnTop:true,",
                                    "        modal:false,",
                                    "        width:600,",
                                    "        idx:idx,",
                                    "        x:Ext.getBody().getViewSize().width-385-550,",
                                    "        listeners:{",
                                    "            render:function(win){",
                                    "                win.disableEvent();",
                                    "                win.down('#tree').setHidden(true);",
                                    "                var colors = win.record.get('color');",
                                    "                setTimeout(me.findSimilarColor, 1000, win.categoryId, colors[win.idx].color);",
                                    "            },",
                                    "            pagingtoolbarcomplete:function(toolbar, win){",
                                    "                var rangeFinder = {",
                                    "                    xtype: 'button',",
                                    "                    height:35,",
                                    "                    width:23,",
                                    "                    itemId:'btnFindByColorRange',",
                                    "                    glyph: 'xf00e@FontAwesome',",
                                    "",
                                    "                    listeners:{",
                                    "                        render:function(button){",
                                    "                            button.el.select('.x-btn-icon-el').elements[0].style.color = '#FFC017';",
                                    "                            button.setTooltip(loc.search.findSimilar);",
                                    "                        }",
                                    "                    },",
                                    "                    handler:function(button){",
                                    "                        var colors = win.record.get('color');",
                                    "                        me.findSimilarColor(win.categoryId, colors[win.idx].color);",
                                    "                    }",
                                    "                };",
                                    "                toolbar.insert(toolbar.items.items.length - 2, rangeFinder);",
                                    "            },",
                                    "            close:function(){",
                                    "                if(Ext.getCmp('colorFinder')){",
                                    "                    Ext.getCmp('colorFinder').close();",
                                    "                }",
                                    "            }",
                                    "        }",
                                    "    }).show();",
                                    "    cWin.setColorChipGrid();",
                                    "    var tree = cWin.down('#tree');",
                                    "    tree.on('itemclick', function(cateTree, rec){",
                                    "        if(rec && rec.data){",
                                    "            var opt = getOption(rec.data.data.ca_option);",
                                    "            if(opt.colorChip){",
                                    "                cWin.getGrid().categoryId = rec.get(\"id\");",
                                    "                cWin.getGrid().numOfItem = 100;",
                                    "                getController('Main').getServerData(rec.get(\"id\"), 'ca_id=' + rec.get(\"id\"), cWin.down('#list'));",
                                    "                cWin.down('#list').on('listcomplete', function(cId, grid){",
                                    "                    var cSto = cWin.down('#list').down('#galleryView').getStore();",
                                    "                    cSto.setPageSize(100);",
                                    "                    cSto.load();",
                                    "                });",
                                    "            }",
                                    "            else{",
                                    "                Ext.toast(loc.error.noColorchipCategory);",
                                    "            }",
                                    "        }",
                                    "    });",
                                    "    var treeStore = tree.getStore();",
                                    "    treeStore.on('load', function(tStore){",
                                    "        var ccCate = 91;",
                                    "        cWin.categoryId = ccCate;",
                                    "        var node = treeStore.getNodeById(ccCate);",
                                    "        tree.getSelectionModel().select(node);",
                                    "        //show category that configured at actor.json at the first time",
                                    "        tree.fireEvent('itemclick', tree, node, tree.el, '', event);",
                                    "    });",
                                    "    //when click one of color code list",
                                    "    cWin.getGrid().on('itemclick', function(inDataview, inRecord){",
                                    "        var record = cWin.record;",
                                    "        var id = cWin.idx;",
                                    "        var colors = record.get('color');",
                                    "        var ori_color = colors[idx].color;",
                                    "        var newColor = inRecord.get('idcolorHex');",
                                    "        if(newColor.indexOf('#') == -1) newColor = '#'+ newColor;",
                                    "        colors[idx].color = newColor;",
                                    "        record.set('color', colors);",
                                    "        if(record.get('check')===true) form.setChangeColor(ori_color, newColor, form.baseCanvas, canvas);",
                                    "        dataview.refresh();",
                                    "    });",
                                    "",
                                    "//icon for changing name of the colorway",
                                    "}else if(Ext.get(e.target).dom.className == 'fa fa-pencil edit-title'){    var titleWin = Ext.create('Ext.window.Window', {",
                                    "        layout:'hbox',",
                                    "        padding:15,",
                                    "        alwaysOnTop:true,",
                                    "        items:[",
                                    "            {",
                                    "                xtype:'textfield',",
                                    "                fieldLabel:loc.main.name,",
                                    "                labelWidth:60,",
                                    "                listeners:{",
                                    "                    render:function(field){",
                                    "                        field.el.on('keyup', function(e, field){",
                                    "                            if(e.keyCode == 13){",
                                    "                                titleWin.down('button').fireEvent('click');",
                                    "                            }",
                                    "                        });",
                                    "                    }",
                                    "                },",
                                    "                value:Ext.get(e.target).dom.getAttribute('oldname')",
                                    "            },",
                                    "            {",
                                    "                xtype:'button',",
                                    "                text:loc.menu.edit,",
                                    "                listeners:{",
                                    "                    click:function(button){",
                                    "                        //change title of colorway",
                                    "                        record.set('color_name', titleWin.down('textfield').getValue());",
                                    "                        titleWin.close();",
                                    "                    }",
                                    "                }",
                                    "            }",
                                    "        ]",
                                    "    }).show();",
                                    "//icon for removing colorway",
                                    "}else if(Ext.get(e.target).dom.className == 'fa fa-trash remove-record'){",
                                    "    if(dataview.getStore().getAt(index).get('bd_idx') !== 0){//서버에 저장된(bd_idx값이 있는) 자료에 대해",
                                    "        me.getView().removedRecord.push(dataview.getStore().getAt(index).get('bd_idx')); // save removed colorway",
                                    "    }",
                                    "    dataview.getStore().removeAt(index);",
                                    "    dataview.refresh();",
                                    "//icon for when click outside of textfield",
                                    "}else if(Ext.get(e.target).dom.className == 'color-name'){",
                                    "    Ext.get(e.target).on('blur', function(){",
                                    "        record.get('color')[idx].name = Ext.get(e.target).getValue();",
                                    "    });",
                                    "}",
                                    "//click to connect a design symbol to each colorway",
                                    "else if(Ext.get(e.target).dom.className == 'btn-setsymbol'){",
                                    "    var symbols = dataview.up('#eastCon').down('#behalfCon').symbols;",
                                    "    if(symbols.length === 0){//새로시작하는 칼라웨이의 경우 Erp에도 해당 새 차수가 없을때",
                                    "        var allRecords = me.getAllRecords();",
                                    "        for(var i=0; i<allRecords.length; i++){",
                                    "            if(allRecords[i].data.chasu == 1 && allRecords[i].data.group === 0){//첫번째 차수 디폴트 선택",
                                    "                symbols = allRecords[i].get('behalf');",
                                    "            }",
                                    "        }",
                                    "",
                                    "        if(symbols.length === 0){//그래도 symbol이 없으면",
                                    "            Ext.toast('디자인에 적용된 디자인기호가 없습니다.');",
                                    "            return;",
                                    "        }",
                                    "    }",
                                    "    var sWin = Ext.create('Ext.window.Window', {",
                                    "        width:400,",
                                    "        height:130,",
                                    "        layout:column,",
                                    "        padding:15,",
                                    "        title:'디자인기호 연결',",
                                    "        alwaysOnTop:true",
                                    "    }).show();",
                                    "",
                                    "    var sbUnit = {",
                                    "        xtype:'button',",
                                    "        ui:'plain-toolbar-small',",
                                    "        style:'border:1px solid #cecece;cursor:pointer',",
                                    "        overItemCls:'x-column-header-over',",
                                    "        width:50,",
                                    "        height:30,",
                                    "        listeners:{",
                                    "            afterrender:function(sLab){",
                                    "                sLab.el.on('click', function(){",
                                    "                    var target = dataview.getStore().getAt(0).get('behalf');",
                                    "                    target[idx] = sLab.text;",
                                    "                    dataview.refresh();",
                                    "                    sWin.close();",
                                    "                });",
                                    "",
                                    "            }",
                                    "        }",
                                    "    };",
                                    "    for(var i=0; i<symbols.length; i++){",
                                    "        sbUnit.text = symbols[i];",
                                    "        sWin.add(sbUnit);",
                                    "    }",
                                    "}",
                                    ""
                                ],
                                "name": "itemclick",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string",
                                "scope": "string"
                            },
                            "name": "onDataviewItemClick",
                            "designerId": "d716d3f6-2ec5-4b6d-a5c5-8ec5ec77e20f"
                        },
                        {
                            "type": "Ext.XTemplate",
                            "reference": {
                                "name": "itemTpl",
                                "type": "object"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|displayName": "itemTpl",
                                "implHandler": [
                                    "<tpl for='.'>",
                                    "    <tpl if=\"group == 0\">",
                                    "        <div class='colorways-unit'>",
                                    "            <input type='radio' class='color-chk' name='color_select' value='{group}' idx='{[xindex]}' {[this.getCheck(values)]}>",
                                    "            <span style=\"color:#678fcd;cursor:pointer\" class='colorway-name'>{color_name}</span>",
                                    "            <ul>",
                                    "                <tpl for=\"color\">",
                                    "                    <li>",
                                    "                        <span>{[this.getColorIndex(xindex, values, true)]}</span>",
                                    "                        <i class='color-button' style='width:20px;height:20px;display:inline-block;background-color:{color}' idx='{[xindex]}'  title=\"{color}\"></i>",
                                    "                        <input class=\"defalut-color\" type='text' name='color_name' class='color-name' value='{[this.getBehalf(parent, xindex)]}' idx='{[xindex]}' style='height:26px;border:1px solid #cecece;color:#999999;width:100px'/>",
                                    "                        <button class=\"btn-setsymbol\"  idx='{[xindex]}'>기호적용</button>",
                                    "                    </li>    ",
                                    "                </tpl>    ",
                                    "            </ul>    ",
                                    "        </div>    ",
                                    "    <tpl else>",
                                    "        <div class='colorways-unit'>",
                                    "            {[this.setIndex()]}        ",
                                    "            <input type='radio' name='color_select' class='color-chk' value='{group}' idx='{[xindex]}' {[this.getCheck(values)]}>",
                                    "            <span style='cursor:default;color:#678fcd;cursor:pointer'  class='colorway-name'>{color_name}</span>",
                                    "            <i class=\"fa fa-trash remove-record\" aria-hidden=\"true\" index=\"{#}\" style='margin-top:7px;float:right;display:{[this.checkCount(values)]};margin-left:10px;cursor:pointer'></i>    ",
                                    "            <i class=\"fa fa-pencil edit-title\" oldname=\"{color_name}\"  aria-hidden=\"true\" style='margin-top:7px;float:right;display:{[this.checkCount(values)]};margin-left:10px;cursor:pointer'></i>",
                                    "            <ul>",
                                    "                <tpl for=\"color\">",
                                    "                    <li>",
                                    "                        <span>{[this.getColorIndex(xindex, values)]}</span>",
                                    "                        <i class='color-button' style='background-color:{color}' idx='{[xindex]}' title=\"{color}\"></i>",
                                    "                        <input type='text' name='color_name' class='color-name' value='{name}' idx='{[xindex]}' style='border:1px solid #cecece;color:#999999;width:130px'/>",
                                    "                        <i class=\"fa fa-chevron-up color-button-up\"  idx='{[xindex]}' aria-hidden=\"true\"></i>",
                                    "                        <i class=\"fa fa-chevron-down color-button-down\" idx='{[xindex]}' aria-hidden=\"true\"></i>",
                                    "                        <i class=\"fa fa-th colorchip\" idx='{[xindex]}' aria-hidden=\"true\"></i>",
                                    "                    </li>",
                                    "                </tpl>",
                                    "            </ul>",
                                    "        </div>",
                                    "    </tpl>",
                                    "</tpl>"
                                ]
                            },
                            "configAlternates": {
                                "designer|displayName": "string",
                                "implHandler": "code"
                            },
                            "name": "itemTpl",
                            "designerId": "a7b6434a-ce9a-4e1b-948f-aad053faf1de",
                            "cn": [
                                {
                                    "type": "templatefunction",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|params": [
                                            "values"
                                        ],
                                        "fn": "checkCount",
                                        "implHandler": [
                                            "if(values.group === 0){",
                                            "    return 'none';",
                                            "}",
                                            "else{",
                                            "    return 'inline';",
                                            "}"
                                        ]
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "fn": "string",
                                        "implHandler": "code"
                                    },
                                    "name": "checkCount",
                                    "designerId": "3b1a03d3-c191-42f0-af56-05f23077af3e"
                                },
                                {
                                    "type": "templatefunction",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|params": [
                                            "values"
                                        ],
                                        "fn": "getCheck",
                                        "implHandler": [
                                            "var val = (values.check)? 'checked' : '';",
                                            "return val;"
                                        ]
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "fn": "string",
                                        "implHandler": "code"
                                    },
                                    "name": "getCheck",
                                    "designerId": "ef8adfbc-5ffe-449e-ab07-b3c12a5d29f0"
                                },
                                {
                                    "type": "templatefunction",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "setIndex",
                                        "implHandler": [
                                            "this.index = this.index + 1;"
                                        ]
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code"
                                    },
                                    "name": "setIndex",
                                    "designerId": "496a60e7-df37-4f11-aa70-b38d16ead744"
                                },
                                {
                                    "type": "templatefunction",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|params": [
                                            "index",
                                            "values",
                                            "isDefault"
                                        ],
                                        "fn": "getColorIndex",
                                        "implHandler": [
                                            "var val = index.toString();",
                                            "if(val.length == 1) val = '0' + val;",
                                            "//show index number in red if color is not defined",
                                            "if(isDefault) values.isExist = true; // 디자인디폴트의 여우 기본 색 표시",
                                            "if(!values.isExist) val = '<span style=\"color:red\">' + val + '</span>';",
                                            "return val;"
                                        ]
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "fn": "string",
                                        "implHandler": "code"
                                    },
                                    "name": "getColorIndex",
                                    "designerId": "4cdb3ee5-6ccd-4240-8b54-b3ebe17709f0"
                                },
                                {
                                    "type": "templatefunction",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|params": [
                                            "parent",
                                            "index"
                                        ],
                                        "fn": "getBehalf",
                                        "implHandler": [
                                            "if(parent[0].behalf.length > 0){",
                                            "    if(parent[0].behalf[index -1] !== undefined){",
                                            "        return parent[0].behalf[index -1];",
                                            "    }",
                                            "}"
                                        ]
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "fn": "string",
                                        "implHandler": "code"
                                    },
                                    "name": "getBehalf",
                                    "designerId": "ba600143-8cd1-43d1-b715-3cbad9530172"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "viewcontrollereventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onColor_windowRender",
                "implHandler": [
                    "component.setMaxHeight(windowMaxHeight);",
                    ""
                ],
                "name": "render",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string"
            },
            "name": "onColor_windowRender",
            "designerId": "d180ab1a-2301-4e6b-ae54-a68937171262"
        },
        {
            "type": "viewcontrollereventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onColor_windowBeforeRender",
                "implHandler": [
                    "languageSet.Korean.colorway = {};",
                    "languageSet.English.colorway = {};",
                    "",
                    "languageSet.English.colorway = {",
                    "    addChasu:'Add new group of coloryway',",
                    "    colorway:'Colorway',",
                    "    noDefaultChange:'Default colorway cannot be changed.',",
                    "    getChasulistFromERP:'Getting colorway infomation by each time',",
                    "    noChasuInfoInERP:'Nothing was found in ERP',",
                    "    noNumberOfColorInfo:'As no number of colors updated, it will be extracted automatically',",
                    "    updateChasu:'Update the colorways order base on ERP',",
                    "};",
                    "languageSet.Korean.colorway = {",
                    "    addChasu:'칼라웨이 차수 추가',",
                    "    colorway:'칼라웨이',",
                    "    noDefaultChange:'디폴트 칼라웨이는 바꿀수 없습니다.',",
                    "    getChasulistFromERP:'ERP에서 Colorway 차수 정보 가져오기',",
                    "    noChasuInfoInERP:'ERP에서 해당 정보를 발견할 수 없습니다.',",
                    "    noNumberOfColorInfo:'입력된 도수 정보가 없어 자동으로 추출된 값을 사용합니다.',",
                    "    updateChasu:'ERP로부터 차수 업데이트'",
                    "};",
                    ""
                ],
                "name": "beforerender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string"
            },
            "name": "onColor_windowBeforeRender",
            "designerId": "8ea1f07e-65a1-4ecd-b15a-efbfd826f35b"
        },
        {
            "type": "viewcontrollereventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onColor_windowClose",
                "implHandler": [
                    "if(Ext.getCmp('colorFinder')){",
                    "    Ext.getCmp('colorFinder').close();",
                    "}",
                    "if(Ext.getCmp('colorChipWin')){",
                    "    Ext.getCmp('colorChipWin').close();",
                    "}"
                ],
                "name": "close",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string"
            },
            "name": "onColor_windowClose",
            "designerId": "e2ace7cd-342c-4ab9-a2e3-56e67dc2e81b"
        }
    ]
}
/*
 * File: app/controller/Login.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Actor.controller.Login', {
    extend: 'Ext.app.Controller',

    sessionCheck: function() {
        var me = this;
        Ext.data.JsonP.request({
            url:getSessionApi(),
            success:function(response){
                if(response.nvm_id !== '' && response.nvm_id !== undefined){
                    sessionId = response.nvm_id;
                    me.viewDoor(1);
                }
                else{
                    me.viewDoor(0);
                }
            }
        });
    },

    viewDoor: function(num) {
        var door = Ext.create(appName + '.view.Door', {
            renderTo:Ext.getBody()
        });
        door.setActiveItem(num);
        if(num == 1) this.onLoginSuccess(door);
    },

    /*
        After login success
        @params oor
    */
    onLoginSuccess: function(door) {
        var splash;
        /* get company information */
        Ext.data.JsonP.request({
            url:domain + '/json/site',
            success:function(response){
                companyInfo = response.siteConfig;
                getController('Main').getMainView().getViewModel().setData({siteName:companyInfo.sitename});
                var mainView = getController('Main').getMainView();
                var coverStyle = '';
                if(companyInfo.company_logo){
                    coverStyle += '<div style="width:100%;text-align:center;margin:110px 0 0 0"><img src="'+companyInfo.company_logo+'" style="max-height:100px;max-width:200px"></div>';
                }
                coverStyle += '<div style="width:100%;text-align:center;margin-top:8px">'+companyInfo.company_name+'</div>';
                coverStyle += '<div style="cursor:pointer;font-size:25px;font-weight:bold;color:#424650;text-align:center;margin-top:10px">';
                coverStyle += companyInfo.sitename;
                if(!Ext.getCmp('contentCover')){
                    splash = Ext.create('Ext.container.Container', {
                        renderTo:Ext.getBody(),
                        id:'contentCover',
                        style:'z-index:10;background-color:#F9FCFF !important;left:0px;top:0px',
                        floating:true,
                        width:600,
                        height:350,
                        hidden:true,
                        x:(window.innerWidth - 600 + Ext.getCmp('westPanel').getWidth())/2,
                        y:(window.innerHeight - 350)/2,
                        html:coverStyle

                    });
                }
            }
        });

        /* load user Info */
        Ext.data.JsonP.request({
            params:{
                nvm_id:sessionId
            },
            url:getMemberViewApi(),
            success:function(response){
                //save user infromation to global
                userInfo = response.member;
                //view shortcut view stack after login
                door.setActiveItem(1);
                //generate mainView at background
                getController('Config').initialize();

                //set shortcut list to shortcut container
                var scBox= door.down('#shortcutsBox');
                var val = response.member.nv_9;
                if(val !== null && val.trim() !== ''){
                    shortcuts = eval('('+ val + ')');
                }
                getController('Config').setTopShortcuts();

                /* shorcut for customer choose */
                if(val !== null && val !== ''){
                    Ext.Array.each(shortcuts, function(entry){
                        if(entry.icon === undefined){
                            entry.icon = 'folder-o';
                        }
                        var scUnit = Ext.create(appName + '.view.Shortcut', {
                            width:100,
                            height:100,
                            categoryId:entry.caId,
                            categoryName:entry.caName,
                            itemId:'shortcut_' +  entry.caId,
                            isWork:entry.isWork,
                            displayType:getController('Config').getLayout(entry.displayType),
                            listeners:{
                                click:function(button, container){
                                    var sc = button.up('shortcut');
                                    var door = Ext.getCmp('door');
                                    Ext.getCmp('headerPanel').setHidden(false);
                                    Ext.getCmp('westPanel').setHidden(false);
                                    Ext.getCmp('centerPanel').setHidden(false);
                                    if(sc.isWork){
                                        var workBtn = Ext.getCmp('westPanel').down('#work_' + sc.categoryId);
                                        //check if wokrgroup shortcut has been deleted
                                        if(workBtn === undefined || workBtn === null){
                                            var record = Ext.data.Record.create([
                                                {name:'id'}, {name:'title'}, {name:'layout'}, {name:'icon'}, {name:'isWork'}
                                            ]);
                                            record.set({
                                                id:sc.categoryId,
                                                isWork:true
                                            });
                                            Ext.Msg.alert('Alert', loc.config.deleltedShortcut, function(btn){
                                                getController('Config').addDelShortcut(record, 'del');
                                                document.location.href = 'index.html';
                                            });
                                            return;
                                        }
                                        workBtn.fireEvent('click', workBtn);
                                        door.isDestoryed = true;
                                        door.destroy();
                                        workBtn.up('panel').expand();
                                    }
                                    else{
                                        var tree = Ext.getCmp('categoryTree');
                                        var grid = getController('Main').getGrid(sc.categoryId, sc.displayType, sc.categoryName);
                                        grid.on('categoryoptionupdate', function(){
                                            getController('Main').displayGrid(grid);
                                            setTimeout(function(){
                                                tree.expand();
                                                door.isDestoryed = true;
                                            }, 500);
                                        });
                                        var listTab = getController('Main').getListTab();
                                        listTab.on('listcomplete', function showView(){
                                            listTab.un('listcomplete', showView);
                                            door.destroy();
                                        });
                                    }
                                }
                            }
                        });
                        scUnit.setButtonStyle(
                            {
                                color:'white',
                                'font-size':'30px'
                            }
                        );
                        scUnit.setTitle(entry.caName);
                        scUnit.setIcon(entry.icon);
                        scBox.add(scUnit);
                    });
                }

                /////////////////////////////////////////////////////////
                // to view initial scene without entering any category //
                /////////////////////////////////////////////////////////
                var mainSc = Ext.create(appName + '.view.Shortcut', {
                    width:100,
                    height:100,
                    listeners:{
                        click:function(){
                            splash.setHidden(false);
                            Ext.getCmp('door').destroy();
                            Ext.getCmp('headerPanel').setHidden(false);
                            Ext.getCmp('westPanel').setHidden(false);
                            Ext.getCmp('centerPanel').setHidden(false);
                            Ext.getCmp('categoryTree').expand();

                        }
                    }
                });

                mainSc.setButtonStyle(
                    {
                        color:'white',
                        'font-size':'30px'
                    }
                );
                mainSc.setIcon('home');
                mainSc.setTitle('Main');
                scBox.add(mainSc);
                ///////////////////////
                // to go smartory PD //
                ///////////////////////
                if(userInfo.nv_level == 10){//shortcut for pd
                    var pdSc = Ext.create(appName + '.view.Shortcut', {
                        width:100,
                        height:100,
                        listeners:{
                            click:function(){
                                var pdURL = domain + '/main/category.jsp';
                                window.open(pdURL, '_blank');
                            }
                        }
                    });
                    pdSc.setButtonStyle(
                        {
                            color:'white',
                            'font-size':'33px'
                        }
                    );
                    pdSc.setTitle('관리자 ' + loc.main.config + '(Smartori PD)');
                    pdSc.setIcon('cog');
                    scBox.add(pdSc);
                    Ext.getCmp('mainView').down('#btnGoPd').setHidden(false);
                }
            }
        });
    }

});

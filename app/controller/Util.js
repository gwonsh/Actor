/*
 * File: app/controller/Util.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Actor.controller.Util', {
    extend: 'Ext.app.Controller',

    copyToClipboard: function(url) {
        if(!getController('Main').hasUserPermission('download')){//check the download permission
            Ext.toast(loc.error.lowerLevelToCopy);
            return;
        }
        if(!detectIE()){
            var temp = prompt(loc.viewer.copyToClipboard, url);
        }
        else {
            window.clipboardData.setData("Text", url);
            Ext.toast(loc.main.copied);
        }
    },

    hexToRGB: function(hexcode) {
        var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hexcode);
        return result ? {
            r: parseInt(result[1], 16),
            g: parseInt(result[2], 16),
            b: parseInt(result[3], 16)
        } : null;
    },

    isHex: function(value) {
        var val = false;
        var isOk = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/i.test(value);
        if(isOk) val = true;
        return val;
    },

    isNumber: function(event) {
        var key = event.keyCode;
        if(!(key==8 || key==9||key==13||key==46||key==144 ||(key>=48&&key<=57)||key==110||key==190)){
            Ext.MessageBox.alert(loc.main.notice, loc.main.onlyNumber);
            event.returnValue=false;
        }
    },

    getOperator: function(str) {
        var sc = ['x', '-', '+', ')', '(', '/', '*'];
        var chars = [];
        var c = '';
        for (var i=0; i<str.length; i++){
            if(sc.indexOf(str.charAt(i)) == -1){//필드 번호이면
                c += str.charAt(i);
                if(i == str.length - 1){//마지막 글자가 지정된 글자중 하나가 아니면
                    if(sc.indexOf(str.charAt(i)) == -1){
                        chars.push('data_' + c);
                    }
                }
            }
            else{//연삭식이면
                var sStr = str.charAt(i);
                if(c !== '') chars.push('data_' + c);
                if(sStr == 'x') sStr = '*';
                chars.push(sStr);
                c = '';
            }
        }
        return chars;
    },

    parseDate: function(dt) {
        var val = (localLanguage == 'English')? Ext.Date.format(dt, 'm-d-Y') : Ext.Date.format(dt, 'Y-m-d');
        return val;
    },

    getUID: function() {
        return Math.random().toString(36).substring(2) + (new Date()).getTime().toString(36);
    },

    copyObject: function(obj) {
        if (obj === null || typeof(obj) !== 'object')
            return obj;
        var copy = obj.constructor();
        if(copy === undefined){
            copy = obj;
        }
        for (var attr in obj) {
            if (obj.hasOwnProperty(attr)) {
                copy[attr] = obj[attr];
            }
        }
        return copy;
    }

});

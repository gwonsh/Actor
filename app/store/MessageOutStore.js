/*
 * File: app/store/MessageOutStore.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Actor.store.MessageOutStore', {
    extend: 'Ext.data.Store',

    requires: [
        'Ext.data.proxy.JsonP',
        'Ext.data.reader.Json',
        'Ext.data.field.Boolean'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            pageSize: 50,
            storeId: 'MessageOutStore',
            proxy: {
                type: 'jsonp',
                api: {
                    read: domain+'/message/send?psize=50'
                },
                limitParam: 'psize',
                reader: {
                    type: 'json',
                    rootProperty: 'messageList',
                    totalProperty: 'page.totCount'
                }
            },
            fields: [
                {
                    name: 'bd_idx'
                },
                {
                    name: 'content'
                },
                {
                    name: 'idx'
                },
                {
                    name: 'message_type'
                },
                {
                    name: 'recv_id'
                },
                {
                    name: 'send_date_time'
                },
                {
                    name: 'send_read_time'
                },
                {
                    name: 'subject'
                },
                {
                    name: 'send_id'
                },
                {
                    name: 'recv_photo'
                },
                {
                    name: 'recv_name'
                },
                {
                    name: 'recv_list'
                },
                {
                    type: 'boolean',
                    defaultValue: false,
                    name: 'isDoc'
                }
            ],
            listeners: {
                load: {
                    fn: me.onJsonpstoreLoad,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onJsonpstoreLoad: function(store, records, successful, operation, eOpts) {
        for(var i=0; i<records.length; i++){
            if(records[i].get('message_type') !== 0) records[i].set('isDoc', true);
        }
        store.fireEvent('messagestorecomplete', store);
    }

});
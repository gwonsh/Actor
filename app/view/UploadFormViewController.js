/*
 * File: app/view/UploadFormViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Actor.view.UploadFormViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.uploadform',

    onFdSubjectRender: function(component, eOpts) {
        if(getController('Main').getListTab().getActiveTab())
        component.setFieldLabel(getController('Main').getListTab().getActiveTab().subjectTitle);
    },

    onFdColortagRender: function(component, eOpts) {
        if(config.option.colorTag == '1' || config.option.colorTag == 'true'){
            var store = Ext.create('Ext.data.Store', {
                fields:[
                {
                    name:'colorcode'
                },
                {
                    name:'colorname',
                    convert:function(v, rec){
                        if(v === null || v === ''|| v === undefined ){
                            v = rec.get('colorcode');
                        }
                        return v;
                    }
                },
                {
                    name:'submitvalue',
                    convert:function(v, rec){
                        var cn = rec.get('colorname');
                        var cc = rec.get('colorcode');
                        if(cn === null || cn === ''|| cn === undefined ){
                            cn = cc;
                        }
                        return cc + ', ' + cn;
                    }
                }
                ],
                data:companyInfo.colortag
            });
            component.setStore(store);
        }
        else{
            component.setHidden(true);
        }
    }

});

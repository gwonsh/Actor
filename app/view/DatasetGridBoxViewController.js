/*
 * File: app/view/DatasetGridBoxViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Actor.view.DatasetGridBoxViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.datasetgridbox',

    onBtnAddColumnClick: function(button, e, eOpts) {
        var grid = button.up('datasetgridbox').down('gridpanel');
        var store = grid.getStore();
        var emptyData = {subIdx:''};
        Ext.Array.each(grid.colsInfo, function(entry){
            if(entry.cols_type != 'date'){
                emptyData[entry.cols_idx] = '';
            }
        });
        store.add(emptyData);

    },

    onBtnDelColumnClick: function(button, e, eOpts) {
        var grid = button.up('datasetgridbox').down('gridpanel');
        var selected = grid.getSelectionModel().getSelection();
        var store = grid.getStore();
        store.on('remove', function onRemove(){
            store.un('remove', onRemove);
            //     if(store.getCount() === 0){
            //         var emptyData = {subIdx:''};
            //         Ext.Array.each(grid.colsInfo, function(entry){
            //             if(entry.cols_type != 'date'){
            //                 emptyData[entry.cols_idx] = '';
            //             }
            //         });
            //         store.insert(0, emptyData);
            //     }
            grid.getView().refresh();
        });
        if(selected.length === 0){
            Ext.MessageBox.alert(loc.main.notice, loc.upload.noneSelected);
        }
        else{
            store.remove(selected);
        }
    },

    onBtnDelAllColumnClick: function(button, e, eOpts) {
        var grid = button.up('datasetgridbox').down('gridpanel');
        var store = grid.getStore();
        store.removeAll();
        var emptyData = {subIdx:''};
        Ext.Array.each(grid.colsInfo, function(entry){
            if(entry.cols_type != 'date'){
                emptyData[entry.cols_idx] = '';
            }
        });
        store.insert(0, emptyData);
    }

});

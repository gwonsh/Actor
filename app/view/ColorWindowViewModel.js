/*
 * File: app/view/ColorWindowViewModel.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Actor.view.ColorWindowViewModel', {
    extend: 'Ext.app.ViewModel',
    alias: 'viewmodel.colorwindow',

    requires: [
        'Ext.data.Store',
        'Ext.data.field.Integer',
        'Ext.data.field.Boolean',
        'Ext.data.proxy.JsonP',
        'Ext.data.reader.Json'
    ],

    stores: {
        ColorwayStore: {
            fields: [
                {
                    name: 'color'
                },
                {
                    name: 'color_name'
                },
                {
                    name: 'user'
                },
                {
                    type: 'int',
                    name: 'chasu'
                },
                {
                    type: 'int',
                    name: 'bd_idx'
                },
                {
                    type: 'int',
                    name: 'group'
                },
                {
                    type: 'boolean',
                    name: 'check'
                },
                {
                    name: 'behalf'
                },
                {
                    name: 'reorderColors'
                }
            ]
        },
        SavedColorway: {
            fields: [
                {
                    name: 'color'
                },
                {
                    name: 'color_name'
                },
                {
                    name: 'user'
                },
                {
                    type: 'int',
                    name: 'chasu'
                },
                {
                    type: 'int',
                    name: 'bd_idx'
                },
                {
                    type: 'int',
                    name: 'group'
                },
                {
                    type: 'boolean',
                    name: 'check'
                },
                {
                    name: 'behalf'
                },
                {
                    convert: function(v, rec) {
                        for(var i=0; i<v.length; i++){
                            //     if(v[i].cols_code == 'bdIdx') rec.set('bd_idx', v[i].data_val);
                            if(v[i].cols_code == 'symbols') rec.set('behalf', eval(v[i].data_val));
                            if(v[i].cols_code == 'chasu') rec.set('chasu', v[i].data_val);
                            if(v[i].cols_code == 'colorway') rec.set('color', eval(v[i].data_val));
                            if(v[i].cols_code == 'colorgroup') rec.set('group', v[i].data_val);
                            if(v[i].cols_code == 'colorwaytitle') rec.set('color_name', v[i].data_val);
                            if(v[i].cols_code == 'selectedcheck') rec.set('check', v[i].data_val);
                        }
                    },
                    name: 'bd_data'
                }
            ],
            proxy: {
                type: 'jsonp',
                reader: {
                    type: 'json',
                    rootProperty: 'binderList'
                }
            }
        }
    }

});
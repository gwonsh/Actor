/*
 * File: app/view/AttachUnit.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Actor.view.AttachUnit', {
    extend: 'Ext.container.Container',
    alias: 'widget.attachunit',

    requires: [
        'Actor.view.AttachUnitViewModel',
        'Actor.view.AttachUnitViewController',
        'Ext.container.Container',
        'Ext.form.Label'
    ],

    controller: 'attachunit',
    viewModel: {
        type: 'attachunit'
    },
    margin: '0 5 5 0',
    width: 86,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    items: [
        {
            xtype: 'container',
            height: 70,
            itemId: 'imageCon',
            margin: '0 8 0 0',
            style: 'border:1px solid #cecece;text-align:center',
            width: 86,
            layout: 'column'
        },
        {
            xtype: 'label',
            itemId: 'fileName',
            style: 'font-size:11px;overflow:hidden'
        },
        {
            xtype: 'label',
            itemId: 'fileSize',
            style: 'font-size:11px;overflow:hidden'
        }
    ],
    listeners: {
        afterrender: 'onContainerAfterRender'
    },

    addFile: function(file, index) {
        var me = this;
        this.file = file;
        this.index = index;
        var types = ['image/png', 'image/gif', 'image/jpg', 'image/jpeg'];
        var me = this;
        var imgStyle = {
            'background-position':'center',
            'background-repeat':'no-repeat'
        };
        if(types.indexOf(file.type) != -1 && file.size <50000000){
            var img = new mOxie.Image();
            imgStyle['background-size'] = 'contain';
            img.onload = function(){
                var dUrl = this.getAsDataURL();
                imgStyle['background-image'] = 'url(' + dUrl + ')';
                me.down('#imageCon').setStyle(imgStyle);
                var clrFld = me.up('form').down('#getColors');
                if(clrFld){//if getColors field exists
                    if(index === 0 && clrFld.getValue() === ''){//only for the first uploaded file
                        var colorsCon = me.up('form').down('#colorsCon');
                        var image = document.createElement('img');
                        image.addEventListener('load', function(){
                            var ct = new ColorThief();
                            var colors = getController('Config').getColorChips(image, colorsCon);
                            var cPt = JSON.stringify(colors);
                            clrFld.setValue(cPt);
                            //             var baster = RGBaster.colors(image, {
                            //                 exclude: [ 'rgb(51,204,153)' ],
                            //                 success:function(payload){
                            //                     for(var i=0;i<payload.palette.length;i++){
                            //                         var chip = {
                            //                             xtype:'component',
                            //                             width:60,
                            //                             height:60,
                            //                             style:'background-color:' + payload.palette[i]
                            //                         };
                            //                         colorsCon.add(chip);
                            //                     }
                            //                 }
                            //             });

                            //window that for configure number of colors
        //                     var nocWin = Ext.create('Ext.window.Window', {
        //                         padding:20,
        //                         items:[
        //                             {
        //                                 xtype:'label',
        //                                 text:loc.upload.numOfColors
        //                             },
        //                             {
        //                                 xtype:'container',
        //                                 width:'100%',
        //                                 layout:{
        //                                     type:'hbox',
        //                                     align:'center'
        //                                 },
        //                                 items:[
        //                                     {
        //                                         xtype:'numberfield',
        //                                         width:66,
        //                                         itemId:'fdColors',
        //                                         value:8
        //                                     },
        //                                     {
        //                                         xtype:'button',
        //                                         text:loc.main.ok,
        //                                         listeners:{
        //                                             click:function(btn){
        //                                                 var ct = new ColorThief();
        //                                                 var colors = btn.up('window').down('#fdColors').getValue();
        //                                                 var pt = ct.getPalette(image, colors);
        //                                                 var cPt = JSON.stringify(pt);
        //                                                 clrFld.setValue(cPt);

        //                                                 for(var i=0; i<pt.length; i++){
        //                                                     var rgb = 'rgb(';
        //                                                     for(var j=0; j<pt[i].length; j++){
        //                                                         rgb += pt[i][j];
        //                                                         if(j<2){
        //                                                             rgb += ',';
        //                                                         }
        //                                                     }
        //                                                     rgb += ')';
        //                                                     var chip = {
        //                                                         xtype:'component',
        //                                                         width:50,
        //                                                         height:50,
        //                                                         style:'background-color:' + rgb
        //                                                     };
        //                                                     colorsCon.add(chip);
        //                                                 }
        //                                                 btn.up('window').close();
        //                                             }
        //                                         }
        //                                     }
        //                                 ]
        //                             }
        //                         ],
        //                         listeners:{
        //                             afterrender:function(win){
        //                                 win.el.on('keyup', function(e){
        //                                     if(e.keyCode == '13'){
        //                                         win.down('button').fireEvent('click', win.down('button'));
        //                                     }
        //                                 });
        //                             }
        //                         }
        //                     }).show();
                        });
                        image.setAttribute('src', dUrl);
                    }
                }
            };
            img.load(file.getSource());
        }
        else{
            var split = file.name.split('.');
            var icoSrc = 'resources/images/ico_ext/ext_' + split[split.length - 1] + '.png';
            var errSrc = 'resources/images/ico_ext/ext_no.png';
            var icoImg = new Image();
            icoImg.src = icoSrc;
            imgStyle['background-size'] = 'auto';
            imgStyle['background-image'] = 'url(' + icoSrc + ')';
            me.down('#imageCon').setStyle(imgStyle);
            icoImg.onerror = function(){
                imgStyle['background-image'] = 'url(' + errSrc + ')';
                me.down('#imageCon').setStyle(imgStyle);
            };
        }
        this.down('#fileName').setText(file.name);
        this.down('#fileSize').setText(getController('Viewer').autoFilesizeFormat(file.size));

    }

});
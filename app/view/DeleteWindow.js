/*
 * File: app/view/DeleteWindow.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Actor.view.DeleteWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.deletewindow',

    requires: [
        'Actor.view.DeleteWindowViewModel',
        'Ext.container.Container',
        'Ext.form.Label',
        'Ext.button.Button'
    ],

    viewModel: {
        type: 'deletewindow'
    },
    modal: true,
    bodyStyle: 'padding:20px',
    defaultListenerScope: true,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    bind: {
        title: '{deleteData}'
    },
    items: [
        {
            xtype: 'container',
            height: 100,
            itemId: 'htmlCon',
            margin: '0 0 20 0',
            width: 400,
            bind: {
                html: '{html}'
            }
        },
        {
            xtype: 'label',
            bind: {
                text: '{delAlert}'
            }
        },
        {
            xtype: 'container',
            itemId: 'btnCon',
            margin: '10 0 10 0',
            layout: {
                type: 'hbox',
                align: 'stretch',
                pack: 'center'
            },
            items: [
                {
                    xtype: 'button',
                    flex: 1,
                    text: 'remove',
                    listeners: {
                        click: 'onButtonClick'
                    }
                }
            ]
        }
    ],

    onButtonClick: function(button, e, eOpts) {
        var url = getDeleteDataApi();
        var delAll = button.up('window').down('#delAll').getValue();
        if(delAll){
            var query = '';
            for(var i=0; i<bdIdxs.length; i++){
                var connecter = (i === 0)? '?' : '&';
                query += connecter + 'bd_idx=' + bdIdxs[i];
            }
            url += query;
        }
        else{
            url += '?bd_idx=' + record.get('bd_idx');
        }
        Ext.data.JsonP.request({
            url:url,
            success:function(response){
                if(response.result){
                    var activeTab = mainCtr.getListTab().getActiveTab();
                    Ext.getStore('dStore_' + activeTab.categoryId).load();
                    if(delAll){
                        activeTab.fireEvent('alldataremoved');
                    }
                    else{
                        activeTab.fireEvent('dataremoved', record.get('bd_idx'));
                    }
                    button.up('window').destroy();

                }
                /* delete connected category for taskgroup plugin */
                if(currentPlugin == 'taskGroup'){
                    var referCa = record.get('bd_refer');
                    Ext.data.JsonP.request({
                        url:domain  + '/json/cateDelete?ca_id=' + referCa,
                        method:'POST',
                        success:function(response){
                            if(response.result){
                                Ext.toast(loc.main.deleteComplete);
                                mainCtr.getMainView().down('#southPanel').removeAll();
                            }
                        }
                    });
                }
            }
        });
    }

});
/*
 * File: app/view/DataGroupWindow.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Actor.view.DataGroupWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.datagroupwindow',

    requires: [
        'Actor.view.DataGroupWindowViewModel',
        'Actor.view.DataGroupWindowViewController',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.view.Table',
        'Ext.grid.plugin.DragDrop',
        'Ext.util.Point',
        'Ext.toolbar.Paging',
        'Ext.form.field.Text',
        'Ext.button.Button'
    ],

    config: {
        categoryId: '',
        type: 'normal'
    },

    controller: 'datagroupwindow',
    viewModel: {
        type: 'datagroupwindow'
    },
    modal: true,
    itemId: 'mywindow',
    width: 850,
    bodyPadding: 20,
    ghost: true,
    maximizable: true,
    defaultListenerScope: true,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    items: [
        {
            xtype: 'container',
            flex: 1,
            itemId: 'listContainer',
            layout: 'fit',
            items: [
                {
                    xtype: 'gridpanel',
                    type: 'normal',
                    itemId: 'dgGrid',
                    style: 'border:1px solid #cecece',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'string',
                            text: 'String'
                        }
                    ],
                    viewConfig: {
                        plugins: [
                            {
                                ptype: 'gridviewdragdrop',
                                ddGroup: 'gridData'
                            }
                        ]
                    },
                    dockedItems: [
                        {
                            xtype: 'pagingtoolbar',
                            dock: 'bottom',
                            itemId: 'pagingToolbar',
                            width: 360,
                            displayInfo: true,
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'dgSearch',
                                    margin: '0 0 0 3',
                                    fieldLabel: 'Label',
                                    hideLabel: true,
                                    listeners: {
                                        afterrender: {
                                            fn: 'onDgSearchAfterRender',
                                            scope: 'controller'
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'findData',
                                    margin: '0 6 0 6',
                                    glyph: 'xf002@FontAwesome',
                                    listeners: {
                                        click: 'onFindDataClick'
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    listeners: {
        beforerender: {
            fn: 'onWindowBeforeRender',
            scope: 'controller'
        },
        afterlayout: {
            fn: 'onMywindowAfterLayout',
            scope: 'controller'
        }
    },

    onFindDataClick: function(button, e, eOpts) {
        var val = encodeURIComponent(button.up('pagingtoolbar').down('#dgSearch').getValue());
        var ctrl = getController('Main');
        var cId = button.up('window').relatedCategory;
        var query = "&se_all=" + val + '&ca_id=' + cId;

        var grid = button.up('pagingtoolbar').up('gridpanel');
        grid.mask();
        grid.on('listcomplete', function onListComplete(cId, grid){
            grid.un('listcomplete', onListComplete);
            grid.unmask();
        });

        ctrl.getServerData(cId, query, button.up('pagingtoolbar').up('gridpanel'));
    }

});
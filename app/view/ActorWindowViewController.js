/*
 * File: app/view/ActorWindowViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Actor.view.ActorWindowViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.actorwindow',

    onTreeItemClick: function(dataview, record, item, index, e, eOpts) {
        if(record){
            dataview.up('window').categoryId = record.get('id');
        }

    },

    onPagingToolbarAfterRender: function(component, eOpts) {
        component.up('window').fireEvent('pagingtoolbarcomplete', component, this.getView());
    },

    onWindowBeforeRender: function(component, eOpts) {
        component.setMaxHeight(windowMaxHeight);
        var tree = component.down('#tree');
        tree.setTitle(loc.main.category);
        var tStore = Ext.create('Ext.data.TreeStore', {
            //     model:'CateModel',
            fields:[
            {name:'title'},
            {name:'lazy'},
            /* category id to expand tree automactically when click expand icon */
            /* cateList?node = 'id' */
            {
                name:'id',
                mapping:'data.id'
            },
            {
                name:'text',
                mapping:'title'
            },
            /* check if need to show the expand icon  */
            {
                name:'leaf',
                convert:function(v, record){
                    return (record.get('lazy') === false);
                }
            }
            ],
            proxy: {
                type: 'jsonp',
                reader: {
                    type: 'json'
                },
                api: {
                    read: getCategoryListApi()
                }
            }
        });
        tStore.load();
        tree.setStore(tStore);
        var ctrl = getController('Main');

        //when click one of tree node
        tree.onSelect = function(sm, node, index){
            component.down('gridpanel').categoryId = node.id;
            ctrl.getServerData(node.id, '&ca_id=' + node.id, component.down('gridpanel'));
        };
        tree.getSelectionModel().on('select', tree.onSelect);
    }

});
